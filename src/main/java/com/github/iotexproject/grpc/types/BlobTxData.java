// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: proto/types/action.proto
// Protobuf Java Version: 4.29.1

package com.github.iotexproject.grpc.types;

/**
 * Protobuf type {@code iotextypes.BlobTxData}
 */
public final class BlobTxData extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:iotextypes.BlobTxData)
    BlobTxDataOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 1,
      /* suffix= */ "",
      BlobTxData.class.getName());
  }
  // Use BlobTxData.newBuilder() to construct.
  private BlobTxData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private BlobTxData() {
    blobFeeCap_ = "";
    blobHashes_ = emptyList(com.google.protobuf.ByteString.class);
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.github.iotexproject.grpc.types.ActionOuterClass.internal_static_iotextypes_BlobTxData_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.github.iotexproject.grpc.types.ActionOuterClass.internal_static_iotextypes_BlobTxData_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.github.iotexproject.grpc.types.BlobTxData.class, com.github.iotexproject.grpc.types.BlobTxData.Builder.class);
  }

  private int bitField0_;
  public static final int BLOBFEECAP_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object blobFeeCap_ = "";
  /**
   * <code>string blobFeeCap = 1;</code>
   * @return The blobFeeCap.
   */
  @java.lang.Override
  public java.lang.String getBlobFeeCap() {
    java.lang.Object ref = blobFeeCap_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      blobFeeCap_ = s;
      return s;
    }
  }
  /**
   * <code>string blobFeeCap = 1;</code>
   * @return The bytes for blobFeeCap.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getBlobFeeCapBytes() {
    java.lang.Object ref = blobFeeCap_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      blobFeeCap_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int BLOBHASHES_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.ByteString> blobHashes_ =
      emptyList(com.google.protobuf.ByteString.class);
  /**
   * <code>repeated bytes blobHashes = 2;</code>
   * @return A list containing the blobHashes.
   */
  @java.lang.Override
  public java.util.List<com.google.protobuf.ByteString>
      getBlobHashesList() {
    return blobHashes_;
  }
  /**
   * <code>repeated bytes blobHashes = 2;</code>
   * @return The count of blobHashes.
   */
  public int getBlobHashesCount() {
    return blobHashes_.size();
  }
  /**
   * <code>repeated bytes blobHashes = 2;</code>
   * @param index The index of the element to return.
   * @return The blobHashes at the given index.
   */
  public com.google.protobuf.ByteString getBlobHashes(int index) {
    return blobHashes_.get(index);
  }

  public static final int BLOBTXSIDECAR_FIELD_NUMBER = 3;
  private com.github.iotexproject.grpc.types.BlobTxSidecar blobTxSidecar_;
  /**
   * <code>.iotextypes.BlobTxSidecar blobTxSidecar = 3;</code>
   * @return Whether the blobTxSidecar field is set.
   */
  @java.lang.Override
  public boolean hasBlobTxSidecar() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <code>.iotextypes.BlobTxSidecar blobTxSidecar = 3;</code>
   * @return The blobTxSidecar.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.BlobTxSidecar getBlobTxSidecar() {
    return blobTxSidecar_ == null ? com.github.iotexproject.grpc.types.BlobTxSidecar.getDefaultInstance() : blobTxSidecar_;
  }
  /**
   * <code>.iotextypes.BlobTxSidecar blobTxSidecar = 3;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.BlobTxSidecarOrBuilder getBlobTxSidecarOrBuilder() {
    return blobTxSidecar_ == null ? com.github.iotexproject.grpc.types.BlobTxSidecar.getDefaultInstance() : blobTxSidecar_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(blobFeeCap_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 1, blobFeeCap_);
    }
    for (int i = 0; i < blobHashes_.size(); i++) {
      output.writeBytes(2, blobHashes_.get(i));
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(3, getBlobTxSidecar());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(blobFeeCap_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(1, blobFeeCap_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < blobHashes_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeBytesSizeNoTag(blobHashes_.get(i));
      }
      size += dataSize;
      size += 1 * getBlobHashesList().size();
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getBlobTxSidecar());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.github.iotexproject.grpc.types.BlobTxData)) {
      return super.equals(obj);
    }
    com.github.iotexproject.grpc.types.BlobTxData other = (com.github.iotexproject.grpc.types.BlobTxData) obj;

    if (!getBlobFeeCap()
        .equals(other.getBlobFeeCap())) return false;
    if (!getBlobHashesList()
        .equals(other.getBlobHashesList())) return false;
    if (hasBlobTxSidecar() != other.hasBlobTxSidecar()) return false;
    if (hasBlobTxSidecar()) {
      if (!getBlobTxSidecar()
          .equals(other.getBlobTxSidecar())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + BLOBFEECAP_FIELD_NUMBER;
    hash = (53 * hash) + getBlobFeeCap().hashCode();
    if (getBlobHashesCount() > 0) {
      hash = (37 * hash) + BLOBHASHES_FIELD_NUMBER;
      hash = (53 * hash) + getBlobHashesList().hashCode();
    }
    if (hasBlobTxSidecar()) {
      hash = (37 * hash) + BLOBTXSIDECAR_FIELD_NUMBER;
      hash = (53 * hash) + getBlobTxSidecar().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.github.iotexproject.grpc.types.BlobTxData parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.iotexproject.grpc.types.BlobTxData parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.iotexproject.grpc.types.BlobTxData parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.iotexproject.grpc.types.BlobTxData parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.iotexproject.grpc.types.BlobTxData parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.iotexproject.grpc.types.BlobTxData parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.iotexproject.grpc.types.BlobTxData parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.github.iotexproject.grpc.types.BlobTxData parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.github.iotexproject.grpc.types.BlobTxData parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.github.iotexproject.grpc.types.BlobTxData parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.github.iotexproject.grpc.types.BlobTxData parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.github.iotexproject.grpc.types.BlobTxData parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.github.iotexproject.grpc.types.BlobTxData prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code iotextypes.BlobTxData}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:iotextypes.BlobTxData)
      com.github.iotexproject.grpc.types.BlobTxDataOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.iotexproject.grpc.types.ActionOuterClass.internal_static_iotextypes_BlobTxData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.iotexproject.grpc.types.ActionOuterClass.internal_static_iotextypes_BlobTxData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.iotexproject.grpc.types.BlobTxData.class, com.github.iotexproject.grpc.types.BlobTxData.Builder.class);
    }

    // Construct using com.github.iotexproject.grpc.types.BlobTxData.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage
              .alwaysUseFieldBuilders) {
        getBlobTxSidecarFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      blobFeeCap_ = "";
      blobHashes_ = emptyList(com.google.protobuf.ByteString.class);
      blobTxSidecar_ = null;
      if (blobTxSidecarBuilder_ != null) {
        blobTxSidecarBuilder_.dispose();
        blobTxSidecarBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.github.iotexproject.grpc.types.ActionOuterClass.internal_static_iotextypes_BlobTxData_descriptor;
    }

    @java.lang.Override
    public com.github.iotexproject.grpc.types.BlobTxData getDefaultInstanceForType() {
      return com.github.iotexproject.grpc.types.BlobTxData.getDefaultInstance();
    }

    @java.lang.Override
    public com.github.iotexproject.grpc.types.BlobTxData build() {
      com.github.iotexproject.grpc.types.BlobTxData result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.github.iotexproject.grpc.types.BlobTxData buildPartial() {
      com.github.iotexproject.grpc.types.BlobTxData result = new com.github.iotexproject.grpc.types.BlobTxData(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.github.iotexproject.grpc.types.BlobTxData result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.blobFeeCap_ = blobFeeCap_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        blobHashes_.makeImmutable();
        result.blobHashes_ = blobHashes_;
      }
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.blobTxSidecar_ = blobTxSidecarBuilder_ == null
            ? blobTxSidecar_
            : blobTxSidecarBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.github.iotexproject.grpc.types.BlobTxData) {
        return mergeFrom((com.github.iotexproject.grpc.types.BlobTxData)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.github.iotexproject.grpc.types.BlobTxData other) {
      if (other == com.github.iotexproject.grpc.types.BlobTxData.getDefaultInstance()) return this;
      if (!other.getBlobFeeCap().isEmpty()) {
        blobFeeCap_ = other.blobFeeCap_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (!other.blobHashes_.isEmpty()) {
        if (blobHashes_.isEmpty()) {
          blobHashes_ = other.blobHashes_;
          blobHashes_.makeImmutable();
          bitField0_ |= 0x00000002;
        } else {
          ensureBlobHashesIsMutable();
          blobHashes_.addAll(other.blobHashes_);
        }
        onChanged();
      }
      if (other.hasBlobTxSidecar()) {
        mergeBlobTxSidecar(other.getBlobTxSidecar());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              blobFeeCap_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              com.google.protobuf.ByteString v = input.readBytes();
              ensureBlobHashesIsMutable();
              blobHashes_.add(v);
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getBlobTxSidecarFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object blobFeeCap_ = "";
    /**
     * <code>string blobFeeCap = 1;</code>
     * @return The blobFeeCap.
     */
    public java.lang.String getBlobFeeCap() {
      java.lang.Object ref = blobFeeCap_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        blobFeeCap_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string blobFeeCap = 1;</code>
     * @return The bytes for blobFeeCap.
     */
    public com.google.protobuf.ByteString
        getBlobFeeCapBytes() {
      java.lang.Object ref = blobFeeCap_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        blobFeeCap_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string blobFeeCap = 1;</code>
     * @param value The blobFeeCap to set.
     * @return This builder for chaining.
     */
    public Builder setBlobFeeCap(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      blobFeeCap_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>string blobFeeCap = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearBlobFeeCap() {
      blobFeeCap_ = getDefaultInstance().getBlobFeeCap();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <code>string blobFeeCap = 1;</code>
     * @param value The bytes for blobFeeCap to set.
     * @return This builder for chaining.
     */
    public Builder setBlobFeeCapBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      blobFeeCap_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.ByteString> blobHashes_ = emptyList(com.google.protobuf.ByteString.class);
    private void ensureBlobHashesIsMutable() {
      if (!blobHashes_.isModifiable()) {
        blobHashes_ = makeMutableCopy(blobHashes_);
      }
      bitField0_ |= 0x00000002;
    }
    /**
     * <code>repeated bytes blobHashes = 2;</code>
     * @return A list containing the blobHashes.
     */
    public java.util.List<com.google.protobuf.ByteString>
        getBlobHashesList() {
      blobHashes_.makeImmutable();
      return blobHashes_;
    }
    /**
     * <code>repeated bytes blobHashes = 2;</code>
     * @return The count of blobHashes.
     */
    public int getBlobHashesCount() {
      return blobHashes_.size();
    }
    /**
     * <code>repeated bytes blobHashes = 2;</code>
     * @param index The index of the element to return.
     * @return The blobHashes at the given index.
     */
    public com.google.protobuf.ByteString getBlobHashes(int index) {
      return blobHashes_.get(index);
    }
    /**
     * <code>repeated bytes blobHashes = 2;</code>
     * @param index The index to set the value at.
     * @param value The blobHashes to set.
     * @return This builder for chaining.
     */
    public Builder setBlobHashes(
        int index, com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      ensureBlobHashesIsMutable();
      blobHashes_.set(index, value);
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>repeated bytes blobHashes = 2;</code>
     * @param value The blobHashes to add.
     * @return This builder for chaining.
     */
    public Builder addBlobHashes(com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      ensureBlobHashesIsMutable();
      blobHashes_.add(value);
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>repeated bytes blobHashes = 2;</code>
     * @param values The blobHashes to add.
     * @return This builder for chaining.
     */
    public Builder addAllBlobHashes(
        java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
      ensureBlobHashesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, blobHashes_);
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>repeated bytes blobHashes = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearBlobHashes() {
      blobHashes_ = emptyList(com.google.protobuf.ByteString.class);
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }

    private com.github.iotexproject.grpc.types.BlobTxSidecar blobTxSidecar_;
    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.BlobTxSidecar, com.github.iotexproject.grpc.types.BlobTxSidecar.Builder, com.github.iotexproject.grpc.types.BlobTxSidecarOrBuilder> blobTxSidecarBuilder_;
    /**
     * <code>.iotextypes.BlobTxSidecar blobTxSidecar = 3;</code>
     * @return Whether the blobTxSidecar field is set.
     */
    public boolean hasBlobTxSidecar() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>.iotextypes.BlobTxSidecar blobTxSidecar = 3;</code>
     * @return The blobTxSidecar.
     */
    public com.github.iotexproject.grpc.types.BlobTxSidecar getBlobTxSidecar() {
      if (blobTxSidecarBuilder_ == null) {
        return blobTxSidecar_ == null ? com.github.iotexproject.grpc.types.BlobTxSidecar.getDefaultInstance() : blobTxSidecar_;
      } else {
        return blobTxSidecarBuilder_.getMessage();
      }
    }
    /**
     * <code>.iotextypes.BlobTxSidecar blobTxSidecar = 3;</code>
     */
    public Builder setBlobTxSidecar(com.github.iotexproject.grpc.types.BlobTxSidecar value) {
      if (blobTxSidecarBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        blobTxSidecar_ = value;
      } else {
        blobTxSidecarBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>.iotextypes.BlobTxSidecar blobTxSidecar = 3;</code>
     */
    public Builder setBlobTxSidecar(
        com.github.iotexproject.grpc.types.BlobTxSidecar.Builder builderForValue) {
      if (blobTxSidecarBuilder_ == null) {
        blobTxSidecar_ = builderForValue.build();
      } else {
        blobTxSidecarBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>.iotextypes.BlobTxSidecar blobTxSidecar = 3;</code>
     */
    public Builder mergeBlobTxSidecar(com.github.iotexproject.grpc.types.BlobTxSidecar value) {
      if (blobTxSidecarBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0) &&
          blobTxSidecar_ != null &&
          blobTxSidecar_ != com.github.iotexproject.grpc.types.BlobTxSidecar.getDefaultInstance()) {
          getBlobTxSidecarBuilder().mergeFrom(value);
        } else {
          blobTxSidecar_ = value;
        }
      } else {
        blobTxSidecarBuilder_.mergeFrom(value);
      }
      if (blobTxSidecar_ != null) {
        bitField0_ |= 0x00000004;
        onChanged();
      }
      return this;
    }
    /**
     * <code>.iotextypes.BlobTxSidecar blobTxSidecar = 3;</code>
     */
    public Builder clearBlobTxSidecar() {
      bitField0_ = (bitField0_ & ~0x00000004);
      blobTxSidecar_ = null;
      if (blobTxSidecarBuilder_ != null) {
        blobTxSidecarBuilder_.dispose();
        blobTxSidecarBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.iotextypes.BlobTxSidecar blobTxSidecar = 3;</code>
     */
    public com.github.iotexproject.grpc.types.BlobTxSidecar.Builder getBlobTxSidecarBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getBlobTxSidecarFieldBuilder().getBuilder();
    }
    /**
     * <code>.iotextypes.BlobTxSidecar blobTxSidecar = 3;</code>
     */
    public com.github.iotexproject.grpc.types.BlobTxSidecarOrBuilder getBlobTxSidecarOrBuilder() {
      if (blobTxSidecarBuilder_ != null) {
        return blobTxSidecarBuilder_.getMessageOrBuilder();
      } else {
        return blobTxSidecar_ == null ?
            com.github.iotexproject.grpc.types.BlobTxSidecar.getDefaultInstance() : blobTxSidecar_;
      }
    }
    /**
     * <code>.iotextypes.BlobTxSidecar blobTxSidecar = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.BlobTxSidecar, com.github.iotexproject.grpc.types.BlobTxSidecar.Builder, com.github.iotexproject.grpc.types.BlobTxSidecarOrBuilder> 
        getBlobTxSidecarFieldBuilder() {
      if (blobTxSidecarBuilder_ == null) {
        blobTxSidecarBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.iotexproject.grpc.types.BlobTxSidecar, com.github.iotexproject.grpc.types.BlobTxSidecar.Builder, com.github.iotexproject.grpc.types.BlobTxSidecarOrBuilder>(
                getBlobTxSidecar(),
                getParentForChildren(),
                isClean());
        blobTxSidecar_ = null;
      }
      return blobTxSidecarBuilder_;
    }

    // @@protoc_insertion_point(builder_scope:iotextypes.BlobTxData)
  }

  // @@protoc_insertion_point(class_scope:iotextypes.BlobTxData)
  private static final com.github.iotexproject.grpc.types.BlobTxData DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.github.iotexproject.grpc.types.BlobTxData();
  }

  public static com.github.iotexproject.grpc.types.BlobTxData getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<BlobTxData>
      PARSER = new com.google.protobuf.AbstractParser<BlobTxData>() {
    @java.lang.Override
    public BlobTxData parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<BlobTxData> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<BlobTxData> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.github.iotexproject.grpc.types.BlobTxData getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

