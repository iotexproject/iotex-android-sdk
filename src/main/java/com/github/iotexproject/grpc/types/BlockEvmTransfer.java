// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/types/action.proto

package com.github.iotexproject.grpc.types;

/**
 * <pre>
 * Deprecated
 * </pre>
 *
 * Protobuf type {@code iotextypes.BlockEvmTransfer}
 */
public final class BlockEvmTransfer extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:iotextypes.BlockEvmTransfer)
    BlockEvmTransferOrBuilder {
private static final long serialVersionUID = 0L;
  // Use BlockEvmTransfer.newBuilder() to construct.
  private BlockEvmTransfer(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private BlockEvmTransfer() {
    actionEvmTransfers_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new BlockEvmTransfer();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private BlockEvmTransfer(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            blockHeight_ = input.readUInt64();
            break;
          }
          case 16: {

            numEvmTransfers_ = input.readUInt64();
            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              actionEvmTransfers_ = new java.util.ArrayList<com.github.iotexproject.grpc.types.ActionEvmTransfer>();
              mutable_bitField0_ |= 0x00000001;
            }
            actionEvmTransfers_.add(
                input.readMessage(com.github.iotexproject.grpc.types.ActionEvmTransfer.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        actionEvmTransfers_ = java.util.Collections.unmodifiableList(actionEvmTransfers_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.github.iotexproject.grpc.types.ActionOuterClass.internal_static_iotextypes_BlockEvmTransfer_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.github.iotexproject.grpc.types.ActionOuterClass.internal_static_iotextypes_BlockEvmTransfer_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.github.iotexproject.grpc.types.BlockEvmTransfer.class, com.github.iotexproject.grpc.types.BlockEvmTransfer.Builder.class);
  }

  public static final int BLOCKHEIGHT_FIELD_NUMBER = 1;
  private long blockHeight_;
  /**
   * <code>uint64 blockHeight = 1;</code>
   * @return The blockHeight.
   */
  @java.lang.Override
  public long getBlockHeight() {
    return blockHeight_;
  }

  public static final int NUMEVMTRANSFERS_FIELD_NUMBER = 2;
  private long numEvmTransfers_;
  /**
   * <code>uint64 numEvmTransfers = 2;</code>
   * @return The numEvmTransfers.
   */
  @java.lang.Override
  public long getNumEvmTransfers() {
    return numEvmTransfers_;
  }

  public static final int ACTIONEVMTRANSFERS_FIELD_NUMBER = 3;
  private java.util.List<com.github.iotexproject.grpc.types.ActionEvmTransfer> actionEvmTransfers_;
  /**
   * <code>repeated .iotextypes.ActionEvmTransfer actionEvmTransfers = 3;</code>
   */
  @java.lang.Override
  public java.util.List<com.github.iotexproject.grpc.types.ActionEvmTransfer> getActionEvmTransfersList() {
    return actionEvmTransfers_;
  }
  /**
   * <code>repeated .iotextypes.ActionEvmTransfer actionEvmTransfers = 3;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.github.iotexproject.grpc.types.ActionEvmTransferOrBuilder> 
      getActionEvmTransfersOrBuilderList() {
    return actionEvmTransfers_;
  }
  /**
   * <code>repeated .iotextypes.ActionEvmTransfer actionEvmTransfers = 3;</code>
   */
  @java.lang.Override
  public int getActionEvmTransfersCount() {
    return actionEvmTransfers_.size();
  }
  /**
   * <code>repeated .iotextypes.ActionEvmTransfer actionEvmTransfers = 3;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.ActionEvmTransfer getActionEvmTransfers(int index) {
    return actionEvmTransfers_.get(index);
  }
  /**
   * <code>repeated .iotextypes.ActionEvmTransfer actionEvmTransfers = 3;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.ActionEvmTransferOrBuilder getActionEvmTransfersOrBuilder(
      int index) {
    return actionEvmTransfers_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (blockHeight_ != 0L) {
      output.writeUInt64(1, blockHeight_);
    }
    if (numEvmTransfers_ != 0L) {
      output.writeUInt64(2, numEvmTransfers_);
    }
    for (int i = 0; i < actionEvmTransfers_.size(); i++) {
      output.writeMessage(3, actionEvmTransfers_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (blockHeight_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(1, blockHeight_);
    }
    if (numEvmTransfers_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(2, numEvmTransfers_);
    }
    for (int i = 0; i < actionEvmTransfers_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, actionEvmTransfers_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.github.iotexproject.grpc.types.BlockEvmTransfer)) {
      return super.equals(obj);
    }
    com.github.iotexproject.grpc.types.BlockEvmTransfer other = (com.github.iotexproject.grpc.types.BlockEvmTransfer) obj;

    if (getBlockHeight()
        != other.getBlockHeight()) return false;
    if (getNumEvmTransfers()
        != other.getNumEvmTransfers()) return false;
    if (!getActionEvmTransfersList()
        .equals(other.getActionEvmTransfersList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + BLOCKHEIGHT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getBlockHeight());
    hash = (37 * hash) + NUMEVMTRANSFERS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getNumEvmTransfers());
    if (getActionEvmTransfersCount() > 0) {
      hash = (37 * hash) + ACTIONEVMTRANSFERS_FIELD_NUMBER;
      hash = (53 * hash) + getActionEvmTransfersList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.github.iotexproject.grpc.types.BlockEvmTransfer parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.iotexproject.grpc.types.BlockEvmTransfer parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.iotexproject.grpc.types.BlockEvmTransfer parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.iotexproject.grpc.types.BlockEvmTransfer parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.iotexproject.grpc.types.BlockEvmTransfer parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.iotexproject.grpc.types.BlockEvmTransfer parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.iotexproject.grpc.types.BlockEvmTransfer parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.github.iotexproject.grpc.types.BlockEvmTransfer parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.github.iotexproject.grpc.types.BlockEvmTransfer parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.github.iotexproject.grpc.types.BlockEvmTransfer parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.github.iotexproject.grpc.types.BlockEvmTransfer parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.github.iotexproject.grpc.types.BlockEvmTransfer parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.github.iotexproject.grpc.types.BlockEvmTransfer prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Deprecated
   * </pre>
   *
   * Protobuf type {@code iotextypes.BlockEvmTransfer}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:iotextypes.BlockEvmTransfer)
      com.github.iotexproject.grpc.types.BlockEvmTransferOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.iotexproject.grpc.types.ActionOuterClass.internal_static_iotextypes_BlockEvmTransfer_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.iotexproject.grpc.types.ActionOuterClass.internal_static_iotextypes_BlockEvmTransfer_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.iotexproject.grpc.types.BlockEvmTransfer.class, com.github.iotexproject.grpc.types.BlockEvmTransfer.Builder.class);
    }

    // Construct using com.github.iotexproject.grpc.types.BlockEvmTransfer.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getActionEvmTransfersFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      blockHeight_ = 0L;

      numEvmTransfers_ = 0L;

      if (actionEvmTransfersBuilder_ == null) {
        actionEvmTransfers_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        actionEvmTransfersBuilder_.clear();
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.github.iotexproject.grpc.types.ActionOuterClass.internal_static_iotextypes_BlockEvmTransfer_descriptor;
    }

    @java.lang.Override
    public com.github.iotexproject.grpc.types.BlockEvmTransfer getDefaultInstanceForType() {
      return com.github.iotexproject.grpc.types.BlockEvmTransfer.getDefaultInstance();
    }

    @java.lang.Override
    public com.github.iotexproject.grpc.types.BlockEvmTransfer build() {
      com.github.iotexproject.grpc.types.BlockEvmTransfer result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.github.iotexproject.grpc.types.BlockEvmTransfer buildPartial() {
      com.github.iotexproject.grpc.types.BlockEvmTransfer result = new com.github.iotexproject.grpc.types.BlockEvmTransfer(this);
      int from_bitField0_ = bitField0_;
      result.blockHeight_ = blockHeight_;
      result.numEvmTransfers_ = numEvmTransfers_;
      if (actionEvmTransfersBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          actionEvmTransfers_ = java.util.Collections.unmodifiableList(actionEvmTransfers_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.actionEvmTransfers_ = actionEvmTransfers_;
      } else {
        result.actionEvmTransfers_ = actionEvmTransfersBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.github.iotexproject.grpc.types.BlockEvmTransfer) {
        return mergeFrom((com.github.iotexproject.grpc.types.BlockEvmTransfer)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.github.iotexproject.grpc.types.BlockEvmTransfer other) {
      if (other == com.github.iotexproject.grpc.types.BlockEvmTransfer.getDefaultInstance()) return this;
      if (other.getBlockHeight() != 0L) {
        setBlockHeight(other.getBlockHeight());
      }
      if (other.getNumEvmTransfers() != 0L) {
        setNumEvmTransfers(other.getNumEvmTransfers());
      }
      if (actionEvmTransfersBuilder_ == null) {
        if (!other.actionEvmTransfers_.isEmpty()) {
          if (actionEvmTransfers_.isEmpty()) {
            actionEvmTransfers_ = other.actionEvmTransfers_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureActionEvmTransfersIsMutable();
            actionEvmTransfers_.addAll(other.actionEvmTransfers_);
          }
          onChanged();
        }
      } else {
        if (!other.actionEvmTransfers_.isEmpty()) {
          if (actionEvmTransfersBuilder_.isEmpty()) {
            actionEvmTransfersBuilder_.dispose();
            actionEvmTransfersBuilder_ = null;
            actionEvmTransfers_ = other.actionEvmTransfers_;
            bitField0_ = (bitField0_ & ~0x00000001);
            actionEvmTransfersBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getActionEvmTransfersFieldBuilder() : null;
          } else {
            actionEvmTransfersBuilder_.addAllMessages(other.actionEvmTransfers_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.github.iotexproject.grpc.types.BlockEvmTransfer parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.github.iotexproject.grpc.types.BlockEvmTransfer) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private long blockHeight_ ;
    /**
     * <code>uint64 blockHeight = 1;</code>
     * @return The blockHeight.
     */
    @java.lang.Override
    public long getBlockHeight() {
      return blockHeight_;
    }
    /**
     * <code>uint64 blockHeight = 1;</code>
     * @param value The blockHeight to set.
     * @return This builder for chaining.
     */
    public Builder setBlockHeight(long value) {
      
      blockHeight_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint64 blockHeight = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearBlockHeight() {
      
      blockHeight_ = 0L;
      onChanged();
      return this;
    }

    private long numEvmTransfers_ ;
    /**
     * <code>uint64 numEvmTransfers = 2;</code>
     * @return The numEvmTransfers.
     */
    @java.lang.Override
    public long getNumEvmTransfers() {
      return numEvmTransfers_;
    }
    /**
     * <code>uint64 numEvmTransfers = 2;</code>
     * @param value The numEvmTransfers to set.
     * @return This builder for chaining.
     */
    public Builder setNumEvmTransfers(long value) {
      
      numEvmTransfers_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint64 numEvmTransfers = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearNumEvmTransfers() {
      
      numEvmTransfers_ = 0L;
      onChanged();
      return this;
    }

    private java.util.List<com.github.iotexproject.grpc.types.ActionEvmTransfer> actionEvmTransfers_ =
      java.util.Collections.emptyList();
    private void ensureActionEvmTransfersIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        actionEvmTransfers_ = new java.util.ArrayList<com.github.iotexproject.grpc.types.ActionEvmTransfer>(actionEvmTransfers_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.github.iotexproject.grpc.types.ActionEvmTransfer, com.github.iotexproject.grpc.types.ActionEvmTransfer.Builder, com.github.iotexproject.grpc.types.ActionEvmTransferOrBuilder> actionEvmTransfersBuilder_;

    /**
     * <code>repeated .iotextypes.ActionEvmTransfer actionEvmTransfers = 3;</code>
     */
    public java.util.List<com.github.iotexproject.grpc.types.ActionEvmTransfer> getActionEvmTransfersList() {
      if (actionEvmTransfersBuilder_ == null) {
        return java.util.Collections.unmodifiableList(actionEvmTransfers_);
      } else {
        return actionEvmTransfersBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .iotextypes.ActionEvmTransfer actionEvmTransfers = 3;</code>
     */
    public int getActionEvmTransfersCount() {
      if (actionEvmTransfersBuilder_ == null) {
        return actionEvmTransfers_.size();
      } else {
        return actionEvmTransfersBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .iotextypes.ActionEvmTransfer actionEvmTransfers = 3;</code>
     */
    public com.github.iotexproject.grpc.types.ActionEvmTransfer getActionEvmTransfers(int index) {
      if (actionEvmTransfersBuilder_ == null) {
        return actionEvmTransfers_.get(index);
      } else {
        return actionEvmTransfersBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .iotextypes.ActionEvmTransfer actionEvmTransfers = 3;</code>
     */
    public Builder setActionEvmTransfers(
        int index, com.github.iotexproject.grpc.types.ActionEvmTransfer value) {
      if (actionEvmTransfersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureActionEvmTransfersIsMutable();
        actionEvmTransfers_.set(index, value);
        onChanged();
      } else {
        actionEvmTransfersBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .iotextypes.ActionEvmTransfer actionEvmTransfers = 3;</code>
     */
    public Builder setActionEvmTransfers(
        int index, com.github.iotexproject.grpc.types.ActionEvmTransfer.Builder builderForValue) {
      if (actionEvmTransfersBuilder_ == null) {
        ensureActionEvmTransfersIsMutable();
        actionEvmTransfers_.set(index, builderForValue.build());
        onChanged();
      } else {
        actionEvmTransfersBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .iotextypes.ActionEvmTransfer actionEvmTransfers = 3;</code>
     */
    public Builder addActionEvmTransfers(com.github.iotexproject.grpc.types.ActionEvmTransfer value) {
      if (actionEvmTransfersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureActionEvmTransfersIsMutable();
        actionEvmTransfers_.add(value);
        onChanged();
      } else {
        actionEvmTransfersBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .iotextypes.ActionEvmTransfer actionEvmTransfers = 3;</code>
     */
    public Builder addActionEvmTransfers(
        int index, com.github.iotexproject.grpc.types.ActionEvmTransfer value) {
      if (actionEvmTransfersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureActionEvmTransfersIsMutable();
        actionEvmTransfers_.add(index, value);
        onChanged();
      } else {
        actionEvmTransfersBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .iotextypes.ActionEvmTransfer actionEvmTransfers = 3;</code>
     */
    public Builder addActionEvmTransfers(
        com.github.iotexproject.grpc.types.ActionEvmTransfer.Builder builderForValue) {
      if (actionEvmTransfersBuilder_ == null) {
        ensureActionEvmTransfersIsMutable();
        actionEvmTransfers_.add(builderForValue.build());
        onChanged();
      } else {
        actionEvmTransfersBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .iotextypes.ActionEvmTransfer actionEvmTransfers = 3;</code>
     */
    public Builder addActionEvmTransfers(
        int index, com.github.iotexproject.grpc.types.ActionEvmTransfer.Builder builderForValue) {
      if (actionEvmTransfersBuilder_ == null) {
        ensureActionEvmTransfersIsMutable();
        actionEvmTransfers_.add(index, builderForValue.build());
        onChanged();
      } else {
        actionEvmTransfersBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .iotextypes.ActionEvmTransfer actionEvmTransfers = 3;</code>
     */
    public Builder addAllActionEvmTransfers(
        java.lang.Iterable<? extends com.github.iotexproject.grpc.types.ActionEvmTransfer> values) {
      if (actionEvmTransfersBuilder_ == null) {
        ensureActionEvmTransfersIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, actionEvmTransfers_);
        onChanged();
      } else {
        actionEvmTransfersBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .iotextypes.ActionEvmTransfer actionEvmTransfers = 3;</code>
     */
    public Builder clearActionEvmTransfers() {
      if (actionEvmTransfersBuilder_ == null) {
        actionEvmTransfers_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        actionEvmTransfersBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .iotextypes.ActionEvmTransfer actionEvmTransfers = 3;</code>
     */
    public Builder removeActionEvmTransfers(int index) {
      if (actionEvmTransfersBuilder_ == null) {
        ensureActionEvmTransfersIsMutable();
        actionEvmTransfers_.remove(index);
        onChanged();
      } else {
        actionEvmTransfersBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .iotextypes.ActionEvmTransfer actionEvmTransfers = 3;</code>
     */
    public com.github.iotexproject.grpc.types.ActionEvmTransfer.Builder getActionEvmTransfersBuilder(
        int index) {
      return getActionEvmTransfersFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .iotextypes.ActionEvmTransfer actionEvmTransfers = 3;</code>
     */
    public com.github.iotexproject.grpc.types.ActionEvmTransferOrBuilder getActionEvmTransfersOrBuilder(
        int index) {
      if (actionEvmTransfersBuilder_ == null) {
        return actionEvmTransfers_.get(index);  } else {
        return actionEvmTransfersBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .iotextypes.ActionEvmTransfer actionEvmTransfers = 3;</code>
     */
    public java.util.List<? extends com.github.iotexproject.grpc.types.ActionEvmTransferOrBuilder> 
         getActionEvmTransfersOrBuilderList() {
      if (actionEvmTransfersBuilder_ != null) {
        return actionEvmTransfersBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(actionEvmTransfers_);
      }
    }
    /**
     * <code>repeated .iotextypes.ActionEvmTransfer actionEvmTransfers = 3;</code>
     */
    public com.github.iotexproject.grpc.types.ActionEvmTransfer.Builder addActionEvmTransfersBuilder() {
      return getActionEvmTransfersFieldBuilder().addBuilder(
          com.github.iotexproject.grpc.types.ActionEvmTransfer.getDefaultInstance());
    }
    /**
     * <code>repeated .iotextypes.ActionEvmTransfer actionEvmTransfers = 3;</code>
     */
    public com.github.iotexproject.grpc.types.ActionEvmTransfer.Builder addActionEvmTransfersBuilder(
        int index) {
      return getActionEvmTransfersFieldBuilder().addBuilder(
          index, com.github.iotexproject.grpc.types.ActionEvmTransfer.getDefaultInstance());
    }
    /**
     * <code>repeated .iotextypes.ActionEvmTransfer actionEvmTransfers = 3;</code>
     */
    public java.util.List<com.github.iotexproject.grpc.types.ActionEvmTransfer.Builder> 
         getActionEvmTransfersBuilderList() {
      return getActionEvmTransfersFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.github.iotexproject.grpc.types.ActionEvmTransfer, com.github.iotexproject.grpc.types.ActionEvmTransfer.Builder, com.github.iotexproject.grpc.types.ActionEvmTransferOrBuilder> 
        getActionEvmTransfersFieldBuilder() {
      if (actionEvmTransfersBuilder_ == null) {
        actionEvmTransfersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.github.iotexproject.grpc.types.ActionEvmTransfer, com.github.iotexproject.grpc.types.ActionEvmTransfer.Builder, com.github.iotexproject.grpc.types.ActionEvmTransferOrBuilder>(
                actionEvmTransfers_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        actionEvmTransfers_ = null;
      }
      return actionEvmTransfersBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:iotextypes.BlockEvmTransfer)
  }

  // @@protoc_insertion_point(class_scope:iotextypes.BlockEvmTransfer)
  private static final com.github.iotexproject.grpc.types.BlockEvmTransfer DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.github.iotexproject.grpc.types.BlockEvmTransfer();
  }

  public static com.github.iotexproject.grpc.types.BlockEvmTransfer getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<BlockEvmTransfer>
      PARSER = new com.google.protobuf.AbstractParser<BlockEvmTransfer>() {
    @java.lang.Override
    public BlockEvmTransfer parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new BlockEvmTransfer(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<BlockEvmTransfer> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<BlockEvmTransfer> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.github.iotexproject.grpc.types.BlockEvmTransfer getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

