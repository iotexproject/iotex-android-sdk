// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/types/genesis.proto

package com.github.iotexproject.grpc.types;

/**
 * Protobuf type {@code iotextypes.Genesis}
 */
public final class Genesis extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:iotextypes.Genesis)
    GenesisOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Genesis.newBuilder() to construct.
  private Genesis(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Genesis() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Genesis();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Genesis(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            com.github.iotexproject.grpc.types.GenesisBlockchain.Builder subBuilder = null;
            if (blockchain_ != null) {
              subBuilder = blockchain_.toBuilder();
            }
            blockchain_ = input.readMessage(com.github.iotexproject.grpc.types.GenesisBlockchain.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(blockchain_);
              blockchain_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            com.github.iotexproject.grpc.types.GenesisAccount.Builder subBuilder = null;
            if (account_ != null) {
              subBuilder = account_.toBuilder();
            }
            account_ = input.readMessage(com.github.iotexproject.grpc.types.GenesisAccount.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(account_);
              account_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            com.github.iotexproject.grpc.types.GenesisPoll.Builder subBuilder = null;
            if (poll_ != null) {
              subBuilder = poll_.toBuilder();
            }
            poll_ = input.readMessage(com.github.iotexproject.grpc.types.GenesisPoll.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(poll_);
              poll_ = subBuilder.buildPartial();
            }

            break;
          }
          case 34: {
            com.github.iotexproject.grpc.types.GenesisRewarding.Builder subBuilder = null;
            if (rewarding_ != null) {
              subBuilder = rewarding_.toBuilder();
            }
            rewarding_ = input.readMessage(com.github.iotexproject.grpc.types.GenesisRewarding.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(rewarding_);
              rewarding_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.github.iotexproject.grpc.types.GenesisOuterClass.internal_static_iotextypes_Genesis_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.github.iotexproject.grpc.types.GenesisOuterClass.internal_static_iotextypes_Genesis_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.github.iotexproject.grpc.types.Genesis.class, com.github.iotexproject.grpc.types.Genesis.Builder.class);
  }

  public static final int BLOCKCHAIN_FIELD_NUMBER = 1;
  private com.github.iotexproject.grpc.types.GenesisBlockchain blockchain_;
  /**
   * <code>.iotextypes.GenesisBlockchain blockchain = 1;</code>
   * @return Whether the blockchain field is set.
   */
  @java.lang.Override
  public boolean hasBlockchain() {
    return blockchain_ != null;
  }
  /**
   * <code>.iotextypes.GenesisBlockchain blockchain = 1;</code>
   * @return The blockchain.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.GenesisBlockchain getBlockchain() {
    return blockchain_ == null ? com.github.iotexproject.grpc.types.GenesisBlockchain.getDefaultInstance() : blockchain_;
  }
  /**
   * <code>.iotextypes.GenesisBlockchain blockchain = 1;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.GenesisBlockchainOrBuilder getBlockchainOrBuilder() {
    return getBlockchain();
  }

  public static final int ACCOUNT_FIELD_NUMBER = 2;
  private com.github.iotexproject.grpc.types.GenesisAccount account_;
  /**
   * <code>.iotextypes.GenesisAccount account = 2;</code>
   * @return Whether the account field is set.
   */
  @java.lang.Override
  public boolean hasAccount() {
    return account_ != null;
  }
  /**
   * <code>.iotextypes.GenesisAccount account = 2;</code>
   * @return The account.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.GenesisAccount getAccount() {
    return account_ == null ? com.github.iotexproject.grpc.types.GenesisAccount.getDefaultInstance() : account_;
  }
  /**
   * <code>.iotextypes.GenesisAccount account = 2;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.GenesisAccountOrBuilder getAccountOrBuilder() {
    return getAccount();
  }

  public static final int POLL_FIELD_NUMBER = 3;
  private com.github.iotexproject.grpc.types.GenesisPoll poll_;
  /**
   * <code>.iotextypes.GenesisPoll poll = 3;</code>
   * @return Whether the poll field is set.
   */
  @java.lang.Override
  public boolean hasPoll() {
    return poll_ != null;
  }
  /**
   * <code>.iotextypes.GenesisPoll poll = 3;</code>
   * @return The poll.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.GenesisPoll getPoll() {
    return poll_ == null ? com.github.iotexproject.grpc.types.GenesisPoll.getDefaultInstance() : poll_;
  }
  /**
   * <code>.iotextypes.GenesisPoll poll = 3;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.GenesisPollOrBuilder getPollOrBuilder() {
    return getPoll();
  }

  public static final int REWARDING_FIELD_NUMBER = 4;
  private com.github.iotexproject.grpc.types.GenesisRewarding rewarding_;
  /**
   * <code>.iotextypes.GenesisRewarding rewarding = 4;</code>
   * @return Whether the rewarding field is set.
   */
  @java.lang.Override
  public boolean hasRewarding() {
    return rewarding_ != null;
  }
  /**
   * <code>.iotextypes.GenesisRewarding rewarding = 4;</code>
   * @return The rewarding.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.GenesisRewarding getRewarding() {
    return rewarding_ == null ? com.github.iotexproject.grpc.types.GenesisRewarding.getDefaultInstance() : rewarding_;
  }
  /**
   * <code>.iotextypes.GenesisRewarding rewarding = 4;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.GenesisRewardingOrBuilder getRewardingOrBuilder() {
    return getRewarding();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (blockchain_ != null) {
      output.writeMessage(1, getBlockchain());
    }
    if (account_ != null) {
      output.writeMessage(2, getAccount());
    }
    if (poll_ != null) {
      output.writeMessage(3, getPoll());
    }
    if (rewarding_ != null) {
      output.writeMessage(4, getRewarding());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (blockchain_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getBlockchain());
    }
    if (account_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getAccount());
    }
    if (poll_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getPoll());
    }
    if (rewarding_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getRewarding());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.github.iotexproject.grpc.types.Genesis)) {
      return super.equals(obj);
    }
    com.github.iotexproject.grpc.types.Genesis other = (com.github.iotexproject.grpc.types.Genesis) obj;

    if (hasBlockchain() != other.hasBlockchain()) return false;
    if (hasBlockchain()) {
      if (!getBlockchain()
          .equals(other.getBlockchain())) return false;
    }
    if (hasAccount() != other.hasAccount()) return false;
    if (hasAccount()) {
      if (!getAccount()
          .equals(other.getAccount())) return false;
    }
    if (hasPoll() != other.hasPoll()) return false;
    if (hasPoll()) {
      if (!getPoll()
          .equals(other.getPoll())) return false;
    }
    if (hasRewarding() != other.hasRewarding()) return false;
    if (hasRewarding()) {
      if (!getRewarding()
          .equals(other.getRewarding())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasBlockchain()) {
      hash = (37 * hash) + BLOCKCHAIN_FIELD_NUMBER;
      hash = (53 * hash) + getBlockchain().hashCode();
    }
    if (hasAccount()) {
      hash = (37 * hash) + ACCOUNT_FIELD_NUMBER;
      hash = (53 * hash) + getAccount().hashCode();
    }
    if (hasPoll()) {
      hash = (37 * hash) + POLL_FIELD_NUMBER;
      hash = (53 * hash) + getPoll().hashCode();
    }
    if (hasRewarding()) {
      hash = (37 * hash) + REWARDING_FIELD_NUMBER;
      hash = (53 * hash) + getRewarding().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.github.iotexproject.grpc.types.Genesis parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.iotexproject.grpc.types.Genesis parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.iotexproject.grpc.types.Genesis parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.iotexproject.grpc.types.Genesis parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.iotexproject.grpc.types.Genesis parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.iotexproject.grpc.types.Genesis parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.iotexproject.grpc.types.Genesis parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.github.iotexproject.grpc.types.Genesis parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.github.iotexproject.grpc.types.Genesis parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.github.iotexproject.grpc.types.Genesis parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.github.iotexproject.grpc.types.Genesis parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.github.iotexproject.grpc.types.Genesis parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.github.iotexproject.grpc.types.Genesis prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code iotextypes.Genesis}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:iotextypes.Genesis)
      com.github.iotexproject.grpc.types.GenesisOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.iotexproject.grpc.types.GenesisOuterClass.internal_static_iotextypes_Genesis_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.iotexproject.grpc.types.GenesisOuterClass.internal_static_iotextypes_Genesis_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.iotexproject.grpc.types.Genesis.class, com.github.iotexproject.grpc.types.Genesis.Builder.class);
    }

    // Construct using com.github.iotexproject.grpc.types.Genesis.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (blockchainBuilder_ == null) {
        blockchain_ = null;
      } else {
        blockchain_ = null;
        blockchainBuilder_ = null;
      }
      if (accountBuilder_ == null) {
        account_ = null;
      } else {
        account_ = null;
        accountBuilder_ = null;
      }
      if (pollBuilder_ == null) {
        poll_ = null;
      } else {
        poll_ = null;
        pollBuilder_ = null;
      }
      if (rewardingBuilder_ == null) {
        rewarding_ = null;
      } else {
        rewarding_ = null;
        rewardingBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.github.iotexproject.grpc.types.GenesisOuterClass.internal_static_iotextypes_Genesis_descriptor;
    }

    @java.lang.Override
    public com.github.iotexproject.grpc.types.Genesis getDefaultInstanceForType() {
      return com.github.iotexproject.grpc.types.Genesis.getDefaultInstance();
    }

    @java.lang.Override
    public com.github.iotexproject.grpc.types.Genesis build() {
      com.github.iotexproject.grpc.types.Genesis result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.github.iotexproject.grpc.types.Genesis buildPartial() {
      com.github.iotexproject.grpc.types.Genesis result = new com.github.iotexproject.grpc.types.Genesis(this);
      if (blockchainBuilder_ == null) {
        result.blockchain_ = blockchain_;
      } else {
        result.blockchain_ = blockchainBuilder_.build();
      }
      if (accountBuilder_ == null) {
        result.account_ = account_;
      } else {
        result.account_ = accountBuilder_.build();
      }
      if (pollBuilder_ == null) {
        result.poll_ = poll_;
      } else {
        result.poll_ = pollBuilder_.build();
      }
      if (rewardingBuilder_ == null) {
        result.rewarding_ = rewarding_;
      } else {
        result.rewarding_ = rewardingBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.github.iotexproject.grpc.types.Genesis) {
        return mergeFrom((com.github.iotexproject.grpc.types.Genesis)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.github.iotexproject.grpc.types.Genesis other) {
      if (other == com.github.iotexproject.grpc.types.Genesis.getDefaultInstance()) return this;
      if (other.hasBlockchain()) {
        mergeBlockchain(other.getBlockchain());
      }
      if (other.hasAccount()) {
        mergeAccount(other.getAccount());
      }
      if (other.hasPoll()) {
        mergePoll(other.getPoll());
      }
      if (other.hasRewarding()) {
        mergeRewarding(other.getRewarding());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.github.iotexproject.grpc.types.Genesis parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.github.iotexproject.grpc.types.Genesis) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private com.github.iotexproject.grpc.types.GenesisBlockchain blockchain_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.iotexproject.grpc.types.GenesisBlockchain, com.github.iotexproject.grpc.types.GenesisBlockchain.Builder, com.github.iotexproject.grpc.types.GenesisBlockchainOrBuilder> blockchainBuilder_;
    /**
     * <code>.iotextypes.GenesisBlockchain blockchain = 1;</code>
     * @return Whether the blockchain field is set.
     */
    public boolean hasBlockchain() {
      return blockchainBuilder_ != null || blockchain_ != null;
    }
    /**
     * <code>.iotextypes.GenesisBlockchain blockchain = 1;</code>
     * @return The blockchain.
     */
    public com.github.iotexproject.grpc.types.GenesisBlockchain getBlockchain() {
      if (blockchainBuilder_ == null) {
        return blockchain_ == null ? com.github.iotexproject.grpc.types.GenesisBlockchain.getDefaultInstance() : blockchain_;
      } else {
        return blockchainBuilder_.getMessage();
      }
    }
    /**
     * <code>.iotextypes.GenesisBlockchain blockchain = 1;</code>
     */
    public Builder setBlockchain(com.github.iotexproject.grpc.types.GenesisBlockchain value) {
      if (blockchainBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        blockchain_ = value;
        onChanged();
      } else {
        blockchainBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.iotextypes.GenesisBlockchain blockchain = 1;</code>
     */
    public Builder setBlockchain(
        com.github.iotexproject.grpc.types.GenesisBlockchain.Builder builderForValue) {
      if (blockchainBuilder_ == null) {
        blockchain_ = builderForValue.build();
        onChanged();
      } else {
        blockchainBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.iotextypes.GenesisBlockchain blockchain = 1;</code>
     */
    public Builder mergeBlockchain(com.github.iotexproject.grpc.types.GenesisBlockchain value) {
      if (blockchainBuilder_ == null) {
        if (blockchain_ != null) {
          blockchain_ =
            com.github.iotexproject.grpc.types.GenesisBlockchain.newBuilder(blockchain_).mergeFrom(value).buildPartial();
        } else {
          blockchain_ = value;
        }
        onChanged();
      } else {
        blockchainBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.iotextypes.GenesisBlockchain blockchain = 1;</code>
     */
    public Builder clearBlockchain() {
      if (blockchainBuilder_ == null) {
        blockchain_ = null;
        onChanged();
      } else {
        blockchain_ = null;
        blockchainBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.iotextypes.GenesisBlockchain blockchain = 1;</code>
     */
    public com.github.iotexproject.grpc.types.GenesisBlockchain.Builder getBlockchainBuilder() {
      
      onChanged();
      return getBlockchainFieldBuilder().getBuilder();
    }
    /**
     * <code>.iotextypes.GenesisBlockchain blockchain = 1;</code>
     */
    public com.github.iotexproject.grpc.types.GenesisBlockchainOrBuilder getBlockchainOrBuilder() {
      if (blockchainBuilder_ != null) {
        return blockchainBuilder_.getMessageOrBuilder();
      } else {
        return blockchain_ == null ?
            com.github.iotexproject.grpc.types.GenesisBlockchain.getDefaultInstance() : blockchain_;
      }
    }
    /**
     * <code>.iotextypes.GenesisBlockchain blockchain = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.iotexproject.grpc.types.GenesisBlockchain, com.github.iotexproject.grpc.types.GenesisBlockchain.Builder, com.github.iotexproject.grpc.types.GenesisBlockchainOrBuilder> 
        getBlockchainFieldBuilder() {
      if (blockchainBuilder_ == null) {
        blockchainBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.iotexproject.grpc.types.GenesisBlockchain, com.github.iotexproject.grpc.types.GenesisBlockchain.Builder, com.github.iotexproject.grpc.types.GenesisBlockchainOrBuilder>(
                getBlockchain(),
                getParentForChildren(),
                isClean());
        blockchain_ = null;
      }
      return blockchainBuilder_;
    }

    private com.github.iotexproject.grpc.types.GenesisAccount account_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.iotexproject.grpc.types.GenesisAccount, com.github.iotexproject.grpc.types.GenesisAccount.Builder, com.github.iotexproject.grpc.types.GenesisAccountOrBuilder> accountBuilder_;
    /**
     * <code>.iotextypes.GenesisAccount account = 2;</code>
     * @return Whether the account field is set.
     */
    public boolean hasAccount() {
      return accountBuilder_ != null || account_ != null;
    }
    /**
     * <code>.iotextypes.GenesisAccount account = 2;</code>
     * @return The account.
     */
    public com.github.iotexproject.grpc.types.GenesisAccount getAccount() {
      if (accountBuilder_ == null) {
        return account_ == null ? com.github.iotexproject.grpc.types.GenesisAccount.getDefaultInstance() : account_;
      } else {
        return accountBuilder_.getMessage();
      }
    }
    /**
     * <code>.iotextypes.GenesisAccount account = 2;</code>
     */
    public Builder setAccount(com.github.iotexproject.grpc.types.GenesisAccount value) {
      if (accountBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        account_ = value;
        onChanged();
      } else {
        accountBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.iotextypes.GenesisAccount account = 2;</code>
     */
    public Builder setAccount(
        com.github.iotexproject.grpc.types.GenesisAccount.Builder builderForValue) {
      if (accountBuilder_ == null) {
        account_ = builderForValue.build();
        onChanged();
      } else {
        accountBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.iotextypes.GenesisAccount account = 2;</code>
     */
    public Builder mergeAccount(com.github.iotexproject.grpc.types.GenesisAccount value) {
      if (accountBuilder_ == null) {
        if (account_ != null) {
          account_ =
            com.github.iotexproject.grpc.types.GenesisAccount.newBuilder(account_).mergeFrom(value).buildPartial();
        } else {
          account_ = value;
        }
        onChanged();
      } else {
        accountBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.iotextypes.GenesisAccount account = 2;</code>
     */
    public Builder clearAccount() {
      if (accountBuilder_ == null) {
        account_ = null;
        onChanged();
      } else {
        account_ = null;
        accountBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.iotextypes.GenesisAccount account = 2;</code>
     */
    public com.github.iotexproject.grpc.types.GenesisAccount.Builder getAccountBuilder() {
      
      onChanged();
      return getAccountFieldBuilder().getBuilder();
    }
    /**
     * <code>.iotextypes.GenesisAccount account = 2;</code>
     */
    public com.github.iotexproject.grpc.types.GenesisAccountOrBuilder getAccountOrBuilder() {
      if (accountBuilder_ != null) {
        return accountBuilder_.getMessageOrBuilder();
      } else {
        return account_ == null ?
            com.github.iotexproject.grpc.types.GenesisAccount.getDefaultInstance() : account_;
      }
    }
    /**
     * <code>.iotextypes.GenesisAccount account = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.iotexproject.grpc.types.GenesisAccount, com.github.iotexproject.grpc.types.GenesisAccount.Builder, com.github.iotexproject.grpc.types.GenesisAccountOrBuilder> 
        getAccountFieldBuilder() {
      if (accountBuilder_ == null) {
        accountBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.iotexproject.grpc.types.GenesisAccount, com.github.iotexproject.grpc.types.GenesisAccount.Builder, com.github.iotexproject.grpc.types.GenesisAccountOrBuilder>(
                getAccount(),
                getParentForChildren(),
                isClean());
        account_ = null;
      }
      return accountBuilder_;
    }

    private com.github.iotexproject.grpc.types.GenesisPoll poll_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.iotexproject.grpc.types.GenesisPoll, com.github.iotexproject.grpc.types.GenesisPoll.Builder, com.github.iotexproject.grpc.types.GenesisPollOrBuilder> pollBuilder_;
    /**
     * <code>.iotextypes.GenesisPoll poll = 3;</code>
     * @return Whether the poll field is set.
     */
    public boolean hasPoll() {
      return pollBuilder_ != null || poll_ != null;
    }
    /**
     * <code>.iotextypes.GenesisPoll poll = 3;</code>
     * @return The poll.
     */
    public com.github.iotexproject.grpc.types.GenesisPoll getPoll() {
      if (pollBuilder_ == null) {
        return poll_ == null ? com.github.iotexproject.grpc.types.GenesisPoll.getDefaultInstance() : poll_;
      } else {
        return pollBuilder_.getMessage();
      }
    }
    /**
     * <code>.iotextypes.GenesisPoll poll = 3;</code>
     */
    public Builder setPoll(com.github.iotexproject.grpc.types.GenesisPoll value) {
      if (pollBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        poll_ = value;
        onChanged();
      } else {
        pollBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.iotextypes.GenesisPoll poll = 3;</code>
     */
    public Builder setPoll(
        com.github.iotexproject.grpc.types.GenesisPoll.Builder builderForValue) {
      if (pollBuilder_ == null) {
        poll_ = builderForValue.build();
        onChanged();
      } else {
        pollBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.iotextypes.GenesisPoll poll = 3;</code>
     */
    public Builder mergePoll(com.github.iotexproject.grpc.types.GenesisPoll value) {
      if (pollBuilder_ == null) {
        if (poll_ != null) {
          poll_ =
            com.github.iotexproject.grpc.types.GenesisPoll.newBuilder(poll_).mergeFrom(value).buildPartial();
        } else {
          poll_ = value;
        }
        onChanged();
      } else {
        pollBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.iotextypes.GenesisPoll poll = 3;</code>
     */
    public Builder clearPoll() {
      if (pollBuilder_ == null) {
        poll_ = null;
        onChanged();
      } else {
        poll_ = null;
        pollBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.iotextypes.GenesisPoll poll = 3;</code>
     */
    public com.github.iotexproject.grpc.types.GenesisPoll.Builder getPollBuilder() {
      
      onChanged();
      return getPollFieldBuilder().getBuilder();
    }
    /**
     * <code>.iotextypes.GenesisPoll poll = 3;</code>
     */
    public com.github.iotexproject.grpc.types.GenesisPollOrBuilder getPollOrBuilder() {
      if (pollBuilder_ != null) {
        return pollBuilder_.getMessageOrBuilder();
      } else {
        return poll_ == null ?
            com.github.iotexproject.grpc.types.GenesisPoll.getDefaultInstance() : poll_;
      }
    }
    /**
     * <code>.iotextypes.GenesisPoll poll = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.iotexproject.grpc.types.GenesisPoll, com.github.iotexproject.grpc.types.GenesisPoll.Builder, com.github.iotexproject.grpc.types.GenesisPollOrBuilder> 
        getPollFieldBuilder() {
      if (pollBuilder_ == null) {
        pollBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.iotexproject.grpc.types.GenesisPoll, com.github.iotexproject.grpc.types.GenesisPoll.Builder, com.github.iotexproject.grpc.types.GenesisPollOrBuilder>(
                getPoll(),
                getParentForChildren(),
                isClean());
        poll_ = null;
      }
      return pollBuilder_;
    }

    private com.github.iotexproject.grpc.types.GenesisRewarding rewarding_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.iotexproject.grpc.types.GenesisRewarding, com.github.iotexproject.grpc.types.GenesisRewarding.Builder, com.github.iotexproject.grpc.types.GenesisRewardingOrBuilder> rewardingBuilder_;
    /**
     * <code>.iotextypes.GenesisRewarding rewarding = 4;</code>
     * @return Whether the rewarding field is set.
     */
    public boolean hasRewarding() {
      return rewardingBuilder_ != null || rewarding_ != null;
    }
    /**
     * <code>.iotextypes.GenesisRewarding rewarding = 4;</code>
     * @return The rewarding.
     */
    public com.github.iotexproject.grpc.types.GenesisRewarding getRewarding() {
      if (rewardingBuilder_ == null) {
        return rewarding_ == null ? com.github.iotexproject.grpc.types.GenesisRewarding.getDefaultInstance() : rewarding_;
      } else {
        return rewardingBuilder_.getMessage();
      }
    }
    /**
     * <code>.iotextypes.GenesisRewarding rewarding = 4;</code>
     */
    public Builder setRewarding(com.github.iotexproject.grpc.types.GenesisRewarding value) {
      if (rewardingBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        rewarding_ = value;
        onChanged();
      } else {
        rewardingBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.iotextypes.GenesisRewarding rewarding = 4;</code>
     */
    public Builder setRewarding(
        com.github.iotexproject.grpc.types.GenesisRewarding.Builder builderForValue) {
      if (rewardingBuilder_ == null) {
        rewarding_ = builderForValue.build();
        onChanged();
      } else {
        rewardingBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.iotextypes.GenesisRewarding rewarding = 4;</code>
     */
    public Builder mergeRewarding(com.github.iotexproject.grpc.types.GenesisRewarding value) {
      if (rewardingBuilder_ == null) {
        if (rewarding_ != null) {
          rewarding_ =
            com.github.iotexproject.grpc.types.GenesisRewarding.newBuilder(rewarding_).mergeFrom(value).buildPartial();
        } else {
          rewarding_ = value;
        }
        onChanged();
      } else {
        rewardingBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.iotextypes.GenesisRewarding rewarding = 4;</code>
     */
    public Builder clearRewarding() {
      if (rewardingBuilder_ == null) {
        rewarding_ = null;
        onChanged();
      } else {
        rewarding_ = null;
        rewardingBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.iotextypes.GenesisRewarding rewarding = 4;</code>
     */
    public com.github.iotexproject.grpc.types.GenesisRewarding.Builder getRewardingBuilder() {
      
      onChanged();
      return getRewardingFieldBuilder().getBuilder();
    }
    /**
     * <code>.iotextypes.GenesisRewarding rewarding = 4;</code>
     */
    public com.github.iotexproject.grpc.types.GenesisRewardingOrBuilder getRewardingOrBuilder() {
      if (rewardingBuilder_ != null) {
        return rewardingBuilder_.getMessageOrBuilder();
      } else {
        return rewarding_ == null ?
            com.github.iotexproject.grpc.types.GenesisRewarding.getDefaultInstance() : rewarding_;
      }
    }
    /**
     * <code>.iotextypes.GenesisRewarding rewarding = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.iotexproject.grpc.types.GenesisRewarding, com.github.iotexproject.grpc.types.GenesisRewarding.Builder, com.github.iotexproject.grpc.types.GenesisRewardingOrBuilder> 
        getRewardingFieldBuilder() {
      if (rewardingBuilder_ == null) {
        rewardingBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.iotexproject.grpc.types.GenesisRewarding, com.github.iotexproject.grpc.types.GenesisRewarding.Builder, com.github.iotexproject.grpc.types.GenesisRewardingOrBuilder>(
                getRewarding(),
                getParentForChildren(),
                isClean());
        rewarding_ = null;
      }
      return rewardingBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:iotextypes.Genesis)
  }

  // @@protoc_insertion_point(class_scope:iotextypes.Genesis)
  private static final com.github.iotexproject.grpc.types.Genesis DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.github.iotexproject.grpc.types.Genesis();
  }

  public static com.github.iotexproject.grpc.types.Genesis getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Genesis>
      PARSER = new com.google.protobuf.AbstractParser<Genesis>() {
    @java.lang.Override
    public Genesis parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Genesis(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Genesis> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Genesis> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.github.iotexproject.grpc.types.Genesis getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

