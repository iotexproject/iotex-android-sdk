// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: proto/types/action.proto
// Protobuf Java Version: 4.29.1

package com.github.iotexproject.grpc.types;

/**
 * Protobuf type {@code iotextypes.ActionCore}
 */
public final class ActionCore extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:iotextypes.ActionCore)
    ActionCoreOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 1,
      /* suffix= */ "",
      ActionCore.class.getName());
  }
  // Use ActionCore.newBuilder() to construct.
  private ActionCore(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private ActionCore() {
    gasPrice_ = "";
    gasTipCap_ = "";
    gasFeeCap_ = "";
    accessList_ = java.util.Collections.emptyList();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.github.iotexproject.grpc.types.ActionOuterClass.internal_static_iotextypes_ActionCore_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.github.iotexproject.grpc.types.ActionOuterClass.internal_static_iotextypes_ActionCore_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.github.iotexproject.grpc.types.ActionCore.class, com.github.iotexproject.grpc.types.ActionCore.Builder.class);
  }

  private int bitField0_;
  private int actionCase_ = 0;
  @SuppressWarnings("serial")
  private java.lang.Object action_;
  public enum ActionCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    TRANSFER(10),
    TXCONTAINER(11),
    EXECUTION(12),
    STARTSUBCHAIN(13),
    STOPSUBCHAIN(14),
    PUTBLOCK(15),
    CREATEDEPOSIT(16),
    SETTLEDEPOSIT(17),
    CREATEPLUMCHAIN(18),
    TERMINATEPLUMCHAIN(19),
    PLUMPUTBLOCK(20),
    PLUMCREATEDEPOSIT(21),
    PLUMSTARTEXIT(22),
    PLUMCHALLENGEEXIT(23),
    PLUMRESPONSECHALLENGEEXIT(24),
    PLUMFINALIZEEXIT(25),
    PLUMSETTLEDEPOSIT(26),
    PLUMTRANSFER(27),
    DEPOSITTOREWARDINGFUND(30),
    CLAIMFROMREWARDINGFUND(31),
    GRANTREWARD(32),
    STAKECREATE(40),
    STAKEUNSTAKE(41),
    STAKEWITHDRAW(42),
    STAKEADDDEPOSIT(43),
    STAKERESTAKE(44),
    STAKECHANGECANDIDATE(45),
    STAKETRANSFEROWNERSHIP(46),
    CANDIDATEREGISTER(47),
    CANDIDATEUPDATE(48),
    CANDIDATEACTIVATE(49),
    CANDIDATEENDORSEMENT(51),
    CANDIDATETRANSFEROWNERSHIP(52),
    STAKEMIGRATE(53),
    PUTPOLLRESULT(50),
    ACTION_NOT_SET(0);
    private final int value;
    private ActionCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ActionCase valueOf(int value) {
      return forNumber(value);
    }

    public static ActionCase forNumber(int value) {
      switch (value) {
        case 10: return TRANSFER;
        case 11: return TXCONTAINER;
        case 12: return EXECUTION;
        case 13: return STARTSUBCHAIN;
        case 14: return STOPSUBCHAIN;
        case 15: return PUTBLOCK;
        case 16: return CREATEDEPOSIT;
        case 17: return SETTLEDEPOSIT;
        case 18: return CREATEPLUMCHAIN;
        case 19: return TERMINATEPLUMCHAIN;
        case 20: return PLUMPUTBLOCK;
        case 21: return PLUMCREATEDEPOSIT;
        case 22: return PLUMSTARTEXIT;
        case 23: return PLUMCHALLENGEEXIT;
        case 24: return PLUMRESPONSECHALLENGEEXIT;
        case 25: return PLUMFINALIZEEXIT;
        case 26: return PLUMSETTLEDEPOSIT;
        case 27: return PLUMTRANSFER;
        case 30: return DEPOSITTOREWARDINGFUND;
        case 31: return CLAIMFROMREWARDINGFUND;
        case 32: return GRANTREWARD;
        case 40: return STAKECREATE;
        case 41: return STAKEUNSTAKE;
        case 42: return STAKEWITHDRAW;
        case 43: return STAKEADDDEPOSIT;
        case 44: return STAKERESTAKE;
        case 45: return STAKECHANGECANDIDATE;
        case 46: return STAKETRANSFEROWNERSHIP;
        case 47: return CANDIDATEREGISTER;
        case 48: return CANDIDATEUPDATE;
        case 49: return CANDIDATEACTIVATE;
        case 51: return CANDIDATEENDORSEMENT;
        case 52: return CANDIDATETRANSFEROWNERSHIP;
        case 53: return STAKEMIGRATE;
        case 50: return PUTPOLLRESULT;
        case 0: return ACTION_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public ActionCase
  getActionCase() {
    return ActionCase.forNumber(
        actionCase_);
  }

  public static final int VERSION_FIELD_NUMBER = 1;
  private int version_ = 0;
  /**
   * <code>uint32 version = 1;</code>
   * @return The version.
   */
  @java.lang.Override
  public int getVersion() {
    return version_;
  }

  public static final int NONCE_FIELD_NUMBER = 2;
  private long nonce_ = 0L;
  /**
   * <code>uint64 nonce = 2;</code>
   * @return The nonce.
   */
  @java.lang.Override
  public long getNonce() {
    return nonce_;
  }

  public static final int GASLIMIT_FIELD_NUMBER = 3;
  private long gasLimit_ = 0L;
  /**
   * <code>uint64 gasLimit = 3;</code>
   * @return The gasLimit.
   */
  @java.lang.Override
  public long getGasLimit() {
    return gasLimit_;
  }

  public static final int GASPRICE_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private volatile java.lang.Object gasPrice_ = "";
  /**
   * <code>string gasPrice = 4;</code>
   * @return The gasPrice.
   */
  @java.lang.Override
  public java.lang.String getGasPrice() {
    java.lang.Object ref = gasPrice_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      gasPrice_ = s;
      return s;
    }
  }
  /**
   * <code>string gasPrice = 4;</code>
   * @return The bytes for gasPrice.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getGasPriceBytes() {
    java.lang.Object ref = gasPrice_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      gasPrice_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CHAINID_FIELD_NUMBER = 5;
  private int chainID_ = 0;
  /**
   * <code>uint32 chainID = 5;</code>
   * @return The chainID.
   */
  @java.lang.Override
  public int getChainID() {
    return chainID_;
  }

  public static final int GASTIPCAP_FIELD_NUMBER = 6;
  @SuppressWarnings("serial")
  private volatile java.lang.Object gasTipCap_ = "";
  /**
   * <code>string gasTipCap = 6;</code>
   * @return The gasTipCap.
   */
  @java.lang.Override
  public java.lang.String getGasTipCap() {
    java.lang.Object ref = gasTipCap_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      gasTipCap_ = s;
      return s;
    }
  }
  /**
   * <code>string gasTipCap = 6;</code>
   * @return The bytes for gasTipCap.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getGasTipCapBytes() {
    java.lang.Object ref = gasTipCap_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      gasTipCap_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int GASFEECAP_FIELD_NUMBER = 7;
  @SuppressWarnings("serial")
  private volatile java.lang.Object gasFeeCap_ = "";
  /**
   * <code>string gasFeeCap = 7;</code>
   * @return The gasFeeCap.
   */
  @java.lang.Override
  public java.lang.String getGasFeeCap() {
    java.lang.Object ref = gasFeeCap_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      gasFeeCap_ = s;
      return s;
    }
  }
  /**
   * <code>string gasFeeCap = 7;</code>
   * @return The bytes for gasFeeCap.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getGasFeeCapBytes() {
    java.lang.Object ref = gasFeeCap_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      gasFeeCap_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int BLOBTXDATA_FIELD_NUMBER = 8;
  private com.github.iotexproject.grpc.types.BlobTxData blobTxData_;
  /**
   * <code>.iotextypes.BlobTxData blobTxData = 8;</code>
   * @return Whether the blobTxData field is set.
   */
  @java.lang.Override
  public boolean hasBlobTxData() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <code>.iotextypes.BlobTxData blobTxData = 8;</code>
   * @return The blobTxData.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.BlobTxData getBlobTxData() {
    return blobTxData_ == null ? com.github.iotexproject.grpc.types.BlobTxData.getDefaultInstance() : blobTxData_;
  }
  /**
   * <code>.iotextypes.BlobTxData blobTxData = 8;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.BlobTxDataOrBuilder getBlobTxDataOrBuilder() {
    return blobTxData_ == null ? com.github.iotexproject.grpc.types.BlobTxData.getDefaultInstance() : blobTxData_;
  }

  public static final int ACCESSLIST_FIELD_NUMBER = 9;
  @SuppressWarnings("serial")
  private java.util.List<com.github.iotexproject.grpc.types.AccessTuple> accessList_;
  /**
   * <code>repeated .iotextypes.AccessTuple accessList = 9;</code>
   */
  @java.lang.Override
  public java.util.List<com.github.iotexproject.grpc.types.AccessTuple> getAccessListList() {
    return accessList_;
  }
  /**
   * <code>repeated .iotextypes.AccessTuple accessList = 9;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.github.iotexproject.grpc.types.AccessTupleOrBuilder> 
      getAccessListOrBuilderList() {
    return accessList_;
  }
  /**
   * <code>repeated .iotextypes.AccessTuple accessList = 9;</code>
   */
  @java.lang.Override
  public int getAccessListCount() {
    return accessList_.size();
  }
  /**
   * <code>repeated .iotextypes.AccessTuple accessList = 9;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.AccessTuple getAccessList(int index) {
    return accessList_.get(index);
  }
  /**
   * <code>repeated .iotextypes.AccessTuple accessList = 9;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.AccessTupleOrBuilder getAccessListOrBuilder(
      int index) {
    return accessList_.get(index);
  }

  public static final int TXTYPE_FIELD_NUMBER = 28;
  private int txType_ = 0;
  /**
   * <code>uint32 txType = 28;</code>
   * @return The txType.
   */
  @java.lang.Override
  public int getTxType() {
    return txType_;
  }

  public static final int TRANSFER_FIELD_NUMBER = 10;
  /**
   * <code>.iotextypes.Transfer transfer = 10;</code>
   * @return Whether the transfer field is set.
   */
  @java.lang.Override
  public boolean hasTransfer() {
    return actionCase_ == 10;
  }
  /**
   * <code>.iotextypes.Transfer transfer = 10;</code>
   * @return The transfer.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.Transfer getTransfer() {
    if (actionCase_ == 10) {
       return (com.github.iotexproject.grpc.types.Transfer) action_;
    }
    return com.github.iotexproject.grpc.types.Transfer.getDefaultInstance();
  }
  /**
   * <code>.iotextypes.Transfer transfer = 10;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.TransferOrBuilder getTransferOrBuilder() {
    if (actionCase_ == 10) {
       return (com.github.iotexproject.grpc.types.Transfer) action_;
    }
    return com.github.iotexproject.grpc.types.Transfer.getDefaultInstance();
  }

  public static final int TXCONTAINER_FIELD_NUMBER = 11;
  /**
   * <code>.iotextypes.TxContainer txContainer = 11;</code>
   * @return Whether the txContainer field is set.
   */
  @java.lang.Override
  public boolean hasTxContainer() {
    return actionCase_ == 11;
  }
  /**
   * <code>.iotextypes.TxContainer txContainer = 11;</code>
   * @return The txContainer.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.TxContainer getTxContainer() {
    if (actionCase_ == 11) {
       return (com.github.iotexproject.grpc.types.TxContainer) action_;
    }
    return com.github.iotexproject.grpc.types.TxContainer.getDefaultInstance();
  }
  /**
   * <code>.iotextypes.TxContainer txContainer = 11;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.TxContainerOrBuilder getTxContainerOrBuilder() {
    if (actionCase_ == 11) {
       return (com.github.iotexproject.grpc.types.TxContainer) action_;
    }
    return com.github.iotexproject.grpc.types.TxContainer.getDefaultInstance();
  }

  public static final int EXECUTION_FIELD_NUMBER = 12;
  /**
   * <code>.iotextypes.Execution execution = 12;</code>
   * @return Whether the execution field is set.
   */
  @java.lang.Override
  public boolean hasExecution() {
    return actionCase_ == 12;
  }
  /**
   * <code>.iotextypes.Execution execution = 12;</code>
   * @return The execution.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.Execution getExecution() {
    if (actionCase_ == 12) {
       return (com.github.iotexproject.grpc.types.Execution) action_;
    }
    return com.github.iotexproject.grpc.types.Execution.getDefaultInstance();
  }
  /**
   * <code>.iotextypes.Execution execution = 12;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.ExecutionOrBuilder getExecutionOrBuilder() {
    if (actionCase_ == 12) {
       return (com.github.iotexproject.grpc.types.Execution) action_;
    }
    return com.github.iotexproject.grpc.types.Execution.getDefaultInstance();
  }

  public static final int STARTSUBCHAIN_FIELD_NUMBER = 13;
  /**
   * <pre>
   * FedChain
   * </pre>
   *
   * <code>.iotextypes.StartSubChain startSubChain = 13;</code>
   * @return Whether the startSubChain field is set.
   */
  @java.lang.Override
  public boolean hasStartSubChain() {
    return actionCase_ == 13;
  }
  /**
   * <pre>
   * FedChain
   * </pre>
   *
   * <code>.iotextypes.StartSubChain startSubChain = 13;</code>
   * @return The startSubChain.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.StartSubChain getStartSubChain() {
    if (actionCase_ == 13) {
       return (com.github.iotexproject.grpc.types.StartSubChain) action_;
    }
    return com.github.iotexproject.grpc.types.StartSubChain.getDefaultInstance();
  }
  /**
   * <pre>
   * FedChain
   * </pre>
   *
   * <code>.iotextypes.StartSubChain startSubChain = 13;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.StartSubChainOrBuilder getStartSubChainOrBuilder() {
    if (actionCase_ == 13) {
       return (com.github.iotexproject.grpc.types.StartSubChain) action_;
    }
    return com.github.iotexproject.grpc.types.StartSubChain.getDefaultInstance();
  }

  public static final int STOPSUBCHAIN_FIELD_NUMBER = 14;
  /**
   * <code>.iotextypes.StopSubChain stopSubChain = 14;</code>
   * @return Whether the stopSubChain field is set.
   */
  @java.lang.Override
  public boolean hasStopSubChain() {
    return actionCase_ == 14;
  }
  /**
   * <code>.iotextypes.StopSubChain stopSubChain = 14;</code>
   * @return The stopSubChain.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.StopSubChain getStopSubChain() {
    if (actionCase_ == 14) {
       return (com.github.iotexproject.grpc.types.StopSubChain) action_;
    }
    return com.github.iotexproject.grpc.types.StopSubChain.getDefaultInstance();
  }
  /**
   * <code>.iotextypes.StopSubChain stopSubChain = 14;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.StopSubChainOrBuilder getStopSubChainOrBuilder() {
    if (actionCase_ == 14) {
       return (com.github.iotexproject.grpc.types.StopSubChain) action_;
    }
    return com.github.iotexproject.grpc.types.StopSubChain.getDefaultInstance();
  }

  public static final int PUTBLOCK_FIELD_NUMBER = 15;
  /**
   * <code>.iotextypes.PutBlock putBlock = 15;</code>
   * @return Whether the putBlock field is set.
   */
  @java.lang.Override
  public boolean hasPutBlock() {
    return actionCase_ == 15;
  }
  /**
   * <code>.iotextypes.PutBlock putBlock = 15;</code>
   * @return The putBlock.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.PutBlock getPutBlock() {
    if (actionCase_ == 15) {
       return (com.github.iotexproject.grpc.types.PutBlock) action_;
    }
    return com.github.iotexproject.grpc.types.PutBlock.getDefaultInstance();
  }
  /**
   * <code>.iotextypes.PutBlock putBlock = 15;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.PutBlockOrBuilder getPutBlockOrBuilder() {
    if (actionCase_ == 15) {
       return (com.github.iotexproject.grpc.types.PutBlock) action_;
    }
    return com.github.iotexproject.grpc.types.PutBlock.getDefaultInstance();
  }

  public static final int CREATEDEPOSIT_FIELD_NUMBER = 16;
  /**
   * <code>.iotextypes.CreateDeposit createDeposit = 16;</code>
   * @return Whether the createDeposit field is set.
   */
  @java.lang.Override
  public boolean hasCreateDeposit() {
    return actionCase_ == 16;
  }
  /**
   * <code>.iotextypes.CreateDeposit createDeposit = 16;</code>
   * @return The createDeposit.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.CreateDeposit getCreateDeposit() {
    if (actionCase_ == 16) {
       return (com.github.iotexproject.grpc.types.CreateDeposit) action_;
    }
    return com.github.iotexproject.grpc.types.CreateDeposit.getDefaultInstance();
  }
  /**
   * <code>.iotextypes.CreateDeposit createDeposit = 16;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.CreateDepositOrBuilder getCreateDepositOrBuilder() {
    if (actionCase_ == 16) {
       return (com.github.iotexproject.grpc.types.CreateDeposit) action_;
    }
    return com.github.iotexproject.grpc.types.CreateDeposit.getDefaultInstance();
  }

  public static final int SETTLEDEPOSIT_FIELD_NUMBER = 17;
  /**
   * <code>.iotextypes.SettleDeposit settleDeposit = 17;</code>
   * @return Whether the settleDeposit field is set.
   */
  @java.lang.Override
  public boolean hasSettleDeposit() {
    return actionCase_ == 17;
  }
  /**
   * <code>.iotextypes.SettleDeposit settleDeposit = 17;</code>
   * @return The settleDeposit.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.SettleDeposit getSettleDeposit() {
    if (actionCase_ == 17) {
       return (com.github.iotexproject.grpc.types.SettleDeposit) action_;
    }
    return com.github.iotexproject.grpc.types.SettleDeposit.getDefaultInstance();
  }
  /**
   * <code>.iotextypes.SettleDeposit settleDeposit = 17;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.SettleDepositOrBuilder getSettleDepositOrBuilder() {
    if (actionCase_ == 17) {
       return (com.github.iotexproject.grpc.types.SettleDeposit) action_;
    }
    return com.github.iotexproject.grpc.types.SettleDeposit.getDefaultInstance();
  }

  public static final int CREATEPLUMCHAIN_FIELD_NUMBER = 18;
  /**
   * <pre>
   * PlumChain
   * </pre>
   *
   * <code>.iotextypes.CreatePlumChain createPlumChain = 18;</code>
   * @return Whether the createPlumChain field is set.
   */
  @java.lang.Override
  public boolean hasCreatePlumChain() {
    return actionCase_ == 18;
  }
  /**
   * <pre>
   * PlumChain
   * </pre>
   *
   * <code>.iotextypes.CreatePlumChain createPlumChain = 18;</code>
   * @return The createPlumChain.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.CreatePlumChain getCreatePlumChain() {
    if (actionCase_ == 18) {
       return (com.github.iotexproject.grpc.types.CreatePlumChain) action_;
    }
    return com.github.iotexproject.grpc.types.CreatePlumChain.getDefaultInstance();
  }
  /**
   * <pre>
   * PlumChain
   * </pre>
   *
   * <code>.iotextypes.CreatePlumChain createPlumChain = 18;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.CreatePlumChainOrBuilder getCreatePlumChainOrBuilder() {
    if (actionCase_ == 18) {
       return (com.github.iotexproject.grpc.types.CreatePlumChain) action_;
    }
    return com.github.iotexproject.grpc.types.CreatePlumChain.getDefaultInstance();
  }

  public static final int TERMINATEPLUMCHAIN_FIELD_NUMBER = 19;
  /**
   * <code>.iotextypes.TerminatePlumChain terminatePlumChain = 19;</code>
   * @return Whether the terminatePlumChain field is set.
   */
  @java.lang.Override
  public boolean hasTerminatePlumChain() {
    return actionCase_ == 19;
  }
  /**
   * <code>.iotextypes.TerminatePlumChain terminatePlumChain = 19;</code>
   * @return The terminatePlumChain.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.TerminatePlumChain getTerminatePlumChain() {
    if (actionCase_ == 19) {
       return (com.github.iotexproject.grpc.types.TerminatePlumChain) action_;
    }
    return com.github.iotexproject.grpc.types.TerminatePlumChain.getDefaultInstance();
  }
  /**
   * <code>.iotextypes.TerminatePlumChain terminatePlumChain = 19;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.TerminatePlumChainOrBuilder getTerminatePlumChainOrBuilder() {
    if (actionCase_ == 19) {
       return (com.github.iotexproject.grpc.types.TerminatePlumChain) action_;
    }
    return com.github.iotexproject.grpc.types.TerminatePlumChain.getDefaultInstance();
  }

  public static final int PLUMPUTBLOCK_FIELD_NUMBER = 20;
  /**
   * <code>.iotextypes.PlumPutBlock plumPutBlock = 20;</code>
   * @return Whether the plumPutBlock field is set.
   */
  @java.lang.Override
  public boolean hasPlumPutBlock() {
    return actionCase_ == 20;
  }
  /**
   * <code>.iotextypes.PlumPutBlock plumPutBlock = 20;</code>
   * @return The plumPutBlock.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.PlumPutBlock getPlumPutBlock() {
    if (actionCase_ == 20) {
       return (com.github.iotexproject.grpc.types.PlumPutBlock) action_;
    }
    return com.github.iotexproject.grpc.types.PlumPutBlock.getDefaultInstance();
  }
  /**
   * <code>.iotextypes.PlumPutBlock plumPutBlock = 20;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.PlumPutBlockOrBuilder getPlumPutBlockOrBuilder() {
    if (actionCase_ == 20) {
       return (com.github.iotexproject.grpc.types.PlumPutBlock) action_;
    }
    return com.github.iotexproject.grpc.types.PlumPutBlock.getDefaultInstance();
  }

  public static final int PLUMCREATEDEPOSIT_FIELD_NUMBER = 21;
  /**
   * <code>.iotextypes.PlumCreateDeposit plumCreateDeposit = 21;</code>
   * @return Whether the plumCreateDeposit field is set.
   */
  @java.lang.Override
  public boolean hasPlumCreateDeposit() {
    return actionCase_ == 21;
  }
  /**
   * <code>.iotextypes.PlumCreateDeposit plumCreateDeposit = 21;</code>
   * @return The plumCreateDeposit.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.PlumCreateDeposit getPlumCreateDeposit() {
    if (actionCase_ == 21) {
       return (com.github.iotexproject.grpc.types.PlumCreateDeposit) action_;
    }
    return com.github.iotexproject.grpc.types.PlumCreateDeposit.getDefaultInstance();
  }
  /**
   * <code>.iotextypes.PlumCreateDeposit plumCreateDeposit = 21;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.PlumCreateDepositOrBuilder getPlumCreateDepositOrBuilder() {
    if (actionCase_ == 21) {
       return (com.github.iotexproject.grpc.types.PlumCreateDeposit) action_;
    }
    return com.github.iotexproject.grpc.types.PlumCreateDeposit.getDefaultInstance();
  }

  public static final int PLUMSTARTEXIT_FIELD_NUMBER = 22;
  /**
   * <code>.iotextypes.PlumStartExit plumStartExit = 22;</code>
   * @return Whether the plumStartExit field is set.
   */
  @java.lang.Override
  public boolean hasPlumStartExit() {
    return actionCase_ == 22;
  }
  /**
   * <code>.iotextypes.PlumStartExit plumStartExit = 22;</code>
   * @return The plumStartExit.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.PlumStartExit getPlumStartExit() {
    if (actionCase_ == 22) {
       return (com.github.iotexproject.grpc.types.PlumStartExit) action_;
    }
    return com.github.iotexproject.grpc.types.PlumStartExit.getDefaultInstance();
  }
  /**
   * <code>.iotextypes.PlumStartExit plumStartExit = 22;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.PlumStartExitOrBuilder getPlumStartExitOrBuilder() {
    if (actionCase_ == 22) {
       return (com.github.iotexproject.grpc.types.PlumStartExit) action_;
    }
    return com.github.iotexproject.grpc.types.PlumStartExit.getDefaultInstance();
  }

  public static final int PLUMCHALLENGEEXIT_FIELD_NUMBER = 23;
  /**
   * <code>.iotextypes.PlumChallengeExit plumChallengeExit = 23;</code>
   * @return Whether the plumChallengeExit field is set.
   */
  @java.lang.Override
  public boolean hasPlumChallengeExit() {
    return actionCase_ == 23;
  }
  /**
   * <code>.iotextypes.PlumChallengeExit plumChallengeExit = 23;</code>
   * @return The plumChallengeExit.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.PlumChallengeExit getPlumChallengeExit() {
    if (actionCase_ == 23) {
       return (com.github.iotexproject.grpc.types.PlumChallengeExit) action_;
    }
    return com.github.iotexproject.grpc.types.PlumChallengeExit.getDefaultInstance();
  }
  /**
   * <code>.iotextypes.PlumChallengeExit plumChallengeExit = 23;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.PlumChallengeExitOrBuilder getPlumChallengeExitOrBuilder() {
    if (actionCase_ == 23) {
       return (com.github.iotexproject.grpc.types.PlumChallengeExit) action_;
    }
    return com.github.iotexproject.grpc.types.PlumChallengeExit.getDefaultInstance();
  }

  public static final int PLUMRESPONSECHALLENGEEXIT_FIELD_NUMBER = 24;
  /**
   * <code>.iotextypes.PlumResponseChallengeExit plumResponseChallengeExit = 24;</code>
   * @return Whether the plumResponseChallengeExit field is set.
   */
  @java.lang.Override
  public boolean hasPlumResponseChallengeExit() {
    return actionCase_ == 24;
  }
  /**
   * <code>.iotextypes.PlumResponseChallengeExit plumResponseChallengeExit = 24;</code>
   * @return The plumResponseChallengeExit.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.PlumResponseChallengeExit getPlumResponseChallengeExit() {
    if (actionCase_ == 24) {
       return (com.github.iotexproject.grpc.types.PlumResponseChallengeExit) action_;
    }
    return com.github.iotexproject.grpc.types.PlumResponseChallengeExit.getDefaultInstance();
  }
  /**
   * <code>.iotextypes.PlumResponseChallengeExit plumResponseChallengeExit = 24;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.PlumResponseChallengeExitOrBuilder getPlumResponseChallengeExitOrBuilder() {
    if (actionCase_ == 24) {
       return (com.github.iotexproject.grpc.types.PlumResponseChallengeExit) action_;
    }
    return com.github.iotexproject.grpc.types.PlumResponseChallengeExit.getDefaultInstance();
  }

  public static final int PLUMFINALIZEEXIT_FIELD_NUMBER = 25;
  /**
   * <code>.iotextypes.PlumFinalizeExit plumFinalizeExit = 25;</code>
   * @return Whether the plumFinalizeExit field is set.
   */
  @java.lang.Override
  public boolean hasPlumFinalizeExit() {
    return actionCase_ == 25;
  }
  /**
   * <code>.iotextypes.PlumFinalizeExit plumFinalizeExit = 25;</code>
   * @return The plumFinalizeExit.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.PlumFinalizeExit getPlumFinalizeExit() {
    if (actionCase_ == 25) {
       return (com.github.iotexproject.grpc.types.PlumFinalizeExit) action_;
    }
    return com.github.iotexproject.grpc.types.PlumFinalizeExit.getDefaultInstance();
  }
  /**
   * <code>.iotextypes.PlumFinalizeExit plumFinalizeExit = 25;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.PlumFinalizeExitOrBuilder getPlumFinalizeExitOrBuilder() {
    if (actionCase_ == 25) {
       return (com.github.iotexproject.grpc.types.PlumFinalizeExit) action_;
    }
    return com.github.iotexproject.grpc.types.PlumFinalizeExit.getDefaultInstance();
  }

  public static final int PLUMSETTLEDEPOSIT_FIELD_NUMBER = 26;
  /**
   * <code>.iotextypes.PlumSettleDeposit plumSettleDeposit = 26;</code>
   * @return Whether the plumSettleDeposit field is set.
   */
  @java.lang.Override
  public boolean hasPlumSettleDeposit() {
    return actionCase_ == 26;
  }
  /**
   * <code>.iotextypes.PlumSettleDeposit plumSettleDeposit = 26;</code>
   * @return The plumSettleDeposit.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.PlumSettleDeposit getPlumSettleDeposit() {
    if (actionCase_ == 26) {
       return (com.github.iotexproject.grpc.types.PlumSettleDeposit) action_;
    }
    return com.github.iotexproject.grpc.types.PlumSettleDeposit.getDefaultInstance();
  }
  /**
   * <code>.iotextypes.PlumSettleDeposit plumSettleDeposit = 26;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.PlumSettleDepositOrBuilder getPlumSettleDepositOrBuilder() {
    if (actionCase_ == 26) {
       return (com.github.iotexproject.grpc.types.PlumSettleDeposit) action_;
    }
    return com.github.iotexproject.grpc.types.PlumSettleDeposit.getDefaultInstance();
  }

  public static final int PLUMTRANSFER_FIELD_NUMBER = 27;
  /**
   * <code>.iotextypes.PlumTransfer plumTransfer = 27;</code>
   * @return Whether the plumTransfer field is set.
   */
  @java.lang.Override
  public boolean hasPlumTransfer() {
    return actionCase_ == 27;
  }
  /**
   * <code>.iotextypes.PlumTransfer plumTransfer = 27;</code>
   * @return The plumTransfer.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.PlumTransfer getPlumTransfer() {
    if (actionCase_ == 27) {
       return (com.github.iotexproject.grpc.types.PlumTransfer) action_;
    }
    return com.github.iotexproject.grpc.types.PlumTransfer.getDefaultInstance();
  }
  /**
   * <code>.iotextypes.PlumTransfer plumTransfer = 27;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.PlumTransferOrBuilder getPlumTransferOrBuilder() {
    if (actionCase_ == 27) {
       return (com.github.iotexproject.grpc.types.PlumTransfer) action_;
    }
    return com.github.iotexproject.grpc.types.PlumTransfer.getDefaultInstance();
  }

  public static final int DEPOSITTOREWARDINGFUND_FIELD_NUMBER = 30;
  /**
   * <pre>
   * Rewarding protocol actions
   * </pre>
   *
   * <code>.iotextypes.DepositToRewardingFund depositToRewardingFund = 30;</code>
   * @return Whether the depositToRewardingFund field is set.
   */
  @java.lang.Override
  public boolean hasDepositToRewardingFund() {
    return actionCase_ == 30;
  }
  /**
   * <pre>
   * Rewarding protocol actions
   * </pre>
   *
   * <code>.iotextypes.DepositToRewardingFund depositToRewardingFund = 30;</code>
   * @return The depositToRewardingFund.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.DepositToRewardingFund getDepositToRewardingFund() {
    if (actionCase_ == 30) {
       return (com.github.iotexproject.grpc.types.DepositToRewardingFund) action_;
    }
    return com.github.iotexproject.grpc.types.DepositToRewardingFund.getDefaultInstance();
  }
  /**
   * <pre>
   * Rewarding protocol actions
   * </pre>
   *
   * <code>.iotextypes.DepositToRewardingFund depositToRewardingFund = 30;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.DepositToRewardingFundOrBuilder getDepositToRewardingFundOrBuilder() {
    if (actionCase_ == 30) {
       return (com.github.iotexproject.grpc.types.DepositToRewardingFund) action_;
    }
    return com.github.iotexproject.grpc.types.DepositToRewardingFund.getDefaultInstance();
  }

  public static final int CLAIMFROMREWARDINGFUND_FIELD_NUMBER = 31;
  /**
   * <code>.iotextypes.ClaimFromRewardingFund claimFromRewardingFund = 31;</code>
   * @return Whether the claimFromRewardingFund field is set.
   */
  @java.lang.Override
  public boolean hasClaimFromRewardingFund() {
    return actionCase_ == 31;
  }
  /**
   * <code>.iotextypes.ClaimFromRewardingFund claimFromRewardingFund = 31;</code>
   * @return The claimFromRewardingFund.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.ClaimFromRewardingFund getClaimFromRewardingFund() {
    if (actionCase_ == 31) {
       return (com.github.iotexproject.grpc.types.ClaimFromRewardingFund) action_;
    }
    return com.github.iotexproject.grpc.types.ClaimFromRewardingFund.getDefaultInstance();
  }
  /**
   * <code>.iotextypes.ClaimFromRewardingFund claimFromRewardingFund = 31;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.ClaimFromRewardingFundOrBuilder getClaimFromRewardingFundOrBuilder() {
    if (actionCase_ == 31) {
       return (com.github.iotexproject.grpc.types.ClaimFromRewardingFund) action_;
    }
    return com.github.iotexproject.grpc.types.ClaimFromRewardingFund.getDefaultInstance();
  }

  public static final int GRANTREWARD_FIELD_NUMBER = 32;
  /**
   * <code>.iotextypes.GrantReward grantReward = 32;</code>
   * @return Whether the grantReward field is set.
   */
  @java.lang.Override
  public boolean hasGrantReward() {
    return actionCase_ == 32;
  }
  /**
   * <code>.iotextypes.GrantReward grantReward = 32;</code>
   * @return The grantReward.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.GrantReward getGrantReward() {
    if (actionCase_ == 32) {
       return (com.github.iotexproject.grpc.types.GrantReward) action_;
    }
    return com.github.iotexproject.grpc.types.GrantReward.getDefaultInstance();
  }
  /**
   * <code>.iotextypes.GrantReward grantReward = 32;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.GrantRewardOrBuilder getGrantRewardOrBuilder() {
    if (actionCase_ == 32) {
       return (com.github.iotexproject.grpc.types.GrantReward) action_;
    }
    return com.github.iotexproject.grpc.types.GrantReward.getDefaultInstance();
  }

  public static final int STAKECREATE_FIELD_NUMBER = 40;
  /**
   * <pre>
   * Native staking
   * </pre>
   *
   * <code>.iotextypes.StakeCreate stakeCreate = 40;</code>
   * @return Whether the stakeCreate field is set.
   */
  @java.lang.Override
  public boolean hasStakeCreate() {
    return actionCase_ == 40;
  }
  /**
   * <pre>
   * Native staking
   * </pre>
   *
   * <code>.iotextypes.StakeCreate stakeCreate = 40;</code>
   * @return The stakeCreate.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.StakeCreate getStakeCreate() {
    if (actionCase_ == 40) {
       return (com.github.iotexproject.grpc.types.StakeCreate) action_;
    }
    return com.github.iotexproject.grpc.types.StakeCreate.getDefaultInstance();
  }
  /**
   * <pre>
   * Native staking
   * </pre>
   *
   * <code>.iotextypes.StakeCreate stakeCreate = 40;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.StakeCreateOrBuilder getStakeCreateOrBuilder() {
    if (actionCase_ == 40) {
       return (com.github.iotexproject.grpc.types.StakeCreate) action_;
    }
    return com.github.iotexproject.grpc.types.StakeCreate.getDefaultInstance();
  }

  public static final int STAKEUNSTAKE_FIELD_NUMBER = 41;
  /**
   * <code>.iotextypes.StakeReclaim stakeUnstake = 41;</code>
   * @return Whether the stakeUnstake field is set.
   */
  @java.lang.Override
  public boolean hasStakeUnstake() {
    return actionCase_ == 41;
  }
  /**
   * <code>.iotextypes.StakeReclaim stakeUnstake = 41;</code>
   * @return The stakeUnstake.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.StakeReclaim getStakeUnstake() {
    if (actionCase_ == 41) {
       return (com.github.iotexproject.grpc.types.StakeReclaim) action_;
    }
    return com.github.iotexproject.grpc.types.StakeReclaim.getDefaultInstance();
  }
  /**
   * <code>.iotextypes.StakeReclaim stakeUnstake = 41;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.StakeReclaimOrBuilder getStakeUnstakeOrBuilder() {
    if (actionCase_ == 41) {
       return (com.github.iotexproject.grpc.types.StakeReclaim) action_;
    }
    return com.github.iotexproject.grpc.types.StakeReclaim.getDefaultInstance();
  }

  public static final int STAKEWITHDRAW_FIELD_NUMBER = 42;
  /**
   * <code>.iotextypes.StakeReclaim stakeWithdraw = 42;</code>
   * @return Whether the stakeWithdraw field is set.
   */
  @java.lang.Override
  public boolean hasStakeWithdraw() {
    return actionCase_ == 42;
  }
  /**
   * <code>.iotextypes.StakeReclaim stakeWithdraw = 42;</code>
   * @return The stakeWithdraw.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.StakeReclaim getStakeWithdraw() {
    if (actionCase_ == 42) {
       return (com.github.iotexproject.grpc.types.StakeReclaim) action_;
    }
    return com.github.iotexproject.grpc.types.StakeReclaim.getDefaultInstance();
  }
  /**
   * <code>.iotextypes.StakeReclaim stakeWithdraw = 42;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.StakeReclaimOrBuilder getStakeWithdrawOrBuilder() {
    if (actionCase_ == 42) {
       return (com.github.iotexproject.grpc.types.StakeReclaim) action_;
    }
    return com.github.iotexproject.grpc.types.StakeReclaim.getDefaultInstance();
  }

  public static final int STAKEADDDEPOSIT_FIELD_NUMBER = 43;
  /**
   * <code>.iotextypes.StakeAddDeposit stakeAddDeposit = 43;</code>
   * @return Whether the stakeAddDeposit field is set.
   */
  @java.lang.Override
  public boolean hasStakeAddDeposit() {
    return actionCase_ == 43;
  }
  /**
   * <code>.iotextypes.StakeAddDeposit stakeAddDeposit = 43;</code>
   * @return The stakeAddDeposit.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.StakeAddDeposit getStakeAddDeposit() {
    if (actionCase_ == 43) {
       return (com.github.iotexproject.grpc.types.StakeAddDeposit) action_;
    }
    return com.github.iotexproject.grpc.types.StakeAddDeposit.getDefaultInstance();
  }
  /**
   * <code>.iotextypes.StakeAddDeposit stakeAddDeposit = 43;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.StakeAddDepositOrBuilder getStakeAddDepositOrBuilder() {
    if (actionCase_ == 43) {
       return (com.github.iotexproject.grpc.types.StakeAddDeposit) action_;
    }
    return com.github.iotexproject.grpc.types.StakeAddDeposit.getDefaultInstance();
  }

  public static final int STAKERESTAKE_FIELD_NUMBER = 44;
  /**
   * <code>.iotextypes.StakeRestake stakeRestake = 44;</code>
   * @return Whether the stakeRestake field is set.
   */
  @java.lang.Override
  public boolean hasStakeRestake() {
    return actionCase_ == 44;
  }
  /**
   * <code>.iotextypes.StakeRestake stakeRestake = 44;</code>
   * @return The stakeRestake.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.StakeRestake getStakeRestake() {
    if (actionCase_ == 44) {
       return (com.github.iotexproject.grpc.types.StakeRestake) action_;
    }
    return com.github.iotexproject.grpc.types.StakeRestake.getDefaultInstance();
  }
  /**
   * <code>.iotextypes.StakeRestake stakeRestake = 44;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.StakeRestakeOrBuilder getStakeRestakeOrBuilder() {
    if (actionCase_ == 44) {
       return (com.github.iotexproject.grpc.types.StakeRestake) action_;
    }
    return com.github.iotexproject.grpc.types.StakeRestake.getDefaultInstance();
  }

  public static final int STAKECHANGECANDIDATE_FIELD_NUMBER = 45;
  /**
   * <code>.iotextypes.StakeChangeCandidate stakeChangeCandidate = 45;</code>
   * @return Whether the stakeChangeCandidate field is set.
   */
  @java.lang.Override
  public boolean hasStakeChangeCandidate() {
    return actionCase_ == 45;
  }
  /**
   * <code>.iotextypes.StakeChangeCandidate stakeChangeCandidate = 45;</code>
   * @return The stakeChangeCandidate.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.StakeChangeCandidate getStakeChangeCandidate() {
    if (actionCase_ == 45) {
       return (com.github.iotexproject.grpc.types.StakeChangeCandidate) action_;
    }
    return com.github.iotexproject.grpc.types.StakeChangeCandidate.getDefaultInstance();
  }
  /**
   * <code>.iotextypes.StakeChangeCandidate stakeChangeCandidate = 45;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.StakeChangeCandidateOrBuilder getStakeChangeCandidateOrBuilder() {
    if (actionCase_ == 45) {
       return (com.github.iotexproject.grpc.types.StakeChangeCandidate) action_;
    }
    return com.github.iotexproject.grpc.types.StakeChangeCandidate.getDefaultInstance();
  }

  public static final int STAKETRANSFEROWNERSHIP_FIELD_NUMBER = 46;
  /**
   * <code>.iotextypes.StakeTransferOwnership stakeTransferOwnership = 46;</code>
   * @return Whether the stakeTransferOwnership field is set.
   */
  @java.lang.Override
  public boolean hasStakeTransferOwnership() {
    return actionCase_ == 46;
  }
  /**
   * <code>.iotextypes.StakeTransferOwnership stakeTransferOwnership = 46;</code>
   * @return The stakeTransferOwnership.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.StakeTransferOwnership getStakeTransferOwnership() {
    if (actionCase_ == 46) {
       return (com.github.iotexproject.grpc.types.StakeTransferOwnership) action_;
    }
    return com.github.iotexproject.grpc.types.StakeTransferOwnership.getDefaultInstance();
  }
  /**
   * <code>.iotextypes.StakeTransferOwnership stakeTransferOwnership = 46;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.StakeTransferOwnershipOrBuilder getStakeTransferOwnershipOrBuilder() {
    if (actionCase_ == 46) {
       return (com.github.iotexproject.grpc.types.StakeTransferOwnership) action_;
    }
    return com.github.iotexproject.grpc.types.StakeTransferOwnership.getDefaultInstance();
  }

  public static final int CANDIDATEREGISTER_FIELD_NUMBER = 47;
  /**
   * <code>.iotextypes.CandidateRegister candidateRegister = 47;</code>
   * @return Whether the candidateRegister field is set.
   */
  @java.lang.Override
  public boolean hasCandidateRegister() {
    return actionCase_ == 47;
  }
  /**
   * <code>.iotextypes.CandidateRegister candidateRegister = 47;</code>
   * @return The candidateRegister.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.CandidateRegister getCandidateRegister() {
    if (actionCase_ == 47) {
       return (com.github.iotexproject.grpc.types.CandidateRegister) action_;
    }
    return com.github.iotexproject.grpc.types.CandidateRegister.getDefaultInstance();
  }
  /**
   * <code>.iotextypes.CandidateRegister candidateRegister = 47;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.CandidateRegisterOrBuilder getCandidateRegisterOrBuilder() {
    if (actionCase_ == 47) {
       return (com.github.iotexproject.grpc.types.CandidateRegister) action_;
    }
    return com.github.iotexproject.grpc.types.CandidateRegister.getDefaultInstance();
  }

  public static final int CANDIDATEUPDATE_FIELD_NUMBER = 48;
  /**
   * <code>.iotextypes.CandidateBasicInfo candidateUpdate = 48;</code>
   * @return Whether the candidateUpdate field is set.
   */
  @java.lang.Override
  public boolean hasCandidateUpdate() {
    return actionCase_ == 48;
  }
  /**
   * <code>.iotextypes.CandidateBasicInfo candidateUpdate = 48;</code>
   * @return The candidateUpdate.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.CandidateBasicInfo getCandidateUpdate() {
    if (actionCase_ == 48) {
       return (com.github.iotexproject.grpc.types.CandidateBasicInfo) action_;
    }
    return com.github.iotexproject.grpc.types.CandidateBasicInfo.getDefaultInstance();
  }
  /**
   * <code>.iotextypes.CandidateBasicInfo candidateUpdate = 48;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.CandidateBasicInfoOrBuilder getCandidateUpdateOrBuilder() {
    if (actionCase_ == 48) {
       return (com.github.iotexproject.grpc.types.CandidateBasicInfo) action_;
    }
    return com.github.iotexproject.grpc.types.CandidateBasicInfo.getDefaultInstance();
  }

  public static final int CANDIDATEACTIVATE_FIELD_NUMBER = 49;
  /**
   * <code>.iotextypes.CandidateActivate candidateActivate = 49;</code>
   * @return Whether the candidateActivate field is set.
   */
  @java.lang.Override
  public boolean hasCandidateActivate() {
    return actionCase_ == 49;
  }
  /**
   * <code>.iotextypes.CandidateActivate candidateActivate = 49;</code>
   * @return The candidateActivate.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.CandidateActivate getCandidateActivate() {
    if (actionCase_ == 49) {
       return (com.github.iotexproject.grpc.types.CandidateActivate) action_;
    }
    return com.github.iotexproject.grpc.types.CandidateActivate.getDefaultInstance();
  }
  /**
   * <code>.iotextypes.CandidateActivate candidateActivate = 49;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.CandidateActivateOrBuilder getCandidateActivateOrBuilder() {
    if (actionCase_ == 49) {
       return (com.github.iotexproject.grpc.types.CandidateActivate) action_;
    }
    return com.github.iotexproject.grpc.types.CandidateActivate.getDefaultInstance();
  }

  public static final int CANDIDATEENDORSEMENT_FIELD_NUMBER = 51;
  /**
   * <code>.iotextypes.CandidateEndorsement candidateEndorsement = 51;</code>
   * @return Whether the candidateEndorsement field is set.
   */
  @java.lang.Override
  public boolean hasCandidateEndorsement() {
    return actionCase_ == 51;
  }
  /**
   * <code>.iotextypes.CandidateEndorsement candidateEndorsement = 51;</code>
   * @return The candidateEndorsement.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.CandidateEndorsement getCandidateEndorsement() {
    if (actionCase_ == 51) {
       return (com.github.iotexproject.grpc.types.CandidateEndorsement) action_;
    }
    return com.github.iotexproject.grpc.types.CandidateEndorsement.getDefaultInstance();
  }
  /**
   * <code>.iotextypes.CandidateEndorsement candidateEndorsement = 51;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.CandidateEndorsementOrBuilder getCandidateEndorsementOrBuilder() {
    if (actionCase_ == 51) {
       return (com.github.iotexproject.grpc.types.CandidateEndorsement) action_;
    }
    return com.github.iotexproject.grpc.types.CandidateEndorsement.getDefaultInstance();
  }

  public static final int CANDIDATETRANSFEROWNERSHIP_FIELD_NUMBER = 52;
  /**
   * <code>.iotextypes.CandidateTransferOwnership candidateTransferOwnership = 52;</code>
   * @return Whether the candidateTransferOwnership field is set.
   */
  @java.lang.Override
  public boolean hasCandidateTransferOwnership() {
    return actionCase_ == 52;
  }
  /**
   * <code>.iotextypes.CandidateTransferOwnership candidateTransferOwnership = 52;</code>
   * @return The candidateTransferOwnership.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.CandidateTransferOwnership getCandidateTransferOwnership() {
    if (actionCase_ == 52) {
       return (com.github.iotexproject.grpc.types.CandidateTransferOwnership) action_;
    }
    return com.github.iotexproject.grpc.types.CandidateTransferOwnership.getDefaultInstance();
  }
  /**
   * <code>.iotextypes.CandidateTransferOwnership candidateTransferOwnership = 52;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.CandidateTransferOwnershipOrBuilder getCandidateTransferOwnershipOrBuilder() {
    if (actionCase_ == 52) {
       return (com.github.iotexproject.grpc.types.CandidateTransferOwnership) action_;
    }
    return com.github.iotexproject.grpc.types.CandidateTransferOwnership.getDefaultInstance();
  }

  public static final int STAKEMIGRATE_FIELD_NUMBER = 53;
  /**
   * <code>.iotextypes.StakeMigrate stakeMigrate = 53;</code>
   * @return Whether the stakeMigrate field is set.
   */
  @java.lang.Override
  public boolean hasStakeMigrate() {
    return actionCase_ == 53;
  }
  /**
   * <code>.iotextypes.StakeMigrate stakeMigrate = 53;</code>
   * @return The stakeMigrate.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.StakeMigrate getStakeMigrate() {
    if (actionCase_ == 53) {
       return (com.github.iotexproject.grpc.types.StakeMigrate) action_;
    }
    return com.github.iotexproject.grpc.types.StakeMigrate.getDefaultInstance();
  }
  /**
   * <code>.iotextypes.StakeMigrate stakeMigrate = 53;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.StakeMigrateOrBuilder getStakeMigrateOrBuilder() {
    if (actionCase_ == 53) {
       return (com.github.iotexproject.grpc.types.StakeMigrate) action_;
    }
    return com.github.iotexproject.grpc.types.StakeMigrate.getDefaultInstance();
  }

  public static final int PUTPOLLRESULT_FIELD_NUMBER = 50;
  /**
   * <code>.iotextypes.PutPollResult putPollResult = 50;</code>
   * @return Whether the putPollResult field is set.
   */
  @java.lang.Override
  public boolean hasPutPollResult() {
    return actionCase_ == 50;
  }
  /**
   * <code>.iotextypes.PutPollResult putPollResult = 50;</code>
   * @return The putPollResult.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.PutPollResult getPutPollResult() {
    if (actionCase_ == 50) {
       return (com.github.iotexproject.grpc.types.PutPollResult) action_;
    }
    return com.github.iotexproject.grpc.types.PutPollResult.getDefaultInstance();
  }
  /**
   * <code>.iotextypes.PutPollResult putPollResult = 50;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.PutPollResultOrBuilder getPutPollResultOrBuilder() {
    if (actionCase_ == 50) {
       return (com.github.iotexproject.grpc.types.PutPollResult) action_;
    }
    return com.github.iotexproject.grpc.types.PutPollResult.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (version_ != 0) {
      output.writeUInt32(1, version_);
    }
    if (nonce_ != 0L) {
      output.writeUInt64(2, nonce_);
    }
    if (gasLimit_ != 0L) {
      output.writeUInt64(3, gasLimit_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(gasPrice_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 4, gasPrice_);
    }
    if (chainID_ != 0) {
      output.writeUInt32(5, chainID_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(gasTipCap_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 6, gasTipCap_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(gasFeeCap_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 7, gasFeeCap_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(8, getBlobTxData());
    }
    for (int i = 0; i < accessList_.size(); i++) {
      output.writeMessage(9, accessList_.get(i));
    }
    if (actionCase_ == 10) {
      output.writeMessage(10, (com.github.iotexproject.grpc.types.Transfer) action_);
    }
    if (actionCase_ == 11) {
      output.writeMessage(11, (com.github.iotexproject.grpc.types.TxContainer) action_);
    }
    if (actionCase_ == 12) {
      output.writeMessage(12, (com.github.iotexproject.grpc.types.Execution) action_);
    }
    if (actionCase_ == 13) {
      output.writeMessage(13, (com.github.iotexproject.grpc.types.StartSubChain) action_);
    }
    if (actionCase_ == 14) {
      output.writeMessage(14, (com.github.iotexproject.grpc.types.StopSubChain) action_);
    }
    if (actionCase_ == 15) {
      output.writeMessage(15, (com.github.iotexproject.grpc.types.PutBlock) action_);
    }
    if (actionCase_ == 16) {
      output.writeMessage(16, (com.github.iotexproject.grpc.types.CreateDeposit) action_);
    }
    if (actionCase_ == 17) {
      output.writeMessage(17, (com.github.iotexproject.grpc.types.SettleDeposit) action_);
    }
    if (actionCase_ == 18) {
      output.writeMessage(18, (com.github.iotexproject.grpc.types.CreatePlumChain) action_);
    }
    if (actionCase_ == 19) {
      output.writeMessage(19, (com.github.iotexproject.grpc.types.TerminatePlumChain) action_);
    }
    if (actionCase_ == 20) {
      output.writeMessage(20, (com.github.iotexproject.grpc.types.PlumPutBlock) action_);
    }
    if (actionCase_ == 21) {
      output.writeMessage(21, (com.github.iotexproject.grpc.types.PlumCreateDeposit) action_);
    }
    if (actionCase_ == 22) {
      output.writeMessage(22, (com.github.iotexproject.grpc.types.PlumStartExit) action_);
    }
    if (actionCase_ == 23) {
      output.writeMessage(23, (com.github.iotexproject.grpc.types.PlumChallengeExit) action_);
    }
    if (actionCase_ == 24) {
      output.writeMessage(24, (com.github.iotexproject.grpc.types.PlumResponseChallengeExit) action_);
    }
    if (actionCase_ == 25) {
      output.writeMessage(25, (com.github.iotexproject.grpc.types.PlumFinalizeExit) action_);
    }
    if (actionCase_ == 26) {
      output.writeMessage(26, (com.github.iotexproject.grpc.types.PlumSettleDeposit) action_);
    }
    if (actionCase_ == 27) {
      output.writeMessage(27, (com.github.iotexproject.grpc.types.PlumTransfer) action_);
    }
    if (txType_ != 0) {
      output.writeUInt32(28, txType_);
    }
    if (actionCase_ == 30) {
      output.writeMessage(30, (com.github.iotexproject.grpc.types.DepositToRewardingFund) action_);
    }
    if (actionCase_ == 31) {
      output.writeMessage(31, (com.github.iotexproject.grpc.types.ClaimFromRewardingFund) action_);
    }
    if (actionCase_ == 32) {
      output.writeMessage(32, (com.github.iotexproject.grpc.types.GrantReward) action_);
    }
    if (actionCase_ == 40) {
      output.writeMessage(40, (com.github.iotexproject.grpc.types.StakeCreate) action_);
    }
    if (actionCase_ == 41) {
      output.writeMessage(41, (com.github.iotexproject.grpc.types.StakeReclaim) action_);
    }
    if (actionCase_ == 42) {
      output.writeMessage(42, (com.github.iotexproject.grpc.types.StakeReclaim) action_);
    }
    if (actionCase_ == 43) {
      output.writeMessage(43, (com.github.iotexproject.grpc.types.StakeAddDeposit) action_);
    }
    if (actionCase_ == 44) {
      output.writeMessage(44, (com.github.iotexproject.grpc.types.StakeRestake) action_);
    }
    if (actionCase_ == 45) {
      output.writeMessage(45, (com.github.iotexproject.grpc.types.StakeChangeCandidate) action_);
    }
    if (actionCase_ == 46) {
      output.writeMessage(46, (com.github.iotexproject.grpc.types.StakeTransferOwnership) action_);
    }
    if (actionCase_ == 47) {
      output.writeMessage(47, (com.github.iotexproject.grpc.types.CandidateRegister) action_);
    }
    if (actionCase_ == 48) {
      output.writeMessage(48, (com.github.iotexproject.grpc.types.CandidateBasicInfo) action_);
    }
    if (actionCase_ == 49) {
      output.writeMessage(49, (com.github.iotexproject.grpc.types.CandidateActivate) action_);
    }
    if (actionCase_ == 50) {
      output.writeMessage(50, (com.github.iotexproject.grpc.types.PutPollResult) action_);
    }
    if (actionCase_ == 51) {
      output.writeMessage(51, (com.github.iotexproject.grpc.types.CandidateEndorsement) action_);
    }
    if (actionCase_ == 52) {
      output.writeMessage(52, (com.github.iotexproject.grpc.types.CandidateTransferOwnership) action_);
    }
    if (actionCase_ == 53) {
      output.writeMessage(53, (com.github.iotexproject.grpc.types.StakeMigrate) action_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (version_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(1, version_);
    }
    if (nonce_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(2, nonce_);
    }
    if (gasLimit_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(3, gasLimit_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(gasPrice_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(4, gasPrice_);
    }
    if (chainID_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(5, chainID_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(gasTipCap_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(6, gasTipCap_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(gasFeeCap_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(7, gasFeeCap_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, getBlobTxData());
    }
    for (int i = 0; i < accessList_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, accessList_.get(i));
    }
    if (actionCase_ == 10) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(10, (com.github.iotexproject.grpc.types.Transfer) action_);
    }
    if (actionCase_ == 11) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(11, (com.github.iotexproject.grpc.types.TxContainer) action_);
    }
    if (actionCase_ == 12) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(12, (com.github.iotexproject.grpc.types.Execution) action_);
    }
    if (actionCase_ == 13) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(13, (com.github.iotexproject.grpc.types.StartSubChain) action_);
    }
    if (actionCase_ == 14) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(14, (com.github.iotexproject.grpc.types.StopSubChain) action_);
    }
    if (actionCase_ == 15) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(15, (com.github.iotexproject.grpc.types.PutBlock) action_);
    }
    if (actionCase_ == 16) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(16, (com.github.iotexproject.grpc.types.CreateDeposit) action_);
    }
    if (actionCase_ == 17) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(17, (com.github.iotexproject.grpc.types.SettleDeposit) action_);
    }
    if (actionCase_ == 18) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(18, (com.github.iotexproject.grpc.types.CreatePlumChain) action_);
    }
    if (actionCase_ == 19) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(19, (com.github.iotexproject.grpc.types.TerminatePlumChain) action_);
    }
    if (actionCase_ == 20) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(20, (com.github.iotexproject.grpc.types.PlumPutBlock) action_);
    }
    if (actionCase_ == 21) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(21, (com.github.iotexproject.grpc.types.PlumCreateDeposit) action_);
    }
    if (actionCase_ == 22) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(22, (com.github.iotexproject.grpc.types.PlumStartExit) action_);
    }
    if (actionCase_ == 23) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(23, (com.github.iotexproject.grpc.types.PlumChallengeExit) action_);
    }
    if (actionCase_ == 24) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(24, (com.github.iotexproject.grpc.types.PlumResponseChallengeExit) action_);
    }
    if (actionCase_ == 25) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(25, (com.github.iotexproject.grpc.types.PlumFinalizeExit) action_);
    }
    if (actionCase_ == 26) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(26, (com.github.iotexproject.grpc.types.PlumSettleDeposit) action_);
    }
    if (actionCase_ == 27) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(27, (com.github.iotexproject.grpc.types.PlumTransfer) action_);
    }
    if (txType_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(28, txType_);
    }
    if (actionCase_ == 30) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(30, (com.github.iotexproject.grpc.types.DepositToRewardingFund) action_);
    }
    if (actionCase_ == 31) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(31, (com.github.iotexproject.grpc.types.ClaimFromRewardingFund) action_);
    }
    if (actionCase_ == 32) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(32, (com.github.iotexproject.grpc.types.GrantReward) action_);
    }
    if (actionCase_ == 40) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(40, (com.github.iotexproject.grpc.types.StakeCreate) action_);
    }
    if (actionCase_ == 41) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(41, (com.github.iotexproject.grpc.types.StakeReclaim) action_);
    }
    if (actionCase_ == 42) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(42, (com.github.iotexproject.grpc.types.StakeReclaim) action_);
    }
    if (actionCase_ == 43) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(43, (com.github.iotexproject.grpc.types.StakeAddDeposit) action_);
    }
    if (actionCase_ == 44) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(44, (com.github.iotexproject.grpc.types.StakeRestake) action_);
    }
    if (actionCase_ == 45) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(45, (com.github.iotexproject.grpc.types.StakeChangeCandidate) action_);
    }
    if (actionCase_ == 46) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(46, (com.github.iotexproject.grpc.types.StakeTransferOwnership) action_);
    }
    if (actionCase_ == 47) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(47, (com.github.iotexproject.grpc.types.CandidateRegister) action_);
    }
    if (actionCase_ == 48) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(48, (com.github.iotexproject.grpc.types.CandidateBasicInfo) action_);
    }
    if (actionCase_ == 49) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(49, (com.github.iotexproject.grpc.types.CandidateActivate) action_);
    }
    if (actionCase_ == 50) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(50, (com.github.iotexproject.grpc.types.PutPollResult) action_);
    }
    if (actionCase_ == 51) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(51, (com.github.iotexproject.grpc.types.CandidateEndorsement) action_);
    }
    if (actionCase_ == 52) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(52, (com.github.iotexproject.grpc.types.CandidateTransferOwnership) action_);
    }
    if (actionCase_ == 53) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(53, (com.github.iotexproject.grpc.types.StakeMigrate) action_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.github.iotexproject.grpc.types.ActionCore)) {
      return super.equals(obj);
    }
    com.github.iotexproject.grpc.types.ActionCore other = (com.github.iotexproject.grpc.types.ActionCore) obj;

    if (getVersion()
        != other.getVersion()) return false;
    if (getNonce()
        != other.getNonce()) return false;
    if (getGasLimit()
        != other.getGasLimit()) return false;
    if (!getGasPrice()
        .equals(other.getGasPrice())) return false;
    if (getChainID()
        != other.getChainID()) return false;
    if (!getGasTipCap()
        .equals(other.getGasTipCap())) return false;
    if (!getGasFeeCap()
        .equals(other.getGasFeeCap())) return false;
    if (hasBlobTxData() != other.hasBlobTxData()) return false;
    if (hasBlobTxData()) {
      if (!getBlobTxData()
          .equals(other.getBlobTxData())) return false;
    }
    if (!getAccessListList()
        .equals(other.getAccessListList())) return false;
    if (getTxType()
        != other.getTxType()) return false;
    if (!getActionCase().equals(other.getActionCase())) return false;
    switch (actionCase_) {
      case 10:
        if (!getTransfer()
            .equals(other.getTransfer())) return false;
        break;
      case 11:
        if (!getTxContainer()
            .equals(other.getTxContainer())) return false;
        break;
      case 12:
        if (!getExecution()
            .equals(other.getExecution())) return false;
        break;
      case 13:
        if (!getStartSubChain()
            .equals(other.getStartSubChain())) return false;
        break;
      case 14:
        if (!getStopSubChain()
            .equals(other.getStopSubChain())) return false;
        break;
      case 15:
        if (!getPutBlock()
            .equals(other.getPutBlock())) return false;
        break;
      case 16:
        if (!getCreateDeposit()
            .equals(other.getCreateDeposit())) return false;
        break;
      case 17:
        if (!getSettleDeposit()
            .equals(other.getSettleDeposit())) return false;
        break;
      case 18:
        if (!getCreatePlumChain()
            .equals(other.getCreatePlumChain())) return false;
        break;
      case 19:
        if (!getTerminatePlumChain()
            .equals(other.getTerminatePlumChain())) return false;
        break;
      case 20:
        if (!getPlumPutBlock()
            .equals(other.getPlumPutBlock())) return false;
        break;
      case 21:
        if (!getPlumCreateDeposit()
            .equals(other.getPlumCreateDeposit())) return false;
        break;
      case 22:
        if (!getPlumStartExit()
            .equals(other.getPlumStartExit())) return false;
        break;
      case 23:
        if (!getPlumChallengeExit()
            .equals(other.getPlumChallengeExit())) return false;
        break;
      case 24:
        if (!getPlumResponseChallengeExit()
            .equals(other.getPlumResponseChallengeExit())) return false;
        break;
      case 25:
        if (!getPlumFinalizeExit()
            .equals(other.getPlumFinalizeExit())) return false;
        break;
      case 26:
        if (!getPlumSettleDeposit()
            .equals(other.getPlumSettleDeposit())) return false;
        break;
      case 27:
        if (!getPlumTransfer()
            .equals(other.getPlumTransfer())) return false;
        break;
      case 30:
        if (!getDepositToRewardingFund()
            .equals(other.getDepositToRewardingFund())) return false;
        break;
      case 31:
        if (!getClaimFromRewardingFund()
            .equals(other.getClaimFromRewardingFund())) return false;
        break;
      case 32:
        if (!getGrantReward()
            .equals(other.getGrantReward())) return false;
        break;
      case 40:
        if (!getStakeCreate()
            .equals(other.getStakeCreate())) return false;
        break;
      case 41:
        if (!getStakeUnstake()
            .equals(other.getStakeUnstake())) return false;
        break;
      case 42:
        if (!getStakeWithdraw()
            .equals(other.getStakeWithdraw())) return false;
        break;
      case 43:
        if (!getStakeAddDeposit()
            .equals(other.getStakeAddDeposit())) return false;
        break;
      case 44:
        if (!getStakeRestake()
            .equals(other.getStakeRestake())) return false;
        break;
      case 45:
        if (!getStakeChangeCandidate()
            .equals(other.getStakeChangeCandidate())) return false;
        break;
      case 46:
        if (!getStakeTransferOwnership()
            .equals(other.getStakeTransferOwnership())) return false;
        break;
      case 47:
        if (!getCandidateRegister()
            .equals(other.getCandidateRegister())) return false;
        break;
      case 48:
        if (!getCandidateUpdate()
            .equals(other.getCandidateUpdate())) return false;
        break;
      case 49:
        if (!getCandidateActivate()
            .equals(other.getCandidateActivate())) return false;
        break;
      case 51:
        if (!getCandidateEndorsement()
            .equals(other.getCandidateEndorsement())) return false;
        break;
      case 52:
        if (!getCandidateTransferOwnership()
            .equals(other.getCandidateTransferOwnership())) return false;
        break;
      case 53:
        if (!getStakeMigrate()
            .equals(other.getStakeMigrate())) return false;
        break;
      case 50:
        if (!getPutPollResult()
            .equals(other.getPutPollResult())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + VERSION_FIELD_NUMBER;
    hash = (53 * hash) + getVersion();
    hash = (37 * hash) + NONCE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getNonce());
    hash = (37 * hash) + GASLIMIT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getGasLimit());
    hash = (37 * hash) + GASPRICE_FIELD_NUMBER;
    hash = (53 * hash) + getGasPrice().hashCode();
    hash = (37 * hash) + CHAINID_FIELD_NUMBER;
    hash = (53 * hash) + getChainID();
    hash = (37 * hash) + GASTIPCAP_FIELD_NUMBER;
    hash = (53 * hash) + getGasTipCap().hashCode();
    hash = (37 * hash) + GASFEECAP_FIELD_NUMBER;
    hash = (53 * hash) + getGasFeeCap().hashCode();
    if (hasBlobTxData()) {
      hash = (37 * hash) + BLOBTXDATA_FIELD_NUMBER;
      hash = (53 * hash) + getBlobTxData().hashCode();
    }
    if (getAccessListCount() > 0) {
      hash = (37 * hash) + ACCESSLIST_FIELD_NUMBER;
      hash = (53 * hash) + getAccessListList().hashCode();
    }
    hash = (37 * hash) + TXTYPE_FIELD_NUMBER;
    hash = (53 * hash) + getTxType();
    switch (actionCase_) {
      case 10:
        hash = (37 * hash) + TRANSFER_FIELD_NUMBER;
        hash = (53 * hash) + getTransfer().hashCode();
        break;
      case 11:
        hash = (37 * hash) + TXCONTAINER_FIELD_NUMBER;
        hash = (53 * hash) + getTxContainer().hashCode();
        break;
      case 12:
        hash = (37 * hash) + EXECUTION_FIELD_NUMBER;
        hash = (53 * hash) + getExecution().hashCode();
        break;
      case 13:
        hash = (37 * hash) + STARTSUBCHAIN_FIELD_NUMBER;
        hash = (53 * hash) + getStartSubChain().hashCode();
        break;
      case 14:
        hash = (37 * hash) + STOPSUBCHAIN_FIELD_NUMBER;
        hash = (53 * hash) + getStopSubChain().hashCode();
        break;
      case 15:
        hash = (37 * hash) + PUTBLOCK_FIELD_NUMBER;
        hash = (53 * hash) + getPutBlock().hashCode();
        break;
      case 16:
        hash = (37 * hash) + CREATEDEPOSIT_FIELD_NUMBER;
        hash = (53 * hash) + getCreateDeposit().hashCode();
        break;
      case 17:
        hash = (37 * hash) + SETTLEDEPOSIT_FIELD_NUMBER;
        hash = (53 * hash) + getSettleDeposit().hashCode();
        break;
      case 18:
        hash = (37 * hash) + CREATEPLUMCHAIN_FIELD_NUMBER;
        hash = (53 * hash) + getCreatePlumChain().hashCode();
        break;
      case 19:
        hash = (37 * hash) + TERMINATEPLUMCHAIN_FIELD_NUMBER;
        hash = (53 * hash) + getTerminatePlumChain().hashCode();
        break;
      case 20:
        hash = (37 * hash) + PLUMPUTBLOCK_FIELD_NUMBER;
        hash = (53 * hash) + getPlumPutBlock().hashCode();
        break;
      case 21:
        hash = (37 * hash) + PLUMCREATEDEPOSIT_FIELD_NUMBER;
        hash = (53 * hash) + getPlumCreateDeposit().hashCode();
        break;
      case 22:
        hash = (37 * hash) + PLUMSTARTEXIT_FIELD_NUMBER;
        hash = (53 * hash) + getPlumStartExit().hashCode();
        break;
      case 23:
        hash = (37 * hash) + PLUMCHALLENGEEXIT_FIELD_NUMBER;
        hash = (53 * hash) + getPlumChallengeExit().hashCode();
        break;
      case 24:
        hash = (37 * hash) + PLUMRESPONSECHALLENGEEXIT_FIELD_NUMBER;
        hash = (53 * hash) + getPlumResponseChallengeExit().hashCode();
        break;
      case 25:
        hash = (37 * hash) + PLUMFINALIZEEXIT_FIELD_NUMBER;
        hash = (53 * hash) + getPlumFinalizeExit().hashCode();
        break;
      case 26:
        hash = (37 * hash) + PLUMSETTLEDEPOSIT_FIELD_NUMBER;
        hash = (53 * hash) + getPlumSettleDeposit().hashCode();
        break;
      case 27:
        hash = (37 * hash) + PLUMTRANSFER_FIELD_NUMBER;
        hash = (53 * hash) + getPlumTransfer().hashCode();
        break;
      case 30:
        hash = (37 * hash) + DEPOSITTOREWARDINGFUND_FIELD_NUMBER;
        hash = (53 * hash) + getDepositToRewardingFund().hashCode();
        break;
      case 31:
        hash = (37 * hash) + CLAIMFROMREWARDINGFUND_FIELD_NUMBER;
        hash = (53 * hash) + getClaimFromRewardingFund().hashCode();
        break;
      case 32:
        hash = (37 * hash) + GRANTREWARD_FIELD_NUMBER;
        hash = (53 * hash) + getGrantReward().hashCode();
        break;
      case 40:
        hash = (37 * hash) + STAKECREATE_FIELD_NUMBER;
        hash = (53 * hash) + getStakeCreate().hashCode();
        break;
      case 41:
        hash = (37 * hash) + STAKEUNSTAKE_FIELD_NUMBER;
        hash = (53 * hash) + getStakeUnstake().hashCode();
        break;
      case 42:
        hash = (37 * hash) + STAKEWITHDRAW_FIELD_NUMBER;
        hash = (53 * hash) + getStakeWithdraw().hashCode();
        break;
      case 43:
        hash = (37 * hash) + STAKEADDDEPOSIT_FIELD_NUMBER;
        hash = (53 * hash) + getStakeAddDeposit().hashCode();
        break;
      case 44:
        hash = (37 * hash) + STAKERESTAKE_FIELD_NUMBER;
        hash = (53 * hash) + getStakeRestake().hashCode();
        break;
      case 45:
        hash = (37 * hash) + STAKECHANGECANDIDATE_FIELD_NUMBER;
        hash = (53 * hash) + getStakeChangeCandidate().hashCode();
        break;
      case 46:
        hash = (37 * hash) + STAKETRANSFEROWNERSHIP_FIELD_NUMBER;
        hash = (53 * hash) + getStakeTransferOwnership().hashCode();
        break;
      case 47:
        hash = (37 * hash) + CANDIDATEREGISTER_FIELD_NUMBER;
        hash = (53 * hash) + getCandidateRegister().hashCode();
        break;
      case 48:
        hash = (37 * hash) + CANDIDATEUPDATE_FIELD_NUMBER;
        hash = (53 * hash) + getCandidateUpdate().hashCode();
        break;
      case 49:
        hash = (37 * hash) + CANDIDATEACTIVATE_FIELD_NUMBER;
        hash = (53 * hash) + getCandidateActivate().hashCode();
        break;
      case 51:
        hash = (37 * hash) + CANDIDATEENDORSEMENT_FIELD_NUMBER;
        hash = (53 * hash) + getCandidateEndorsement().hashCode();
        break;
      case 52:
        hash = (37 * hash) + CANDIDATETRANSFEROWNERSHIP_FIELD_NUMBER;
        hash = (53 * hash) + getCandidateTransferOwnership().hashCode();
        break;
      case 53:
        hash = (37 * hash) + STAKEMIGRATE_FIELD_NUMBER;
        hash = (53 * hash) + getStakeMigrate().hashCode();
        break;
      case 50:
        hash = (37 * hash) + PUTPOLLRESULT_FIELD_NUMBER;
        hash = (53 * hash) + getPutPollResult().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.github.iotexproject.grpc.types.ActionCore parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.iotexproject.grpc.types.ActionCore parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.iotexproject.grpc.types.ActionCore parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.iotexproject.grpc.types.ActionCore parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.iotexproject.grpc.types.ActionCore parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.iotexproject.grpc.types.ActionCore parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.iotexproject.grpc.types.ActionCore parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.github.iotexproject.grpc.types.ActionCore parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.github.iotexproject.grpc.types.ActionCore parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.github.iotexproject.grpc.types.ActionCore parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.github.iotexproject.grpc.types.ActionCore parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.github.iotexproject.grpc.types.ActionCore parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.github.iotexproject.grpc.types.ActionCore prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code iotextypes.ActionCore}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:iotextypes.ActionCore)
      com.github.iotexproject.grpc.types.ActionCoreOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.iotexproject.grpc.types.ActionOuterClass.internal_static_iotextypes_ActionCore_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.iotexproject.grpc.types.ActionOuterClass.internal_static_iotextypes_ActionCore_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.iotexproject.grpc.types.ActionCore.class, com.github.iotexproject.grpc.types.ActionCore.Builder.class);
    }

    // Construct using com.github.iotexproject.grpc.types.ActionCore.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage
              .alwaysUseFieldBuilders) {
        getBlobTxDataFieldBuilder();
        getAccessListFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      bitField1_ = 0;
      version_ = 0;
      nonce_ = 0L;
      gasLimit_ = 0L;
      gasPrice_ = "";
      chainID_ = 0;
      gasTipCap_ = "";
      gasFeeCap_ = "";
      blobTxData_ = null;
      if (blobTxDataBuilder_ != null) {
        blobTxDataBuilder_.dispose();
        blobTxDataBuilder_ = null;
      }
      if (accessListBuilder_ == null) {
        accessList_ = java.util.Collections.emptyList();
      } else {
        accessList_ = null;
        accessListBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000100);
      txType_ = 0;
      if (transferBuilder_ != null) {
        transferBuilder_.clear();
      }
      if (txContainerBuilder_ != null) {
        txContainerBuilder_.clear();
      }
      if (executionBuilder_ != null) {
        executionBuilder_.clear();
      }
      if (startSubChainBuilder_ != null) {
        startSubChainBuilder_.clear();
      }
      if (stopSubChainBuilder_ != null) {
        stopSubChainBuilder_.clear();
      }
      if (putBlockBuilder_ != null) {
        putBlockBuilder_.clear();
      }
      if (createDepositBuilder_ != null) {
        createDepositBuilder_.clear();
      }
      if (settleDepositBuilder_ != null) {
        settleDepositBuilder_.clear();
      }
      if (createPlumChainBuilder_ != null) {
        createPlumChainBuilder_.clear();
      }
      if (terminatePlumChainBuilder_ != null) {
        terminatePlumChainBuilder_.clear();
      }
      if (plumPutBlockBuilder_ != null) {
        plumPutBlockBuilder_.clear();
      }
      if (plumCreateDepositBuilder_ != null) {
        plumCreateDepositBuilder_.clear();
      }
      if (plumStartExitBuilder_ != null) {
        plumStartExitBuilder_.clear();
      }
      if (plumChallengeExitBuilder_ != null) {
        plumChallengeExitBuilder_.clear();
      }
      if (plumResponseChallengeExitBuilder_ != null) {
        plumResponseChallengeExitBuilder_.clear();
      }
      if (plumFinalizeExitBuilder_ != null) {
        plumFinalizeExitBuilder_.clear();
      }
      if (plumSettleDepositBuilder_ != null) {
        plumSettleDepositBuilder_.clear();
      }
      if (plumTransferBuilder_ != null) {
        plumTransferBuilder_.clear();
      }
      if (depositToRewardingFundBuilder_ != null) {
        depositToRewardingFundBuilder_.clear();
      }
      if (claimFromRewardingFundBuilder_ != null) {
        claimFromRewardingFundBuilder_.clear();
      }
      if (grantRewardBuilder_ != null) {
        grantRewardBuilder_.clear();
      }
      if (stakeCreateBuilder_ != null) {
        stakeCreateBuilder_.clear();
      }
      if (stakeUnstakeBuilder_ != null) {
        stakeUnstakeBuilder_.clear();
      }
      if (stakeWithdrawBuilder_ != null) {
        stakeWithdrawBuilder_.clear();
      }
      if (stakeAddDepositBuilder_ != null) {
        stakeAddDepositBuilder_.clear();
      }
      if (stakeRestakeBuilder_ != null) {
        stakeRestakeBuilder_.clear();
      }
      if (stakeChangeCandidateBuilder_ != null) {
        stakeChangeCandidateBuilder_.clear();
      }
      if (stakeTransferOwnershipBuilder_ != null) {
        stakeTransferOwnershipBuilder_.clear();
      }
      if (candidateRegisterBuilder_ != null) {
        candidateRegisterBuilder_.clear();
      }
      if (candidateUpdateBuilder_ != null) {
        candidateUpdateBuilder_.clear();
      }
      if (candidateActivateBuilder_ != null) {
        candidateActivateBuilder_.clear();
      }
      if (candidateEndorsementBuilder_ != null) {
        candidateEndorsementBuilder_.clear();
      }
      if (candidateTransferOwnershipBuilder_ != null) {
        candidateTransferOwnershipBuilder_.clear();
      }
      if (stakeMigrateBuilder_ != null) {
        stakeMigrateBuilder_.clear();
      }
      if (putPollResultBuilder_ != null) {
        putPollResultBuilder_.clear();
      }
      actionCase_ = 0;
      action_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.github.iotexproject.grpc.types.ActionOuterClass.internal_static_iotextypes_ActionCore_descriptor;
    }

    @java.lang.Override
    public com.github.iotexproject.grpc.types.ActionCore getDefaultInstanceForType() {
      return com.github.iotexproject.grpc.types.ActionCore.getDefaultInstance();
    }

    @java.lang.Override
    public com.github.iotexproject.grpc.types.ActionCore build() {
      com.github.iotexproject.grpc.types.ActionCore result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.github.iotexproject.grpc.types.ActionCore buildPartial() {
      com.github.iotexproject.grpc.types.ActionCore result = new com.github.iotexproject.grpc.types.ActionCore(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      if (bitField1_ != 0) { buildPartial1(result); }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.github.iotexproject.grpc.types.ActionCore result) {
      if (accessListBuilder_ == null) {
        if (((bitField0_ & 0x00000100) != 0)) {
          accessList_ = java.util.Collections.unmodifiableList(accessList_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.accessList_ = accessList_;
      } else {
        result.accessList_ = accessListBuilder_.build();
      }
    }

    private void buildPartial0(com.github.iotexproject.grpc.types.ActionCore result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.version_ = version_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.nonce_ = nonce_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.gasLimit_ = gasLimit_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.gasPrice_ = gasPrice_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.chainID_ = chainID_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.gasTipCap_ = gasTipCap_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.gasFeeCap_ = gasFeeCap_;
      }
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.blobTxData_ = blobTxDataBuilder_ == null
            ? blobTxData_
            : blobTxDataBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        result.txType_ = txType_;
      }
      result.bitField0_ |= to_bitField0_;
    }

    private void buildPartial1(com.github.iotexproject.grpc.types.ActionCore result) {
      int from_bitField1_ = bitField1_;
    }

    private void buildPartialOneofs(com.github.iotexproject.grpc.types.ActionCore result) {
      result.actionCase_ = actionCase_;
      result.action_ = this.action_;
      if (actionCase_ == 10 &&
          transferBuilder_ != null) {
        result.action_ = transferBuilder_.build();
      }
      if (actionCase_ == 11 &&
          txContainerBuilder_ != null) {
        result.action_ = txContainerBuilder_.build();
      }
      if (actionCase_ == 12 &&
          executionBuilder_ != null) {
        result.action_ = executionBuilder_.build();
      }
      if (actionCase_ == 13 &&
          startSubChainBuilder_ != null) {
        result.action_ = startSubChainBuilder_.build();
      }
      if (actionCase_ == 14 &&
          stopSubChainBuilder_ != null) {
        result.action_ = stopSubChainBuilder_.build();
      }
      if (actionCase_ == 15 &&
          putBlockBuilder_ != null) {
        result.action_ = putBlockBuilder_.build();
      }
      if (actionCase_ == 16 &&
          createDepositBuilder_ != null) {
        result.action_ = createDepositBuilder_.build();
      }
      if (actionCase_ == 17 &&
          settleDepositBuilder_ != null) {
        result.action_ = settleDepositBuilder_.build();
      }
      if (actionCase_ == 18 &&
          createPlumChainBuilder_ != null) {
        result.action_ = createPlumChainBuilder_.build();
      }
      if (actionCase_ == 19 &&
          terminatePlumChainBuilder_ != null) {
        result.action_ = terminatePlumChainBuilder_.build();
      }
      if (actionCase_ == 20 &&
          plumPutBlockBuilder_ != null) {
        result.action_ = plumPutBlockBuilder_.build();
      }
      if (actionCase_ == 21 &&
          plumCreateDepositBuilder_ != null) {
        result.action_ = plumCreateDepositBuilder_.build();
      }
      if (actionCase_ == 22 &&
          plumStartExitBuilder_ != null) {
        result.action_ = plumStartExitBuilder_.build();
      }
      if (actionCase_ == 23 &&
          plumChallengeExitBuilder_ != null) {
        result.action_ = plumChallengeExitBuilder_.build();
      }
      if (actionCase_ == 24 &&
          plumResponseChallengeExitBuilder_ != null) {
        result.action_ = plumResponseChallengeExitBuilder_.build();
      }
      if (actionCase_ == 25 &&
          plumFinalizeExitBuilder_ != null) {
        result.action_ = plumFinalizeExitBuilder_.build();
      }
      if (actionCase_ == 26 &&
          plumSettleDepositBuilder_ != null) {
        result.action_ = plumSettleDepositBuilder_.build();
      }
      if (actionCase_ == 27 &&
          plumTransferBuilder_ != null) {
        result.action_ = plumTransferBuilder_.build();
      }
      if (actionCase_ == 30 &&
          depositToRewardingFundBuilder_ != null) {
        result.action_ = depositToRewardingFundBuilder_.build();
      }
      if (actionCase_ == 31 &&
          claimFromRewardingFundBuilder_ != null) {
        result.action_ = claimFromRewardingFundBuilder_.build();
      }
      if (actionCase_ == 32 &&
          grantRewardBuilder_ != null) {
        result.action_ = grantRewardBuilder_.build();
      }
      if (actionCase_ == 40 &&
          stakeCreateBuilder_ != null) {
        result.action_ = stakeCreateBuilder_.build();
      }
      if (actionCase_ == 41 &&
          stakeUnstakeBuilder_ != null) {
        result.action_ = stakeUnstakeBuilder_.build();
      }
      if (actionCase_ == 42 &&
          stakeWithdrawBuilder_ != null) {
        result.action_ = stakeWithdrawBuilder_.build();
      }
      if (actionCase_ == 43 &&
          stakeAddDepositBuilder_ != null) {
        result.action_ = stakeAddDepositBuilder_.build();
      }
      if (actionCase_ == 44 &&
          stakeRestakeBuilder_ != null) {
        result.action_ = stakeRestakeBuilder_.build();
      }
      if (actionCase_ == 45 &&
          stakeChangeCandidateBuilder_ != null) {
        result.action_ = stakeChangeCandidateBuilder_.build();
      }
      if (actionCase_ == 46 &&
          stakeTransferOwnershipBuilder_ != null) {
        result.action_ = stakeTransferOwnershipBuilder_.build();
      }
      if (actionCase_ == 47 &&
          candidateRegisterBuilder_ != null) {
        result.action_ = candidateRegisterBuilder_.build();
      }
      if (actionCase_ == 48 &&
          candidateUpdateBuilder_ != null) {
        result.action_ = candidateUpdateBuilder_.build();
      }
      if (actionCase_ == 49 &&
          candidateActivateBuilder_ != null) {
        result.action_ = candidateActivateBuilder_.build();
      }
      if (actionCase_ == 51 &&
          candidateEndorsementBuilder_ != null) {
        result.action_ = candidateEndorsementBuilder_.build();
      }
      if (actionCase_ == 52 &&
          candidateTransferOwnershipBuilder_ != null) {
        result.action_ = candidateTransferOwnershipBuilder_.build();
      }
      if (actionCase_ == 53 &&
          stakeMigrateBuilder_ != null) {
        result.action_ = stakeMigrateBuilder_.build();
      }
      if (actionCase_ == 50 &&
          putPollResultBuilder_ != null) {
        result.action_ = putPollResultBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.github.iotexproject.grpc.types.ActionCore) {
        return mergeFrom((com.github.iotexproject.grpc.types.ActionCore)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.github.iotexproject.grpc.types.ActionCore other) {
      if (other == com.github.iotexproject.grpc.types.ActionCore.getDefaultInstance()) return this;
      if (other.getVersion() != 0) {
        setVersion(other.getVersion());
      }
      if (other.getNonce() != 0L) {
        setNonce(other.getNonce());
      }
      if (other.getGasLimit() != 0L) {
        setGasLimit(other.getGasLimit());
      }
      if (!other.getGasPrice().isEmpty()) {
        gasPrice_ = other.gasPrice_;
        bitField0_ |= 0x00000008;
        onChanged();
      }
      if (other.getChainID() != 0) {
        setChainID(other.getChainID());
      }
      if (!other.getGasTipCap().isEmpty()) {
        gasTipCap_ = other.gasTipCap_;
        bitField0_ |= 0x00000020;
        onChanged();
      }
      if (!other.getGasFeeCap().isEmpty()) {
        gasFeeCap_ = other.gasFeeCap_;
        bitField0_ |= 0x00000040;
        onChanged();
      }
      if (other.hasBlobTxData()) {
        mergeBlobTxData(other.getBlobTxData());
      }
      if (accessListBuilder_ == null) {
        if (!other.accessList_.isEmpty()) {
          if (accessList_.isEmpty()) {
            accessList_ = other.accessList_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureAccessListIsMutable();
            accessList_.addAll(other.accessList_);
          }
          onChanged();
        }
      } else {
        if (!other.accessList_.isEmpty()) {
          if (accessListBuilder_.isEmpty()) {
            accessListBuilder_.dispose();
            accessListBuilder_ = null;
            accessList_ = other.accessList_;
            bitField0_ = (bitField0_ & ~0x00000100);
            accessListBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getAccessListFieldBuilder() : null;
          } else {
            accessListBuilder_.addAllMessages(other.accessList_);
          }
        }
      }
      if (other.getTxType() != 0) {
        setTxType(other.getTxType());
      }
      switch (other.getActionCase()) {
        case TRANSFER: {
          mergeTransfer(other.getTransfer());
          break;
        }
        case TXCONTAINER: {
          mergeTxContainer(other.getTxContainer());
          break;
        }
        case EXECUTION: {
          mergeExecution(other.getExecution());
          break;
        }
        case STARTSUBCHAIN: {
          mergeStartSubChain(other.getStartSubChain());
          break;
        }
        case STOPSUBCHAIN: {
          mergeStopSubChain(other.getStopSubChain());
          break;
        }
        case PUTBLOCK: {
          mergePutBlock(other.getPutBlock());
          break;
        }
        case CREATEDEPOSIT: {
          mergeCreateDeposit(other.getCreateDeposit());
          break;
        }
        case SETTLEDEPOSIT: {
          mergeSettleDeposit(other.getSettleDeposit());
          break;
        }
        case CREATEPLUMCHAIN: {
          mergeCreatePlumChain(other.getCreatePlumChain());
          break;
        }
        case TERMINATEPLUMCHAIN: {
          mergeTerminatePlumChain(other.getTerminatePlumChain());
          break;
        }
        case PLUMPUTBLOCK: {
          mergePlumPutBlock(other.getPlumPutBlock());
          break;
        }
        case PLUMCREATEDEPOSIT: {
          mergePlumCreateDeposit(other.getPlumCreateDeposit());
          break;
        }
        case PLUMSTARTEXIT: {
          mergePlumStartExit(other.getPlumStartExit());
          break;
        }
        case PLUMCHALLENGEEXIT: {
          mergePlumChallengeExit(other.getPlumChallengeExit());
          break;
        }
        case PLUMRESPONSECHALLENGEEXIT: {
          mergePlumResponseChallengeExit(other.getPlumResponseChallengeExit());
          break;
        }
        case PLUMFINALIZEEXIT: {
          mergePlumFinalizeExit(other.getPlumFinalizeExit());
          break;
        }
        case PLUMSETTLEDEPOSIT: {
          mergePlumSettleDeposit(other.getPlumSettleDeposit());
          break;
        }
        case PLUMTRANSFER: {
          mergePlumTransfer(other.getPlumTransfer());
          break;
        }
        case DEPOSITTOREWARDINGFUND: {
          mergeDepositToRewardingFund(other.getDepositToRewardingFund());
          break;
        }
        case CLAIMFROMREWARDINGFUND: {
          mergeClaimFromRewardingFund(other.getClaimFromRewardingFund());
          break;
        }
        case GRANTREWARD: {
          mergeGrantReward(other.getGrantReward());
          break;
        }
        case STAKECREATE: {
          mergeStakeCreate(other.getStakeCreate());
          break;
        }
        case STAKEUNSTAKE: {
          mergeStakeUnstake(other.getStakeUnstake());
          break;
        }
        case STAKEWITHDRAW: {
          mergeStakeWithdraw(other.getStakeWithdraw());
          break;
        }
        case STAKEADDDEPOSIT: {
          mergeStakeAddDeposit(other.getStakeAddDeposit());
          break;
        }
        case STAKERESTAKE: {
          mergeStakeRestake(other.getStakeRestake());
          break;
        }
        case STAKECHANGECANDIDATE: {
          mergeStakeChangeCandidate(other.getStakeChangeCandidate());
          break;
        }
        case STAKETRANSFEROWNERSHIP: {
          mergeStakeTransferOwnership(other.getStakeTransferOwnership());
          break;
        }
        case CANDIDATEREGISTER: {
          mergeCandidateRegister(other.getCandidateRegister());
          break;
        }
        case CANDIDATEUPDATE: {
          mergeCandidateUpdate(other.getCandidateUpdate());
          break;
        }
        case CANDIDATEACTIVATE: {
          mergeCandidateActivate(other.getCandidateActivate());
          break;
        }
        case CANDIDATEENDORSEMENT: {
          mergeCandidateEndorsement(other.getCandidateEndorsement());
          break;
        }
        case CANDIDATETRANSFEROWNERSHIP: {
          mergeCandidateTransferOwnership(other.getCandidateTransferOwnership());
          break;
        }
        case STAKEMIGRATE: {
          mergeStakeMigrate(other.getStakeMigrate());
          break;
        }
        case PUTPOLLRESULT: {
          mergePutPollResult(other.getPutPollResult());
          break;
        }
        case ACTION_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              version_ = input.readUInt32();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 16: {
              nonce_ = input.readUInt64();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 24: {
              gasLimit_ = input.readUInt64();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 34: {
              gasPrice_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 40: {
              chainID_ = input.readUInt32();
              bitField0_ |= 0x00000010;
              break;
            } // case 40
            case 50: {
              gasTipCap_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000020;
              break;
            } // case 50
            case 58: {
              gasFeeCap_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000040;
              break;
            } // case 58
            case 66: {
              input.readMessage(
                  getBlobTxDataFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000080;
              break;
            } // case 66
            case 74: {
              com.github.iotexproject.grpc.types.AccessTuple m =
                  input.readMessage(
                      com.github.iotexproject.grpc.types.AccessTuple.parser(),
                      extensionRegistry);
              if (accessListBuilder_ == null) {
                ensureAccessListIsMutable();
                accessList_.add(m);
              } else {
                accessListBuilder_.addMessage(m);
              }
              break;
            } // case 74
            case 82: {
              input.readMessage(
                  getTransferFieldBuilder().getBuilder(),
                  extensionRegistry);
              actionCase_ = 10;
              break;
            } // case 82
            case 90: {
              input.readMessage(
                  getTxContainerFieldBuilder().getBuilder(),
                  extensionRegistry);
              actionCase_ = 11;
              break;
            } // case 90
            case 98: {
              input.readMessage(
                  getExecutionFieldBuilder().getBuilder(),
                  extensionRegistry);
              actionCase_ = 12;
              break;
            } // case 98
            case 106: {
              input.readMessage(
                  getStartSubChainFieldBuilder().getBuilder(),
                  extensionRegistry);
              actionCase_ = 13;
              break;
            } // case 106
            case 114: {
              input.readMessage(
                  getStopSubChainFieldBuilder().getBuilder(),
                  extensionRegistry);
              actionCase_ = 14;
              break;
            } // case 114
            case 122: {
              input.readMessage(
                  getPutBlockFieldBuilder().getBuilder(),
                  extensionRegistry);
              actionCase_ = 15;
              break;
            } // case 122
            case 130: {
              input.readMessage(
                  getCreateDepositFieldBuilder().getBuilder(),
                  extensionRegistry);
              actionCase_ = 16;
              break;
            } // case 130
            case 138: {
              input.readMessage(
                  getSettleDepositFieldBuilder().getBuilder(),
                  extensionRegistry);
              actionCase_ = 17;
              break;
            } // case 138
            case 146: {
              input.readMessage(
                  getCreatePlumChainFieldBuilder().getBuilder(),
                  extensionRegistry);
              actionCase_ = 18;
              break;
            } // case 146
            case 154: {
              input.readMessage(
                  getTerminatePlumChainFieldBuilder().getBuilder(),
                  extensionRegistry);
              actionCase_ = 19;
              break;
            } // case 154
            case 162: {
              input.readMessage(
                  getPlumPutBlockFieldBuilder().getBuilder(),
                  extensionRegistry);
              actionCase_ = 20;
              break;
            } // case 162
            case 170: {
              input.readMessage(
                  getPlumCreateDepositFieldBuilder().getBuilder(),
                  extensionRegistry);
              actionCase_ = 21;
              break;
            } // case 170
            case 178: {
              input.readMessage(
                  getPlumStartExitFieldBuilder().getBuilder(),
                  extensionRegistry);
              actionCase_ = 22;
              break;
            } // case 178
            case 186: {
              input.readMessage(
                  getPlumChallengeExitFieldBuilder().getBuilder(),
                  extensionRegistry);
              actionCase_ = 23;
              break;
            } // case 186
            case 194: {
              input.readMessage(
                  getPlumResponseChallengeExitFieldBuilder().getBuilder(),
                  extensionRegistry);
              actionCase_ = 24;
              break;
            } // case 194
            case 202: {
              input.readMessage(
                  getPlumFinalizeExitFieldBuilder().getBuilder(),
                  extensionRegistry);
              actionCase_ = 25;
              break;
            } // case 202
            case 210: {
              input.readMessage(
                  getPlumSettleDepositFieldBuilder().getBuilder(),
                  extensionRegistry);
              actionCase_ = 26;
              break;
            } // case 210
            case 218: {
              input.readMessage(
                  getPlumTransferFieldBuilder().getBuilder(),
                  extensionRegistry);
              actionCase_ = 27;
              break;
            } // case 218
            case 224: {
              txType_ = input.readUInt32();
              bitField0_ |= 0x00000200;
              break;
            } // case 224
            case 242: {
              input.readMessage(
                  getDepositToRewardingFundFieldBuilder().getBuilder(),
                  extensionRegistry);
              actionCase_ = 30;
              break;
            } // case 242
            case 250: {
              input.readMessage(
                  getClaimFromRewardingFundFieldBuilder().getBuilder(),
                  extensionRegistry);
              actionCase_ = 31;
              break;
            } // case 250
            case 258: {
              input.readMessage(
                  getGrantRewardFieldBuilder().getBuilder(),
                  extensionRegistry);
              actionCase_ = 32;
              break;
            } // case 258
            case 322: {
              input.readMessage(
                  getStakeCreateFieldBuilder().getBuilder(),
                  extensionRegistry);
              actionCase_ = 40;
              break;
            } // case 322
            case 330: {
              input.readMessage(
                  getStakeUnstakeFieldBuilder().getBuilder(),
                  extensionRegistry);
              actionCase_ = 41;
              break;
            } // case 330
            case 338: {
              input.readMessage(
                  getStakeWithdrawFieldBuilder().getBuilder(),
                  extensionRegistry);
              actionCase_ = 42;
              break;
            } // case 338
            case 346: {
              input.readMessage(
                  getStakeAddDepositFieldBuilder().getBuilder(),
                  extensionRegistry);
              actionCase_ = 43;
              break;
            } // case 346
            case 354: {
              input.readMessage(
                  getStakeRestakeFieldBuilder().getBuilder(),
                  extensionRegistry);
              actionCase_ = 44;
              break;
            } // case 354
            case 362: {
              input.readMessage(
                  getStakeChangeCandidateFieldBuilder().getBuilder(),
                  extensionRegistry);
              actionCase_ = 45;
              break;
            } // case 362
            case 370: {
              input.readMessage(
                  getStakeTransferOwnershipFieldBuilder().getBuilder(),
                  extensionRegistry);
              actionCase_ = 46;
              break;
            } // case 370
            case 378: {
              input.readMessage(
                  getCandidateRegisterFieldBuilder().getBuilder(),
                  extensionRegistry);
              actionCase_ = 47;
              break;
            } // case 378
            case 386: {
              input.readMessage(
                  getCandidateUpdateFieldBuilder().getBuilder(),
                  extensionRegistry);
              actionCase_ = 48;
              break;
            } // case 386
            case 394: {
              input.readMessage(
                  getCandidateActivateFieldBuilder().getBuilder(),
                  extensionRegistry);
              actionCase_ = 49;
              break;
            } // case 394
            case 402: {
              input.readMessage(
                  getPutPollResultFieldBuilder().getBuilder(),
                  extensionRegistry);
              actionCase_ = 50;
              break;
            } // case 402
            case 410: {
              input.readMessage(
                  getCandidateEndorsementFieldBuilder().getBuilder(),
                  extensionRegistry);
              actionCase_ = 51;
              break;
            } // case 410
            case 418: {
              input.readMessage(
                  getCandidateTransferOwnershipFieldBuilder().getBuilder(),
                  extensionRegistry);
              actionCase_ = 52;
              break;
            } // case 418
            case 426: {
              input.readMessage(
                  getStakeMigrateFieldBuilder().getBuilder(),
                  extensionRegistry);
              actionCase_ = 53;
              break;
            } // case 426
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int actionCase_ = 0;
    private java.lang.Object action_;
    public ActionCase
        getActionCase() {
      return ActionCase.forNumber(
          actionCase_);
    }

    public Builder clearAction() {
      actionCase_ = 0;
      action_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;
    private int bitField1_;

    private int version_ ;
    /**
     * <code>uint32 version = 1;</code>
     * @return The version.
     */
    @java.lang.Override
    public int getVersion() {
      return version_;
    }
    /**
     * <code>uint32 version = 1;</code>
     * @param value The version to set.
     * @return This builder for chaining.
     */
    public Builder setVersion(int value) {

      version_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>uint32 version = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearVersion() {
      bitField0_ = (bitField0_ & ~0x00000001);
      version_ = 0;
      onChanged();
      return this;
    }

    private long nonce_ ;
    /**
     * <code>uint64 nonce = 2;</code>
     * @return The nonce.
     */
    @java.lang.Override
    public long getNonce() {
      return nonce_;
    }
    /**
     * <code>uint64 nonce = 2;</code>
     * @param value The nonce to set.
     * @return This builder for chaining.
     */
    public Builder setNonce(long value) {

      nonce_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>uint64 nonce = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearNonce() {
      bitField0_ = (bitField0_ & ~0x00000002);
      nonce_ = 0L;
      onChanged();
      return this;
    }

    private long gasLimit_ ;
    /**
     * <code>uint64 gasLimit = 3;</code>
     * @return The gasLimit.
     */
    @java.lang.Override
    public long getGasLimit() {
      return gasLimit_;
    }
    /**
     * <code>uint64 gasLimit = 3;</code>
     * @param value The gasLimit to set.
     * @return This builder for chaining.
     */
    public Builder setGasLimit(long value) {

      gasLimit_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>uint64 gasLimit = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearGasLimit() {
      bitField0_ = (bitField0_ & ~0x00000004);
      gasLimit_ = 0L;
      onChanged();
      return this;
    }

    private java.lang.Object gasPrice_ = "";
    /**
     * <code>string gasPrice = 4;</code>
     * @return The gasPrice.
     */
    public java.lang.String getGasPrice() {
      java.lang.Object ref = gasPrice_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        gasPrice_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string gasPrice = 4;</code>
     * @return The bytes for gasPrice.
     */
    public com.google.protobuf.ByteString
        getGasPriceBytes() {
      java.lang.Object ref = gasPrice_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        gasPrice_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string gasPrice = 4;</code>
     * @param value The gasPrice to set.
     * @return This builder for chaining.
     */
    public Builder setGasPrice(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      gasPrice_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>string gasPrice = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearGasPrice() {
      gasPrice_ = getDefaultInstance().getGasPrice();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     * <code>string gasPrice = 4;</code>
     * @param value The bytes for gasPrice to set.
     * @return This builder for chaining.
     */
    public Builder setGasPriceBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      gasPrice_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    private int chainID_ ;
    /**
     * <code>uint32 chainID = 5;</code>
     * @return The chainID.
     */
    @java.lang.Override
    public int getChainID() {
      return chainID_;
    }
    /**
     * <code>uint32 chainID = 5;</code>
     * @param value The chainID to set.
     * @return This builder for chaining.
     */
    public Builder setChainID(int value) {

      chainID_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <code>uint32 chainID = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearChainID() {
      bitField0_ = (bitField0_ & ~0x00000010);
      chainID_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object gasTipCap_ = "";
    /**
     * <code>string gasTipCap = 6;</code>
     * @return The gasTipCap.
     */
    public java.lang.String getGasTipCap() {
      java.lang.Object ref = gasTipCap_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        gasTipCap_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string gasTipCap = 6;</code>
     * @return The bytes for gasTipCap.
     */
    public com.google.protobuf.ByteString
        getGasTipCapBytes() {
      java.lang.Object ref = gasTipCap_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        gasTipCap_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string gasTipCap = 6;</code>
     * @param value The gasTipCap to set.
     * @return This builder for chaining.
     */
    public Builder setGasTipCap(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      gasTipCap_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <code>string gasTipCap = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearGasTipCap() {
      gasTipCap_ = getDefaultInstance().getGasTipCap();
      bitField0_ = (bitField0_ & ~0x00000020);
      onChanged();
      return this;
    }
    /**
     * <code>string gasTipCap = 6;</code>
     * @param value The bytes for gasTipCap to set.
     * @return This builder for chaining.
     */
    public Builder setGasTipCapBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      gasTipCap_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }

    private java.lang.Object gasFeeCap_ = "";
    /**
     * <code>string gasFeeCap = 7;</code>
     * @return The gasFeeCap.
     */
    public java.lang.String getGasFeeCap() {
      java.lang.Object ref = gasFeeCap_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        gasFeeCap_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string gasFeeCap = 7;</code>
     * @return The bytes for gasFeeCap.
     */
    public com.google.protobuf.ByteString
        getGasFeeCapBytes() {
      java.lang.Object ref = gasFeeCap_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        gasFeeCap_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string gasFeeCap = 7;</code>
     * @param value The gasFeeCap to set.
     * @return This builder for chaining.
     */
    public Builder setGasFeeCap(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      gasFeeCap_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <code>string gasFeeCap = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearGasFeeCap() {
      gasFeeCap_ = getDefaultInstance().getGasFeeCap();
      bitField0_ = (bitField0_ & ~0x00000040);
      onChanged();
      return this;
    }
    /**
     * <code>string gasFeeCap = 7;</code>
     * @param value The bytes for gasFeeCap to set.
     * @return This builder for chaining.
     */
    public Builder setGasFeeCapBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      gasFeeCap_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }

    private com.github.iotexproject.grpc.types.BlobTxData blobTxData_;
    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.BlobTxData, com.github.iotexproject.grpc.types.BlobTxData.Builder, com.github.iotexproject.grpc.types.BlobTxDataOrBuilder> blobTxDataBuilder_;
    /**
     * <code>.iotextypes.BlobTxData blobTxData = 8;</code>
     * @return Whether the blobTxData field is set.
     */
    public boolean hasBlobTxData() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <code>.iotextypes.BlobTxData blobTxData = 8;</code>
     * @return The blobTxData.
     */
    public com.github.iotexproject.grpc.types.BlobTxData getBlobTxData() {
      if (blobTxDataBuilder_ == null) {
        return blobTxData_ == null ? com.github.iotexproject.grpc.types.BlobTxData.getDefaultInstance() : blobTxData_;
      } else {
        return blobTxDataBuilder_.getMessage();
      }
    }
    /**
     * <code>.iotextypes.BlobTxData blobTxData = 8;</code>
     */
    public Builder setBlobTxData(com.github.iotexproject.grpc.types.BlobTxData value) {
      if (blobTxDataBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        blobTxData_ = value;
      } else {
        blobTxDataBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <code>.iotextypes.BlobTxData blobTxData = 8;</code>
     */
    public Builder setBlobTxData(
        com.github.iotexproject.grpc.types.BlobTxData.Builder builderForValue) {
      if (blobTxDataBuilder_ == null) {
        blobTxData_ = builderForValue.build();
      } else {
        blobTxDataBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <code>.iotextypes.BlobTxData blobTxData = 8;</code>
     */
    public Builder mergeBlobTxData(com.github.iotexproject.grpc.types.BlobTxData value) {
      if (blobTxDataBuilder_ == null) {
        if (((bitField0_ & 0x00000080) != 0) &&
          blobTxData_ != null &&
          blobTxData_ != com.github.iotexproject.grpc.types.BlobTxData.getDefaultInstance()) {
          getBlobTxDataBuilder().mergeFrom(value);
        } else {
          blobTxData_ = value;
        }
      } else {
        blobTxDataBuilder_.mergeFrom(value);
      }
      if (blobTxData_ != null) {
        bitField0_ |= 0x00000080;
        onChanged();
      }
      return this;
    }
    /**
     * <code>.iotextypes.BlobTxData blobTxData = 8;</code>
     */
    public Builder clearBlobTxData() {
      bitField0_ = (bitField0_ & ~0x00000080);
      blobTxData_ = null;
      if (blobTxDataBuilder_ != null) {
        blobTxDataBuilder_.dispose();
        blobTxDataBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.iotextypes.BlobTxData blobTxData = 8;</code>
     */
    public com.github.iotexproject.grpc.types.BlobTxData.Builder getBlobTxDataBuilder() {
      bitField0_ |= 0x00000080;
      onChanged();
      return getBlobTxDataFieldBuilder().getBuilder();
    }
    /**
     * <code>.iotextypes.BlobTxData blobTxData = 8;</code>
     */
    public com.github.iotexproject.grpc.types.BlobTxDataOrBuilder getBlobTxDataOrBuilder() {
      if (blobTxDataBuilder_ != null) {
        return blobTxDataBuilder_.getMessageOrBuilder();
      } else {
        return blobTxData_ == null ?
            com.github.iotexproject.grpc.types.BlobTxData.getDefaultInstance() : blobTxData_;
      }
    }
    /**
     * <code>.iotextypes.BlobTxData blobTxData = 8;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.BlobTxData, com.github.iotexproject.grpc.types.BlobTxData.Builder, com.github.iotexproject.grpc.types.BlobTxDataOrBuilder> 
        getBlobTxDataFieldBuilder() {
      if (blobTxDataBuilder_ == null) {
        blobTxDataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.iotexproject.grpc.types.BlobTxData, com.github.iotexproject.grpc.types.BlobTxData.Builder, com.github.iotexproject.grpc.types.BlobTxDataOrBuilder>(
                getBlobTxData(),
                getParentForChildren(),
                isClean());
        blobTxData_ = null;
      }
      return blobTxDataBuilder_;
    }

    private java.util.List<com.github.iotexproject.grpc.types.AccessTuple> accessList_ =
      java.util.Collections.emptyList();
    private void ensureAccessListIsMutable() {
      if (!((bitField0_ & 0x00000100) != 0)) {
        accessList_ = new java.util.ArrayList<com.github.iotexproject.grpc.types.AccessTuple>(accessList_);
        bitField0_ |= 0x00000100;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        com.github.iotexproject.grpc.types.AccessTuple, com.github.iotexproject.grpc.types.AccessTuple.Builder, com.github.iotexproject.grpc.types.AccessTupleOrBuilder> accessListBuilder_;

    /**
     * <code>repeated .iotextypes.AccessTuple accessList = 9;</code>
     */
    public java.util.List<com.github.iotexproject.grpc.types.AccessTuple> getAccessListList() {
      if (accessListBuilder_ == null) {
        return java.util.Collections.unmodifiableList(accessList_);
      } else {
        return accessListBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .iotextypes.AccessTuple accessList = 9;</code>
     */
    public int getAccessListCount() {
      if (accessListBuilder_ == null) {
        return accessList_.size();
      } else {
        return accessListBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .iotextypes.AccessTuple accessList = 9;</code>
     */
    public com.github.iotexproject.grpc.types.AccessTuple getAccessList(int index) {
      if (accessListBuilder_ == null) {
        return accessList_.get(index);
      } else {
        return accessListBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .iotextypes.AccessTuple accessList = 9;</code>
     */
    public Builder setAccessList(
        int index, com.github.iotexproject.grpc.types.AccessTuple value) {
      if (accessListBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAccessListIsMutable();
        accessList_.set(index, value);
        onChanged();
      } else {
        accessListBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .iotextypes.AccessTuple accessList = 9;</code>
     */
    public Builder setAccessList(
        int index, com.github.iotexproject.grpc.types.AccessTuple.Builder builderForValue) {
      if (accessListBuilder_ == null) {
        ensureAccessListIsMutable();
        accessList_.set(index, builderForValue.build());
        onChanged();
      } else {
        accessListBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .iotextypes.AccessTuple accessList = 9;</code>
     */
    public Builder addAccessList(com.github.iotexproject.grpc.types.AccessTuple value) {
      if (accessListBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAccessListIsMutable();
        accessList_.add(value);
        onChanged();
      } else {
        accessListBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .iotextypes.AccessTuple accessList = 9;</code>
     */
    public Builder addAccessList(
        int index, com.github.iotexproject.grpc.types.AccessTuple value) {
      if (accessListBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAccessListIsMutable();
        accessList_.add(index, value);
        onChanged();
      } else {
        accessListBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .iotextypes.AccessTuple accessList = 9;</code>
     */
    public Builder addAccessList(
        com.github.iotexproject.grpc.types.AccessTuple.Builder builderForValue) {
      if (accessListBuilder_ == null) {
        ensureAccessListIsMutable();
        accessList_.add(builderForValue.build());
        onChanged();
      } else {
        accessListBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .iotextypes.AccessTuple accessList = 9;</code>
     */
    public Builder addAccessList(
        int index, com.github.iotexproject.grpc.types.AccessTuple.Builder builderForValue) {
      if (accessListBuilder_ == null) {
        ensureAccessListIsMutable();
        accessList_.add(index, builderForValue.build());
        onChanged();
      } else {
        accessListBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .iotextypes.AccessTuple accessList = 9;</code>
     */
    public Builder addAllAccessList(
        java.lang.Iterable<? extends com.github.iotexproject.grpc.types.AccessTuple> values) {
      if (accessListBuilder_ == null) {
        ensureAccessListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, accessList_);
        onChanged();
      } else {
        accessListBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .iotextypes.AccessTuple accessList = 9;</code>
     */
    public Builder clearAccessList() {
      if (accessListBuilder_ == null) {
        accessList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
      } else {
        accessListBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .iotextypes.AccessTuple accessList = 9;</code>
     */
    public Builder removeAccessList(int index) {
      if (accessListBuilder_ == null) {
        ensureAccessListIsMutable();
        accessList_.remove(index);
        onChanged();
      } else {
        accessListBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .iotextypes.AccessTuple accessList = 9;</code>
     */
    public com.github.iotexproject.grpc.types.AccessTuple.Builder getAccessListBuilder(
        int index) {
      return getAccessListFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .iotextypes.AccessTuple accessList = 9;</code>
     */
    public com.github.iotexproject.grpc.types.AccessTupleOrBuilder getAccessListOrBuilder(
        int index) {
      if (accessListBuilder_ == null) {
        return accessList_.get(index);  } else {
        return accessListBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .iotextypes.AccessTuple accessList = 9;</code>
     */
    public java.util.List<? extends com.github.iotexproject.grpc.types.AccessTupleOrBuilder> 
         getAccessListOrBuilderList() {
      if (accessListBuilder_ != null) {
        return accessListBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(accessList_);
      }
    }
    /**
     * <code>repeated .iotextypes.AccessTuple accessList = 9;</code>
     */
    public com.github.iotexproject.grpc.types.AccessTuple.Builder addAccessListBuilder() {
      return getAccessListFieldBuilder().addBuilder(
          com.github.iotexproject.grpc.types.AccessTuple.getDefaultInstance());
    }
    /**
     * <code>repeated .iotextypes.AccessTuple accessList = 9;</code>
     */
    public com.github.iotexproject.grpc.types.AccessTuple.Builder addAccessListBuilder(
        int index) {
      return getAccessListFieldBuilder().addBuilder(
          index, com.github.iotexproject.grpc.types.AccessTuple.getDefaultInstance());
    }
    /**
     * <code>repeated .iotextypes.AccessTuple accessList = 9;</code>
     */
    public java.util.List<com.github.iotexproject.grpc.types.AccessTuple.Builder> 
         getAccessListBuilderList() {
      return getAccessListFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        com.github.iotexproject.grpc.types.AccessTuple, com.github.iotexproject.grpc.types.AccessTuple.Builder, com.github.iotexproject.grpc.types.AccessTupleOrBuilder> 
        getAccessListFieldBuilder() {
      if (accessListBuilder_ == null) {
        accessListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            com.github.iotexproject.grpc.types.AccessTuple, com.github.iotexproject.grpc.types.AccessTuple.Builder, com.github.iotexproject.grpc.types.AccessTupleOrBuilder>(
                accessList_,
                ((bitField0_ & 0x00000100) != 0),
                getParentForChildren(),
                isClean());
        accessList_ = null;
      }
      return accessListBuilder_;
    }

    private int txType_ ;
    /**
     * <code>uint32 txType = 28;</code>
     * @return The txType.
     */
    @java.lang.Override
    public int getTxType() {
      return txType_;
    }
    /**
     * <code>uint32 txType = 28;</code>
     * @param value The txType to set.
     * @return This builder for chaining.
     */
    public Builder setTxType(int value) {

      txType_ = value;
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     * <code>uint32 txType = 28;</code>
     * @return This builder for chaining.
     */
    public Builder clearTxType() {
      bitField0_ = (bitField0_ & ~0x00000200);
      txType_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.Transfer, com.github.iotexproject.grpc.types.Transfer.Builder, com.github.iotexproject.grpc.types.TransferOrBuilder> transferBuilder_;
    /**
     * <code>.iotextypes.Transfer transfer = 10;</code>
     * @return Whether the transfer field is set.
     */
    @java.lang.Override
    public boolean hasTransfer() {
      return actionCase_ == 10;
    }
    /**
     * <code>.iotextypes.Transfer transfer = 10;</code>
     * @return The transfer.
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.Transfer getTransfer() {
      if (transferBuilder_ == null) {
        if (actionCase_ == 10) {
          return (com.github.iotexproject.grpc.types.Transfer) action_;
        }
        return com.github.iotexproject.grpc.types.Transfer.getDefaultInstance();
      } else {
        if (actionCase_ == 10) {
          return transferBuilder_.getMessage();
        }
        return com.github.iotexproject.grpc.types.Transfer.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.Transfer transfer = 10;</code>
     */
    public Builder setTransfer(com.github.iotexproject.grpc.types.Transfer value) {
      if (transferBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        action_ = value;
        onChanged();
      } else {
        transferBuilder_.setMessage(value);
      }
      actionCase_ = 10;
      return this;
    }
    /**
     * <code>.iotextypes.Transfer transfer = 10;</code>
     */
    public Builder setTransfer(
        com.github.iotexproject.grpc.types.Transfer.Builder builderForValue) {
      if (transferBuilder_ == null) {
        action_ = builderForValue.build();
        onChanged();
      } else {
        transferBuilder_.setMessage(builderForValue.build());
      }
      actionCase_ = 10;
      return this;
    }
    /**
     * <code>.iotextypes.Transfer transfer = 10;</code>
     */
    public Builder mergeTransfer(com.github.iotexproject.grpc.types.Transfer value) {
      if (transferBuilder_ == null) {
        if (actionCase_ == 10 &&
            action_ != com.github.iotexproject.grpc.types.Transfer.getDefaultInstance()) {
          action_ = com.github.iotexproject.grpc.types.Transfer.newBuilder((com.github.iotexproject.grpc.types.Transfer) action_)
              .mergeFrom(value).buildPartial();
        } else {
          action_ = value;
        }
        onChanged();
      } else {
        if (actionCase_ == 10) {
          transferBuilder_.mergeFrom(value);
        } else {
          transferBuilder_.setMessage(value);
        }
      }
      actionCase_ = 10;
      return this;
    }
    /**
     * <code>.iotextypes.Transfer transfer = 10;</code>
     */
    public Builder clearTransfer() {
      if (transferBuilder_ == null) {
        if (actionCase_ == 10) {
          actionCase_ = 0;
          action_ = null;
          onChanged();
        }
      } else {
        if (actionCase_ == 10) {
          actionCase_ = 0;
          action_ = null;
        }
        transferBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iotextypes.Transfer transfer = 10;</code>
     */
    public com.github.iotexproject.grpc.types.Transfer.Builder getTransferBuilder() {
      return getTransferFieldBuilder().getBuilder();
    }
    /**
     * <code>.iotextypes.Transfer transfer = 10;</code>
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.TransferOrBuilder getTransferOrBuilder() {
      if ((actionCase_ == 10) && (transferBuilder_ != null)) {
        return transferBuilder_.getMessageOrBuilder();
      } else {
        if (actionCase_ == 10) {
          return (com.github.iotexproject.grpc.types.Transfer) action_;
        }
        return com.github.iotexproject.grpc.types.Transfer.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.Transfer transfer = 10;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.Transfer, com.github.iotexproject.grpc.types.Transfer.Builder, com.github.iotexproject.grpc.types.TransferOrBuilder> 
        getTransferFieldBuilder() {
      if (transferBuilder_ == null) {
        if (!(actionCase_ == 10)) {
          action_ = com.github.iotexproject.grpc.types.Transfer.getDefaultInstance();
        }
        transferBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.iotexproject.grpc.types.Transfer, com.github.iotexproject.grpc.types.Transfer.Builder, com.github.iotexproject.grpc.types.TransferOrBuilder>(
                (com.github.iotexproject.grpc.types.Transfer) action_,
                getParentForChildren(),
                isClean());
        action_ = null;
      }
      actionCase_ = 10;
      onChanged();
      return transferBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.TxContainer, com.github.iotexproject.grpc.types.TxContainer.Builder, com.github.iotexproject.grpc.types.TxContainerOrBuilder> txContainerBuilder_;
    /**
     * <code>.iotextypes.TxContainer txContainer = 11;</code>
     * @return Whether the txContainer field is set.
     */
    @java.lang.Override
    public boolean hasTxContainer() {
      return actionCase_ == 11;
    }
    /**
     * <code>.iotextypes.TxContainer txContainer = 11;</code>
     * @return The txContainer.
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.TxContainer getTxContainer() {
      if (txContainerBuilder_ == null) {
        if (actionCase_ == 11) {
          return (com.github.iotexproject.grpc.types.TxContainer) action_;
        }
        return com.github.iotexproject.grpc.types.TxContainer.getDefaultInstance();
      } else {
        if (actionCase_ == 11) {
          return txContainerBuilder_.getMessage();
        }
        return com.github.iotexproject.grpc.types.TxContainer.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.TxContainer txContainer = 11;</code>
     */
    public Builder setTxContainer(com.github.iotexproject.grpc.types.TxContainer value) {
      if (txContainerBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        action_ = value;
        onChanged();
      } else {
        txContainerBuilder_.setMessage(value);
      }
      actionCase_ = 11;
      return this;
    }
    /**
     * <code>.iotextypes.TxContainer txContainer = 11;</code>
     */
    public Builder setTxContainer(
        com.github.iotexproject.grpc.types.TxContainer.Builder builderForValue) {
      if (txContainerBuilder_ == null) {
        action_ = builderForValue.build();
        onChanged();
      } else {
        txContainerBuilder_.setMessage(builderForValue.build());
      }
      actionCase_ = 11;
      return this;
    }
    /**
     * <code>.iotextypes.TxContainer txContainer = 11;</code>
     */
    public Builder mergeTxContainer(com.github.iotexproject.grpc.types.TxContainer value) {
      if (txContainerBuilder_ == null) {
        if (actionCase_ == 11 &&
            action_ != com.github.iotexproject.grpc.types.TxContainer.getDefaultInstance()) {
          action_ = com.github.iotexproject.grpc.types.TxContainer.newBuilder((com.github.iotexproject.grpc.types.TxContainer) action_)
              .mergeFrom(value).buildPartial();
        } else {
          action_ = value;
        }
        onChanged();
      } else {
        if (actionCase_ == 11) {
          txContainerBuilder_.mergeFrom(value);
        } else {
          txContainerBuilder_.setMessage(value);
        }
      }
      actionCase_ = 11;
      return this;
    }
    /**
     * <code>.iotextypes.TxContainer txContainer = 11;</code>
     */
    public Builder clearTxContainer() {
      if (txContainerBuilder_ == null) {
        if (actionCase_ == 11) {
          actionCase_ = 0;
          action_ = null;
          onChanged();
        }
      } else {
        if (actionCase_ == 11) {
          actionCase_ = 0;
          action_ = null;
        }
        txContainerBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iotextypes.TxContainer txContainer = 11;</code>
     */
    public com.github.iotexproject.grpc.types.TxContainer.Builder getTxContainerBuilder() {
      return getTxContainerFieldBuilder().getBuilder();
    }
    /**
     * <code>.iotextypes.TxContainer txContainer = 11;</code>
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.TxContainerOrBuilder getTxContainerOrBuilder() {
      if ((actionCase_ == 11) && (txContainerBuilder_ != null)) {
        return txContainerBuilder_.getMessageOrBuilder();
      } else {
        if (actionCase_ == 11) {
          return (com.github.iotexproject.grpc.types.TxContainer) action_;
        }
        return com.github.iotexproject.grpc.types.TxContainer.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.TxContainer txContainer = 11;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.TxContainer, com.github.iotexproject.grpc.types.TxContainer.Builder, com.github.iotexproject.grpc.types.TxContainerOrBuilder> 
        getTxContainerFieldBuilder() {
      if (txContainerBuilder_ == null) {
        if (!(actionCase_ == 11)) {
          action_ = com.github.iotexproject.grpc.types.TxContainer.getDefaultInstance();
        }
        txContainerBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.iotexproject.grpc.types.TxContainer, com.github.iotexproject.grpc.types.TxContainer.Builder, com.github.iotexproject.grpc.types.TxContainerOrBuilder>(
                (com.github.iotexproject.grpc.types.TxContainer) action_,
                getParentForChildren(),
                isClean());
        action_ = null;
      }
      actionCase_ = 11;
      onChanged();
      return txContainerBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.Execution, com.github.iotexproject.grpc.types.Execution.Builder, com.github.iotexproject.grpc.types.ExecutionOrBuilder> executionBuilder_;
    /**
     * <code>.iotextypes.Execution execution = 12;</code>
     * @return Whether the execution field is set.
     */
    @java.lang.Override
    public boolean hasExecution() {
      return actionCase_ == 12;
    }
    /**
     * <code>.iotextypes.Execution execution = 12;</code>
     * @return The execution.
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.Execution getExecution() {
      if (executionBuilder_ == null) {
        if (actionCase_ == 12) {
          return (com.github.iotexproject.grpc.types.Execution) action_;
        }
        return com.github.iotexproject.grpc.types.Execution.getDefaultInstance();
      } else {
        if (actionCase_ == 12) {
          return executionBuilder_.getMessage();
        }
        return com.github.iotexproject.grpc.types.Execution.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.Execution execution = 12;</code>
     */
    public Builder setExecution(com.github.iotexproject.grpc.types.Execution value) {
      if (executionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        action_ = value;
        onChanged();
      } else {
        executionBuilder_.setMessage(value);
      }
      actionCase_ = 12;
      return this;
    }
    /**
     * <code>.iotextypes.Execution execution = 12;</code>
     */
    public Builder setExecution(
        com.github.iotexproject.grpc.types.Execution.Builder builderForValue) {
      if (executionBuilder_ == null) {
        action_ = builderForValue.build();
        onChanged();
      } else {
        executionBuilder_.setMessage(builderForValue.build());
      }
      actionCase_ = 12;
      return this;
    }
    /**
     * <code>.iotextypes.Execution execution = 12;</code>
     */
    public Builder mergeExecution(com.github.iotexproject.grpc.types.Execution value) {
      if (executionBuilder_ == null) {
        if (actionCase_ == 12 &&
            action_ != com.github.iotexproject.grpc.types.Execution.getDefaultInstance()) {
          action_ = com.github.iotexproject.grpc.types.Execution.newBuilder((com.github.iotexproject.grpc.types.Execution) action_)
              .mergeFrom(value).buildPartial();
        } else {
          action_ = value;
        }
        onChanged();
      } else {
        if (actionCase_ == 12) {
          executionBuilder_.mergeFrom(value);
        } else {
          executionBuilder_.setMessage(value);
        }
      }
      actionCase_ = 12;
      return this;
    }
    /**
     * <code>.iotextypes.Execution execution = 12;</code>
     */
    public Builder clearExecution() {
      if (executionBuilder_ == null) {
        if (actionCase_ == 12) {
          actionCase_ = 0;
          action_ = null;
          onChanged();
        }
      } else {
        if (actionCase_ == 12) {
          actionCase_ = 0;
          action_ = null;
        }
        executionBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iotextypes.Execution execution = 12;</code>
     */
    public com.github.iotexproject.grpc.types.Execution.Builder getExecutionBuilder() {
      return getExecutionFieldBuilder().getBuilder();
    }
    /**
     * <code>.iotextypes.Execution execution = 12;</code>
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.ExecutionOrBuilder getExecutionOrBuilder() {
      if ((actionCase_ == 12) && (executionBuilder_ != null)) {
        return executionBuilder_.getMessageOrBuilder();
      } else {
        if (actionCase_ == 12) {
          return (com.github.iotexproject.grpc.types.Execution) action_;
        }
        return com.github.iotexproject.grpc.types.Execution.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.Execution execution = 12;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.Execution, com.github.iotexproject.grpc.types.Execution.Builder, com.github.iotexproject.grpc.types.ExecutionOrBuilder> 
        getExecutionFieldBuilder() {
      if (executionBuilder_ == null) {
        if (!(actionCase_ == 12)) {
          action_ = com.github.iotexproject.grpc.types.Execution.getDefaultInstance();
        }
        executionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.iotexproject.grpc.types.Execution, com.github.iotexproject.grpc.types.Execution.Builder, com.github.iotexproject.grpc.types.ExecutionOrBuilder>(
                (com.github.iotexproject.grpc.types.Execution) action_,
                getParentForChildren(),
                isClean());
        action_ = null;
      }
      actionCase_ = 12;
      onChanged();
      return executionBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.StartSubChain, com.github.iotexproject.grpc.types.StartSubChain.Builder, com.github.iotexproject.grpc.types.StartSubChainOrBuilder> startSubChainBuilder_;
    /**
     * <pre>
     * FedChain
     * </pre>
     *
     * <code>.iotextypes.StartSubChain startSubChain = 13;</code>
     * @return Whether the startSubChain field is set.
     */
    @java.lang.Override
    public boolean hasStartSubChain() {
      return actionCase_ == 13;
    }
    /**
     * <pre>
     * FedChain
     * </pre>
     *
     * <code>.iotextypes.StartSubChain startSubChain = 13;</code>
     * @return The startSubChain.
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.StartSubChain getStartSubChain() {
      if (startSubChainBuilder_ == null) {
        if (actionCase_ == 13) {
          return (com.github.iotexproject.grpc.types.StartSubChain) action_;
        }
        return com.github.iotexproject.grpc.types.StartSubChain.getDefaultInstance();
      } else {
        if (actionCase_ == 13) {
          return startSubChainBuilder_.getMessage();
        }
        return com.github.iotexproject.grpc.types.StartSubChain.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * FedChain
     * </pre>
     *
     * <code>.iotextypes.StartSubChain startSubChain = 13;</code>
     */
    public Builder setStartSubChain(com.github.iotexproject.grpc.types.StartSubChain value) {
      if (startSubChainBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        action_ = value;
        onChanged();
      } else {
        startSubChainBuilder_.setMessage(value);
      }
      actionCase_ = 13;
      return this;
    }
    /**
     * <pre>
     * FedChain
     * </pre>
     *
     * <code>.iotextypes.StartSubChain startSubChain = 13;</code>
     */
    public Builder setStartSubChain(
        com.github.iotexproject.grpc.types.StartSubChain.Builder builderForValue) {
      if (startSubChainBuilder_ == null) {
        action_ = builderForValue.build();
        onChanged();
      } else {
        startSubChainBuilder_.setMessage(builderForValue.build());
      }
      actionCase_ = 13;
      return this;
    }
    /**
     * <pre>
     * FedChain
     * </pre>
     *
     * <code>.iotextypes.StartSubChain startSubChain = 13;</code>
     */
    public Builder mergeStartSubChain(com.github.iotexproject.grpc.types.StartSubChain value) {
      if (startSubChainBuilder_ == null) {
        if (actionCase_ == 13 &&
            action_ != com.github.iotexproject.grpc.types.StartSubChain.getDefaultInstance()) {
          action_ = com.github.iotexproject.grpc.types.StartSubChain.newBuilder((com.github.iotexproject.grpc.types.StartSubChain) action_)
              .mergeFrom(value).buildPartial();
        } else {
          action_ = value;
        }
        onChanged();
      } else {
        if (actionCase_ == 13) {
          startSubChainBuilder_.mergeFrom(value);
        } else {
          startSubChainBuilder_.setMessage(value);
        }
      }
      actionCase_ = 13;
      return this;
    }
    /**
     * <pre>
     * FedChain
     * </pre>
     *
     * <code>.iotextypes.StartSubChain startSubChain = 13;</code>
     */
    public Builder clearStartSubChain() {
      if (startSubChainBuilder_ == null) {
        if (actionCase_ == 13) {
          actionCase_ = 0;
          action_ = null;
          onChanged();
        }
      } else {
        if (actionCase_ == 13) {
          actionCase_ = 0;
          action_ = null;
        }
        startSubChainBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * FedChain
     * </pre>
     *
     * <code>.iotextypes.StartSubChain startSubChain = 13;</code>
     */
    public com.github.iotexproject.grpc.types.StartSubChain.Builder getStartSubChainBuilder() {
      return getStartSubChainFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * FedChain
     * </pre>
     *
     * <code>.iotextypes.StartSubChain startSubChain = 13;</code>
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.StartSubChainOrBuilder getStartSubChainOrBuilder() {
      if ((actionCase_ == 13) && (startSubChainBuilder_ != null)) {
        return startSubChainBuilder_.getMessageOrBuilder();
      } else {
        if (actionCase_ == 13) {
          return (com.github.iotexproject.grpc.types.StartSubChain) action_;
        }
        return com.github.iotexproject.grpc.types.StartSubChain.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * FedChain
     * </pre>
     *
     * <code>.iotextypes.StartSubChain startSubChain = 13;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.StartSubChain, com.github.iotexproject.grpc.types.StartSubChain.Builder, com.github.iotexproject.grpc.types.StartSubChainOrBuilder> 
        getStartSubChainFieldBuilder() {
      if (startSubChainBuilder_ == null) {
        if (!(actionCase_ == 13)) {
          action_ = com.github.iotexproject.grpc.types.StartSubChain.getDefaultInstance();
        }
        startSubChainBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.iotexproject.grpc.types.StartSubChain, com.github.iotexproject.grpc.types.StartSubChain.Builder, com.github.iotexproject.grpc.types.StartSubChainOrBuilder>(
                (com.github.iotexproject.grpc.types.StartSubChain) action_,
                getParentForChildren(),
                isClean());
        action_ = null;
      }
      actionCase_ = 13;
      onChanged();
      return startSubChainBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.StopSubChain, com.github.iotexproject.grpc.types.StopSubChain.Builder, com.github.iotexproject.grpc.types.StopSubChainOrBuilder> stopSubChainBuilder_;
    /**
     * <code>.iotextypes.StopSubChain stopSubChain = 14;</code>
     * @return Whether the stopSubChain field is set.
     */
    @java.lang.Override
    public boolean hasStopSubChain() {
      return actionCase_ == 14;
    }
    /**
     * <code>.iotextypes.StopSubChain stopSubChain = 14;</code>
     * @return The stopSubChain.
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.StopSubChain getStopSubChain() {
      if (stopSubChainBuilder_ == null) {
        if (actionCase_ == 14) {
          return (com.github.iotexproject.grpc.types.StopSubChain) action_;
        }
        return com.github.iotexproject.grpc.types.StopSubChain.getDefaultInstance();
      } else {
        if (actionCase_ == 14) {
          return stopSubChainBuilder_.getMessage();
        }
        return com.github.iotexproject.grpc.types.StopSubChain.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.StopSubChain stopSubChain = 14;</code>
     */
    public Builder setStopSubChain(com.github.iotexproject.grpc.types.StopSubChain value) {
      if (stopSubChainBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        action_ = value;
        onChanged();
      } else {
        stopSubChainBuilder_.setMessage(value);
      }
      actionCase_ = 14;
      return this;
    }
    /**
     * <code>.iotextypes.StopSubChain stopSubChain = 14;</code>
     */
    public Builder setStopSubChain(
        com.github.iotexproject.grpc.types.StopSubChain.Builder builderForValue) {
      if (stopSubChainBuilder_ == null) {
        action_ = builderForValue.build();
        onChanged();
      } else {
        stopSubChainBuilder_.setMessage(builderForValue.build());
      }
      actionCase_ = 14;
      return this;
    }
    /**
     * <code>.iotextypes.StopSubChain stopSubChain = 14;</code>
     */
    public Builder mergeStopSubChain(com.github.iotexproject.grpc.types.StopSubChain value) {
      if (stopSubChainBuilder_ == null) {
        if (actionCase_ == 14 &&
            action_ != com.github.iotexproject.grpc.types.StopSubChain.getDefaultInstance()) {
          action_ = com.github.iotexproject.grpc.types.StopSubChain.newBuilder((com.github.iotexproject.grpc.types.StopSubChain) action_)
              .mergeFrom(value).buildPartial();
        } else {
          action_ = value;
        }
        onChanged();
      } else {
        if (actionCase_ == 14) {
          stopSubChainBuilder_.mergeFrom(value);
        } else {
          stopSubChainBuilder_.setMessage(value);
        }
      }
      actionCase_ = 14;
      return this;
    }
    /**
     * <code>.iotextypes.StopSubChain stopSubChain = 14;</code>
     */
    public Builder clearStopSubChain() {
      if (stopSubChainBuilder_ == null) {
        if (actionCase_ == 14) {
          actionCase_ = 0;
          action_ = null;
          onChanged();
        }
      } else {
        if (actionCase_ == 14) {
          actionCase_ = 0;
          action_ = null;
        }
        stopSubChainBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iotextypes.StopSubChain stopSubChain = 14;</code>
     */
    public com.github.iotexproject.grpc.types.StopSubChain.Builder getStopSubChainBuilder() {
      return getStopSubChainFieldBuilder().getBuilder();
    }
    /**
     * <code>.iotextypes.StopSubChain stopSubChain = 14;</code>
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.StopSubChainOrBuilder getStopSubChainOrBuilder() {
      if ((actionCase_ == 14) && (stopSubChainBuilder_ != null)) {
        return stopSubChainBuilder_.getMessageOrBuilder();
      } else {
        if (actionCase_ == 14) {
          return (com.github.iotexproject.grpc.types.StopSubChain) action_;
        }
        return com.github.iotexproject.grpc.types.StopSubChain.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.StopSubChain stopSubChain = 14;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.StopSubChain, com.github.iotexproject.grpc.types.StopSubChain.Builder, com.github.iotexproject.grpc.types.StopSubChainOrBuilder> 
        getStopSubChainFieldBuilder() {
      if (stopSubChainBuilder_ == null) {
        if (!(actionCase_ == 14)) {
          action_ = com.github.iotexproject.grpc.types.StopSubChain.getDefaultInstance();
        }
        stopSubChainBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.iotexproject.grpc.types.StopSubChain, com.github.iotexproject.grpc.types.StopSubChain.Builder, com.github.iotexproject.grpc.types.StopSubChainOrBuilder>(
                (com.github.iotexproject.grpc.types.StopSubChain) action_,
                getParentForChildren(),
                isClean());
        action_ = null;
      }
      actionCase_ = 14;
      onChanged();
      return stopSubChainBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.PutBlock, com.github.iotexproject.grpc.types.PutBlock.Builder, com.github.iotexproject.grpc.types.PutBlockOrBuilder> putBlockBuilder_;
    /**
     * <code>.iotextypes.PutBlock putBlock = 15;</code>
     * @return Whether the putBlock field is set.
     */
    @java.lang.Override
    public boolean hasPutBlock() {
      return actionCase_ == 15;
    }
    /**
     * <code>.iotextypes.PutBlock putBlock = 15;</code>
     * @return The putBlock.
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.PutBlock getPutBlock() {
      if (putBlockBuilder_ == null) {
        if (actionCase_ == 15) {
          return (com.github.iotexproject.grpc.types.PutBlock) action_;
        }
        return com.github.iotexproject.grpc.types.PutBlock.getDefaultInstance();
      } else {
        if (actionCase_ == 15) {
          return putBlockBuilder_.getMessage();
        }
        return com.github.iotexproject.grpc.types.PutBlock.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.PutBlock putBlock = 15;</code>
     */
    public Builder setPutBlock(com.github.iotexproject.grpc.types.PutBlock value) {
      if (putBlockBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        action_ = value;
        onChanged();
      } else {
        putBlockBuilder_.setMessage(value);
      }
      actionCase_ = 15;
      return this;
    }
    /**
     * <code>.iotextypes.PutBlock putBlock = 15;</code>
     */
    public Builder setPutBlock(
        com.github.iotexproject.grpc.types.PutBlock.Builder builderForValue) {
      if (putBlockBuilder_ == null) {
        action_ = builderForValue.build();
        onChanged();
      } else {
        putBlockBuilder_.setMessage(builderForValue.build());
      }
      actionCase_ = 15;
      return this;
    }
    /**
     * <code>.iotextypes.PutBlock putBlock = 15;</code>
     */
    public Builder mergePutBlock(com.github.iotexproject.grpc.types.PutBlock value) {
      if (putBlockBuilder_ == null) {
        if (actionCase_ == 15 &&
            action_ != com.github.iotexproject.grpc.types.PutBlock.getDefaultInstance()) {
          action_ = com.github.iotexproject.grpc.types.PutBlock.newBuilder((com.github.iotexproject.grpc.types.PutBlock) action_)
              .mergeFrom(value).buildPartial();
        } else {
          action_ = value;
        }
        onChanged();
      } else {
        if (actionCase_ == 15) {
          putBlockBuilder_.mergeFrom(value);
        } else {
          putBlockBuilder_.setMessage(value);
        }
      }
      actionCase_ = 15;
      return this;
    }
    /**
     * <code>.iotextypes.PutBlock putBlock = 15;</code>
     */
    public Builder clearPutBlock() {
      if (putBlockBuilder_ == null) {
        if (actionCase_ == 15) {
          actionCase_ = 0;
          action_ = null;
          onChanged();
        }
      } else {
        if (actionCase_ == 15) {
          actionCase_ = 0;
          action_ = null;
        }
        putBlockBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iotextypes.PutBlock putBlock = 15;</code>
     */
    public com.github.iotexproject.grpc.types.PutBlock.Builder getPutBlockBuilder() {
      return getPutBlockFieldBuilder().getBuilder();
    }
    /**
     * <code>.iotextypes.PutBlock putBlock = 15;</code>
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.PutBlockOrBuilder getPutBlockOrBuilder() {
      if ((actionCase_ == 15) && (putBlockBuilder_ != null)) {
        return putBlockBuilder_.getMessageOrBuilder();
      } else {
        if (actionCase_ == 15) {
          return (com.github.iotexproject.grpc.types.PutBlock) action_;
        }
        return com.github.iotexproject.grpc.types.PutBlock.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.PutBlock putBlock = 15;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.PutBlock, com.github.iotexproject.grpc.types.PutBlock.Builder, com.github.iotexproject.grpc.types.PutBlockOrBuilder> 
        getPutBlockFieldBuilder() {
      if (putBlockBuilder_ == null) {
        if (!(actionCase_ == 15)) {
          action_ = com.github.iotexproject.grpc.types.PutBlock.getDefaultInstance();
        }
        putBlockBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.iotexproject.grpc.types.PutBlock, com.github.iotexproject.grpc.types.PutBlock.Builder, com.github.iotexproject.grpc.types.PutBlockOrBuilder>(
                (com.github.iotexproject.grpc.types.PutBlock) action_,
                getParentForChildren(),
                isClean());
        action_ = null;
      }
      actionCase_ = 15;
      onChanged();
      return putBlockBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.CreateDeposit, com.github.iotexproject.grpc.types.CreateDeposit.Builder, com.github.iotexproject.grpc.types.CreateDepositOrBuilder> createDepositBuilder_;
    /**
     * <code>.iotextypes.CreateDeposit createDeposit = 16;</code>
     * @return Whether the createDeposit field is set.
     */
    @java.lang.Override
    public boolean hasCreateDeposit() {
      return actionCase_ == 16;
    }
    /**
     * <code>.iotextypes.CreateDeposit createDeposit = 16;</code>
     * @return The createDeposit.
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.CreateDeposit getCreateDeposit() {
      if (createDepositBuilder_ == null) {
        if (actionCase_ == 16) {
          return (com.github.iotexproject.grpc.types.CreateDeposit) action_;
        }
        return com.github.iotexproject.grpc.types.CreateDeposit.getDefaultInstance();
      } else {
        if (actionCase_ == 16) {
          return createDepositBuilder_.getMessage();
        }
        return com.github.iotexproject.grpc.types.CreateDeposit.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.CreateDeposit createDeposit = 16;</code>
     */
    public Builder setCreateDeposit(com.github.iotexproject.grpc.types.CreateDeposit value) {
      if (createDepositBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        action_ = value;
        onChanged();
      } else {
        createDepositBuilder_.setMessage(value);
      }
      actionCase_ = 16;
      return this;
    }
    /**
     * <code>.iotextypes.CreateDeposit createDeposit = 16;</code>
     */
    public Builder setCreateDeposit(
        com.github.iotexproject.grpc.types.CreateDeposit.Builder builderForValue) {
      if (createDepositBuilder_ == null) {
        action_ = builderForValue.build();
        onChanged();
      } else {
        createDepositBuilder_.setMessage(builderForValue.build());
      }
      actionCase_ = 16;
      return this;
    }
    /**
     * <code>.iotextypes.CreateDeposit createDeposit = 16;</code>
     */
    public Builder mergeCreateDeposit(com.github.iotexproject.grpc.types.CreateDeposit value) {
      if (createDepositBuilder_ == null) {
        if (actionCase_ == 16 &&
            action_ != com.github.iotexproject.grpc.types.CreateDeposit.getDefaultInstance()) {
          action_ = com.github.iotexproject.grpc.types.CreateDeposit.newBuilder((com.github.iotexproject.grpc.types.CreateDeposit) action_)
              .mergeFrom(value).buildPartial();
        } else {
          action_ = value;
        }
        onChanged();
      } else {
        if (actionCase_ == 16) {
          createDepositBuilder_.mergeFrom(value);
        } else {
          createDepositBuilder_.setMessage(value);
        }
      }
      actionCase_ = 16;
      return this;
    }
    /**
     * <code>.iotextypes.CreateDeposit createDeposit = 16;</code>
     */
    public Builder clearCreateDeposit() {
      if (createDepositBuilder_ == null) {
        if (actionCase_ == 16) {
          actionCase_ = 0;
          action_ = null;
          onChanged();
        }
      } else {
        if (actionCase_ == 16) {
          actionCase_ = 0;
          action_ = null;
        }
        createDepositBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iotextypes.CreateDeposit createDeposit = 16;</code>
     */
    public com.github.iotexproject.grpc.types.CreateDeposit.Builder getCreateDepositBuilder() {
      return getCreateDepositFieldBuilder().getBuilder();
    }
    /**
     * <code>.iotextypes.CreateDeposit createDeposit = 16;</code>
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.CreateDepositOrBuilder getCreateDepositOrBuilder() {
      if ((actionCase_ == 16) && (createDepositBuilder_ != null)) {
        return createDepositBuilder_.getMessageOrBuilder();
      } else {
        if (actionCase_ == 16) {
          return (com.github.iotexproject.grpc.types.CreateDeposit) action_;
        }
        return com.github.iotexproject.grpc.types.CreateDeposit.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.CreateDeposit createDeposit = 16;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.CreateDeposit, com.github.iotexproject.grpc.types.CreateDeposit.Builder, com.github.iotexproject.grpc.types.CreateDepositOrBuilder> 
        getCreateDepositFieldBuilder() {
      if (createDepositBuilder_ == null) {
        if (!(actionCase_ == 16)) {
          action_ = com.github.iotexproject.grpc.types.CreateDeposit.getDefaultInstance();
        }
        createDepositBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.iotexproject.grpc.types.CreateDeposit, com.github.iotexproject.grpc.types.CreateDeposit.Builder, com.github.iotexproject.grpc.types.CreateDepositOrBuilder>(
                (com.github.iotexproject.grpc.types.CreateDeposit) action_,
                getParentForChildren(),
                isClean());
        action_ = null;
      }
      actionCase_ = 16;
      onChanged();
      return createDepositBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.SettleDeposit, com.github.iotexproject.grpc.types.SettleDeposit.Builder, com.github.iotexproject.grpc.types.SettleDepositOrBuilder> settleDepositBuilder_;
    /**
     * <code>.iotextypes.SettleDeposit settleDeposit = 17;</code>
     * @return Whether the settleDeposit field is set.
     */
    @java.lang.Override
    public boolean hasSettleDeposit() {
      return actionCase_ == 17;
    }
    /**
     * <code>.iotextypes.SettleDeposit settleDeposit = 17;</code>
     * @return The settleDeposit.
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.SettleDeposit getSettleDeposit() {
      if (settleDepositBuilder_ == null) {
        if (actionCase_ == 17) {
          return (com.github.iotexproject.grpc.types.SettleDeposit) action_;
        }
        return com.github.iotexproject.grpc.types.SettleDeposit.getDefaultInstance();
      } else {
        if (actionCase_ == 17) {
          return settleDepositBuilder_.getMessage();
        }
        return com.github.iotexproject.grpc.types.SettleDeposit.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.SettleDeposit settleDeposit = 17;</code>
     */
    public Builder setSettleDeposit(com.github.iotexproject.grpc.types.SettleDeposit value) {
      if (settleDepositBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        action_ = value;
        onChanged();
      } else {
        settleDepositBuilder_.setMessage(value);
      }
      actionCase_ = 17;
      return this;
    }
    /**
     * <code>.iotextypes.SettleDeposit settleDeposit = 17;</code>
     */
    public Builder setSettleDeposit(
        com.github.iotexproject.grpc.types.SettleDeposit.Builder builderForValue) {
      if (settleDepositBuilder_ == null) {
        action_ = builderForValue.build();
        onChanged();
      } else {
        settleDepositBuilder_.setMessage(builderForValue.build());
      }
      actionCase_ = 17;
      return this;
    }
    /**
     * <code>.iotextypes.SettleDeposit settleDeposit = 17;</code>
     */
    public Builder mergeSettleDeposit(com.github.iotexproject.grpc.types.SettleDeposit value) {
      if (settleDepositBuilder_ == null) {
        if (actionCase_ == 17 &&
            action_ != com.github.iotexproject.grpc.types.SettleDeposit.getDefaultInstance()) {
          action_ = com.github.iotexproject.grpc.types.SettleDeposit.newBuilder((com.github.iotexproject.grpc.types.SettleDeposit) action_)
              .mergeFrom(value).buildPartial();
        } else {
          action_ = value;
        }
        onChanged();
      } else {
        if (actionCase_ == 17) {
          settleDepositBuilder_.mergeFrom(value);
        } else {
          settleDepositBuilder_.setMessage(value);
        }
      }
      actionCase_ = 17;
      return this;
    }
    /**
     * <code>.iotextypes.SettleDeposit settleDeposit = 17;</code>
     */
    public Builder clearSettleDeposit() {
      if (settleDepositBuilder_ == null) {
        if (actionCase_ == 17) {
          actionCase_ = 0;
          action_ = null;
          onChanged();
        }
      } else {
        if (actionCase_ == 17) {
          actionCase_ = 0;
          action_ = null;
        }
        settleDepositBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iotextypes.SettleDeposit settleDeposit = 17;</code>
     */
    public com.github.iotexproject.grpc.types.SettleDeposit.Builder getSettleDepositBuilder() {
      return getSettleDepositFieldBuilder().getBuilder();
    }
    /**
     * <code>.iotextypes.SettleDeposit settleDeposit = 17;</code>
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.SettleDepositOrBuilder getSettleDepositOrBuilder() {
      if ((actionCase_ == 17) && (settleDepositBuilder_ != null)) {
        return settleDepositBuilder_.getMessageOrBuilder();
      } else {
        if (actionCase_ == 17) {
          return (com.github.iotexproject.grpc.types.SettleDeposit) action_;
        }
        return com.github.iotexproject.grpc.types.SettleDeposit.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.SettleDeposit settleDeposit = 17;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.SettleDeposit, com.github.iotexproject.grpc.types.SettleDeposit.Builder, com.github.iotexproject.grpc.types.SettleDepositOrBuilder> 
        getSettleDepositFieldBuilder() {
      if (settleDepositBuilder_ == null) {
        if (!(actionCase_ == 17)) {
          action_ = com.github.iotexproject.grpc.types.SettleDeposit.getDefaultInstance();
        }
        settleDepositBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.iotexproject.grpc.types.SettleDeposit, com.github.iotexproject.grpc.types.SettleDeposit.Builder, com.github.iotexproject.grpc.types.SettleDepositOrBuilder>(
                (com.github.iotexproject.grpc.types.SettleDeposit) action_,
                getParentForChildren(),
                isClean());
        action_ = null;
      }
      actionCase_ = 17;
      onChanged();
      return settleDepositBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.CreatePlumChain, com.github.iotexproject.grpc.types.CreatePlumChain.Builder, com.github.iotexproject.grpc.types.CreatePlumChainOrBuilder> createPlumChainBuilder_;
    /**
     * <pre>
     * PlumChain
     * </pre>
     *
     * <code>.iotextypes.CreatePlumChain createPlumChain = 18;</code>
     * @return Whether the createPlumChain field is set.
     */
    @java.lang.Override
    public boolean hasCreatePlumChain() {
      return actionCase_ == 18;
    }
    /**
     * <pre>
     * PlumChain
     * </pre>
     *
     * <code>.iotextypes.CreatePlumChain createPlumChain = 18;</code>
     * @return The createPlumChain.
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.CreatePlumChain getCreatePlumChain() {
      if (createPlumChainBuilder_ == null) {
        if (actionCase_ == 18) {
          return (com.github.iotexproject.grpc.types.CreatePlumChain) action_;
        }
        return com.github.iotexproject.grpc.types.CreatePlumChain.getDefaultInstance();
      } else {
        if (actionCase_ == 18) {
          return createPlumChainBuilder_.getMessage();
        }
        return com.github.iotexproject.grpc.types.CreatePlumChain.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * PlumChain
     * </pre>
     *
     * <code>.iotextypes.CreatePlumChain createPlumChain = 18;</code>
     */
    public Builder setCreatePlumChain(com.github.iotexproject.grpc.types.CreatePlumChain value) {
      if (createPlumChainBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        action_ = value;
        onChanged();
      } else {
        createPlumChainBuilder_.setMessage(value);
      }
      actionCase_ = 18;
      return this;
    }
    /**
     * <pre>
     * PlumChain
     * </pre>
     *
     * <code>.iotextypes.CreatePlumChain createPlumChain = 18;</code>
     */
    public Builder setCreatePlumChain(
        com.github.iotexproject.grpc.types.CreatePlumChain.Builder builderForValue) {
      if (createPlumChainBuilder_ == null) {
        action_ = builderForValue.build();
        onChanged();
      } else {
        createPlumChainBuilder_.setMessage(builderForValue.build());
      }
      actionCase_ = 18;
      return this;
    }
    /**
     * <pre>
     * PlumChain
     * </pre>
     *
     * <code>.iotextypes.CreatePlumChain createPlumChain = 18;</code>
     */
    public Builder mergeCreatePlumChain(com.github.iotexproject.grpc.types.CreatePlumChain value) {
      if (createPlumChainBuilder_ == null) {
        if (actionCase_ == 18 &&
            action_ != com.github.iotexproject.grpc.types.CreatePlumChain.getDefaultInstance()) {
          action_ = com.github.iotexproject.grpc.types.CreatePlumChain.newBuilder((com.github.iotexproject.grpc.types.CreatePlumChain) action_)
              .mergeFrom(value).buildPartial();
        } else {
          action_ = value;
        }
        onChanged();
      } else {
        if (actionCase_ == 18) {
          createPlumChainBuilder_.mergeFrom(value);
        } else {
          createPlumChainBuilder_.setMessage(value);
        }
      }
      actionCase_ = 18;
      return this;
    }
    /**
     * <pre>
     * PlumChain
     * </pre>
     *
     * <code>.iotextypes.CreatePlumChain createPlumChain = 18;</code>
     */
    public Builder clearCreatePlumChain() {
      if (createPlumChainBuilder_ == null) {
        if (actionCase_ == 18) {
          actionCase_ = 0;
          action_ = null;
          onChanged();
        }
      } else {
        if (actionCase_ == 18) {
          actionCase_ = 0;
          action_ = null;
        }
        createPlumChainBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * PlumChain
     * </pre>
     *
     * <code>.iotextypes.CreatePlumChain createPlumChain = 18;</code>
     */
    public com.github.iotexproject.grpc.types.CreatePlumChain.Builder getCreatePlumChainBuilder() {
      return getCreatePlumChainFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * PlumChain
     * </pre>
     *
     * <code>.iotextypes.CreatePlumChain createPlumChain = 18;</code>
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.CreatePlumChainOrBuilder getCreatePlumChainOrBuilder() {
      if ((actionCase_ == 18) && (createPlumChainBuilder_ != null)) {
        return createPlumChainBuilder_.getMessageOrBuilder();
      } else {
        if (actionCase_ == 18) {
          return (com.github.iotexproject.grpc.types.CreatePlumChain) action_;
        }
        return com.github.iotexproject.grpc.types.CreatePlumChain.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * PlumChain
     * </pre>
     *
     * <code>.iotextypes.CreatePlumChain createPlumChain = 18;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.CreatePlumChain, com.github.iotexproject.grpc.types.CreatePlumChain.Builder, com.github.iotexproject.grpc.types.CreatePlumChainOrBuilder> 
        getCreatePlumChainFieldBuilder() {
      if (createPlumChainBuilder_ == null) {
        if (!(actionCase_ == 18)) {
          action_ = com.github.iotexproject.grpc.types.CreatePlumChain.getDefaultInstance();
        }
        createPlumChainBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.iotexproject.grpc.types.CreatePlumChain, com.github.iotexproject.grpc.types.CreatePlumChain.Builder, com.github.iotexproject.grpc.types.CreatePlumChainOrBuilder>(
                (com.github.iotexproject.grpc.types.CreatePlumChain) action_,
                getParentForChildren(),
                isClean());
        action_ = null;
      }
      actionCase_ = 18;
      onChanged();
      return createPlumChainBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.TerminatePlumChain, com.github.iotexproject.grpc.types.TerminatePlumChain.Builder, com.github.iotexproject.grpc.types.TerminatePlumChainOrBuilder> terminatePlumChainBuilder_;
    /**
     * <code>.iotextypes.TerminatePlumChain terminatePlumChain = 19;</code>
     * @return Whether the terminatePlumChain field is set.
     */
    @java.lang.Override
    public boolean hasTerminatePlumChain() {
      return actionCase_ == 19;
    }
    /**
     * <code>.iotextypes.TerminatePlumChain terminatePlumChain = 19;</code>
     * @return The terminatePlumChain.
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.TerminatePlumChain getTerminatePlumChain() {
      if (terminatePlumChainBuilder_ == null) {
        if (actionCase_ == 19) {
          return (com.github.iotexproject.grpc.types.TerminatePlumChain) action_;
        }
        return com.github.iotexproject.grpc.types.TerminatePlumChain.getDefaultInstance();
      } else {
        if (actionCase_ == 19) {
          return terminatePlumChainBuilder_.getMessage();
        }
        return com.github.iotexproject.grpc.types.TerminatePlumChain.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.TerminatePlumChain terminatePlumChain = 19;</code>
     */
    public Builder setTerminatePlumChain(com.github.iotexproject.grpc.types.TerminatePlumChain value) {
      if (terminatePlumChainBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        action_ = value;
        onChanged();
      } else {
        terminatePlumChainBuilder_.setMessage(value);
      }
      actionCase_ = 19;
      return this;
    }
    /**
     * <code>.iotextypes.TerminatePlumChain terminatePlumChain = 19;</code>
     */
    public Builder setTerminatePlumChain(
        com.github.iotexproject.grpc.types.TerminatePlumChain.Builder builderForValue) {
      if (terminatePlumChainBuilder_ == null) {
        action_ = builderForValue.build();
        onChanged();
      } else {
        terminatePlumChainBuilder_.setMessage(builderForValue.build());
      }
      actionCase_ = 19;
      return this;
    }
    /**
     * <code>.iotextypes.TerminatePlumChain terminatePlumChain = 19;</code>
     */
    public Builder mergeTerminatePlumChain(com.github.iotexproject.grpc.types.TerminatePlumChain value) {
      if (terminatePlumChainBuilder_ == null) {
        if (actionCase_ == 19 &&
            action_ != com.github.iotexproject.grpc.types.TerminatePlumChain.getDefaultInstance()) {
          action_ = com.github.iotexproject.grpc.types.TerminatePlumChain.newBuilder((com.github.iotexproject.grpc.types.TerminatePlumChain) action_)
              .mergeFrom(value).buildPartial();
        } else {
          action_ = value;
        }
        onChanged();
      } else {
        if (actionCase_ == 19) {
          terminatePlumChainBuilder_.mergeFrom(value);
        } else {
          terminatePlumChainBuilder_.setMessage(value);
        }
      }
      actionCase_ = 19;
      return this;
    }
    /**
     * <code>.iotextypes.TerminatePlumChain terminatePlumChain = 19;</code>
     */
    public Builder clearTerminatePlumChain() {
      if (terminatePlumChainBuilder_ == null) {
        if (actionCase_ == 19) {
          actionCase_ = 0;
          action_ = null;
          onChanged();
        }
      } else {
        if (actionCase_ == 19) {
          actionCase_ = 0;
          action_ = null;
        }
        terminatePlumChainBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iotextypes.TerminatePlumChain terminatePlumChain = 19;</code>
     */
    public com.github.iotexproject.grpc.types.TerminatePlumChain.Builder getTerminatePlumChainBuilder() {
      return getTerminatePlumChainFieldBuilder().getBuilder();
    }
    /**
     * <code>.iotextypes.TerminatePlumChain terminatePlumChain = 19;</code>
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.TerminatePlumChainOrBuilder getTerminatePlumChainOrBuilder() {
      if ((actionCase_ == 19) && (terminatePlumChainBuilder_ != null)) {
        return terminatePlumChainBuilder_.getMessageOrBuilder();
      } else {
        if (actionCase_ == 19) {
          return (com.github.iotexproject.grpc.types.TerminatePlumChain) action_;
        }
        return com.github.iotexproject.grpc.types.TerminatePlumChain.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.TerminatePlumChain terminatePlumChain = 19;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.TerminatePlumChain, com.github.iotexproject.grpc.types.TerminatePlumChain.Builder, com.github.iotexproject.grpc.types.TerminatePlumChainOrBuilder> 
        getTerminatePlumChainFieldBuilder() {
      if (terminatePlumChainBuilder_ == null) {
        if (!(actionCase_ == 19)) {
          action_ = com.github.iotexproject.grpc.types.TerminatePlumChain.getDefaultInstance();
        }
        terminatePlumChainBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.iotexproject.grpc.types.TerminatePlumChain, com.github.iotexproject.grpc.types.TerminatePlumChain.Builder, com.github.iotexproject.grpc.types.TerminatePlumChainOrBuilder>(
                (com.github.iotexproject.grpc.types.TerminatePlumChain) action_,
                getParentForChildren(),
                isClean());
        action_ = null;
      }
      actionCase_ = 19;
      onChanged();
      return terminatePlumChainBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.PlumPutBlock, com.github.iotexproject.grpc.types.PlumPutBlock.Builder, com.github.iotexproject.grpc.types.PlumPutBlockOrBuilder> plumPutBlockBuilder_;
    /**
     * <code>.iotextypes.PlumPutBlock plumPutBlock = 20;</code>
     * @return Whether the plumPutBlock field is set.
     */
    @java.lang.Override
    public boolean hasPlumPutBlock() {
      return actionCase_ == 20;
    }
    /**
     * <code>.iotextypes.PlumPutBlock plumPutBlock = 20;</code>
     * @return The plumPutBlock.
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.PlumPutBlock getPlumPutBlock() {
      if (plumPutBlockBuilder_ == null) {
        if (actionCase_ == 20) {
          return (com.github.iotexproject.grpc.types.PlumPutBlock) action_;
        }
        return com.github.iotexproject.grpc.types.PlumPutBlock.getDefaultInstance();
      } else {
        if (actionCase_ == 20) {
          return plumPutBlockBuilder_.getMessage();
        }
        return com.github.iotexproject.grpc.types.PlumPutBlock.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.PlumPutBlock plumPutBlock = 20;</code>
     */
    public Builder setPlumPutBlock(com.github.iotexproject.grpc.types.PlumPutBlock value) {
      if (plumPutBlockBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        action_ = value;
        onChanged();
      } else {
        plumPutBlockBuilder_.setMessage(value);
      }
      actionCase_ = 20;
      return this;
    }
    /**
     * <code>.iotextypes.PlumPutBlock plumPutBlock = 20;</code>
     */
    public Builder setPlumPutBlock(
        com.github.iotexproject.grpc.types.PlumPutBlock.Builder builderForValue) {
      if (plumPutBlockBuilder_ == null) {
        action_ = builderForValue.build();
        onChanged();
      } else {
        plumPutBlockBuilder_.setMessage(builderForValue.build());
      }
      actionCase_ = 20;
      return this;
    }
    /**
     * <code>.iotextypes.PlumPutBlock plumPutBlock = 20;</code>
     */
    public Builder mergePlumPutBlock(com.github.iotexproject.grpc.types.PlumPutBlock value) {
      if (plumPutBlockBuilder_ == null) {
        if (actionCase_ == 20 &&
            action_ != com.github.iotexproject.grpc.types.PlumPutBlock.getDefaultInstance()) {
          action_ = com.github.iotexproject.grpc.types.PlumPutBlock.newBuilder((com.github.iotexproject.grpc.types.PlumPutBlock) action_)
              .mergeFrom(value).buildPartial();
        } else {
          action_ = value;
        }
        onChanged();
      } else {
        if (actionCase_ == 20) {
          plumPutBlockBuilder_.mergeFrom(value);
        } else {
          plumPutBlockBuilder_.setMessage(value);
        }
      }
      actionCase_ = 20;
      return this;
    }
    /**
     * <code>.iotextypes.PlumPutBlock plumPutBlock = 20;</code>
     */
    public Builder clearPlumPutBlock() {
      if (plumPutBlockBuilder_ == null) {
        if (actionCase_ == 20) {
          actionCase_ = 0;
          action_ = null;
          onChanged();
        }
      } else {
        if (actionCase_ == 20) {
          actionCase_ = 0;
          action_ = null;
        }
        plumPutBlockBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iotextypes.PlumPutBlock plumPutBlock = 20;</code>
     */
    public com.github.iotexproject.grpc.types.PlumPutBlock.Builder getPlumPutBlockBuilder() {
      return getPlumPutBlockFieldBuilder().getBuilder();
    }
    /**
     * <code>.iotextypes.PlumPutBlock plumPutBlock = 20;</code>
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.PlumPutBlockOrBuilder getPlumPutBlockOrBuilder() {
      if ((actionCase_ == 20) && (plumPutBlockBuilder_ != null)) {
        return plumPutBlockBuilder_.getMessageOrBuilder();
      } else {
        if (actionCase_ == 20) {
          return (com.github.iotexproject.grpc.types.PlumPutBlock) action_;
        }
        return com.github.iotexproject.grpc.types.PlumPutBlock.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.PlumPutBlock plumPutBlock = 20;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.PlumPutBlock, com.github.iotexproject.grpc.types.PlumPutBlock.Builder, com.github.iotexproject.grpc.types.PlumPutBlockOrBuilder> 
        getPlumPutBlockFieldBuilder() {
      if (plumPutBlockBuilder_ == null) {
        if (!(actionCase_ == 20)) {
          action_ = com.github.iotexproject.grpc.types.PlumPutBlock.getDefaultInstance();
        }
        plumPutBlockBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.iotexproject.grpc.types.PlumPutBlock, com.github.iotexproject.grpc.types.PlumPutBlock.Builder, com.github.iotexproject.grpc.types.PlumPutBlockOrBuilder>(
                (com.github.iotexproject.grpc.types.PlumPutBlock) action_,
                getParentForChildren(),
                isClean());
        action_ = null;
      }
      actionCase_ = 20;
      onChanged();
      return plumPutBlockBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.PlumCreateDeposit, com.github.iotexproject.grpc.types.PlumCreateDeposit.Builder, com.github.iotexproject.grpc.types.PlumCreateDepositOrBuilder> plumCreateDepositBuilder_;
    /**
     * <code>.iotextypes.PlumCreateDeposit plumCreateDeposit = 21;</code>
     * @return Whether the plumCreateDeposit field is set.
     */
    @java.lang.Override
    public boolean hasPlumCreateDeposit() {
      return actionCase_ == 21;
    }
    /**
     * <code>.iotextypes.PlumCreateDeposit plumCreateDeposit = 21;</code>
     * @return The plumCreateDeposit.
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.PlumCreateDeposit getPlumCreateDeposit() {
      if (plumCreateDepositBuilder_ == null) {
        if (actionCase_ == 21) {
          return (com.github.iotexproject.grpc.types.PlumCreateDeposit) action_;
        }
        return com.github.iotexproject.grpc.types.PlumCreateDeposit.getDefaultInstance();
      } else {
        if (actionCase_ == 21) {
          return plumCreateDepositBuilder_.getMessage();
        }
        return com.github.iotexproject.grpc.types.PlumCreateDeposit.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.PlumCreateDeposit plumCreateDeposit = 21;</code>
     */
    public Builder setPlumCreateDeposit(com.github.iotexproject.grpc.types.PlumCreateDeposit value) {
      if (plumCreateDepositBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        action_ = value;
        onChanged();
      } else {
        plumCreateDepositBuilder_.setMessage(value);
      }
      actionCase_ = 21;
      return this;
    }
    /**
     * <code>.iotextypes.PlumCreateDeposit plumCreateDeposit = 21;</code>
     */
    public Builder setPlumCreateDeposit(
        com.github.iotexproject.grpc.types.PlumCreateDeposit.Builder builderForValue) {
      if (plumCreateDepositBuilder_ == null) {
        action_ = builderForValue.build();
        onChanged();
      } else {
        plumCreateDepositBuilder_.setMessage(builderForValue.build());
      }
      actionCase_ = 21;
      return this;
    }
    /**
     * <code>.iotextypes.PlumCreateDeposit plumCreateDeposit = 21;</code>
     */
    public Builder mergePlumCreateDeposit(com.github.iotexproject.grpc.types.PlumCreateDeposit value) {
      if (plumCreateDepositBuilder_ == null) {
        if (actionCase_ == 21 &&
            action_ != com.github.iotexproject.grpc.types.PlumCreateDeposit.getDefaultInstance()) {
          action_ = com.github.iotexproject.grpc.types.PlumCreateDeposit.newBuilder((com.github.iotexproject.grpc.types.PlumCreateDeposit) action_)
              .mergeFrom(value).buildPartial();
        } else {
          action_ = value;
        }
        onChanged();
      } else {
        if (actionCase_ == 21) {
          plumCreateDepositBuilder_.mergeFrom(value);
        } else {
          plumCreateDepositBuilder_.setMessage(value);
        }
      }
      actionCase_ = 21;
      return this;
    }
    /**
     * <code>.iotextypes.PlumCreateDeposit plumCreateDeposit = 21;</code>
     */
    public Builder clearPlumCreateDeposit() {
      if (plumCreateDepositBuilder_ == null) {
        if (actionCase_ == 21) {
          actionCase_ = 0;
          action_ = null;
          onChanged();
        }
      } else {
        if (actionCase_ == 21) {
          actionCase_ = 0;
          action_ = null;
        }
        plumCreateDepositBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iotextypes.PlumCreateDeposit plumCreateDeposit = 21;</code>
     */
    public com.github.iotexproject.grpc.types.PlumCreateDeposit.Builder getPlumCreateDepositBuilder() {
      return getPlumCreateDepositFieldBuilder().getBuilder();
    }
    /**
     * <code>.iotextypes.PlumCreateDeposit plumCreateDeposit = 21;</code>
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.PlumCreateDepositOrBuilder getPlumCreateDepositOrBuilder() {
      if ((actionCase_ == 21) && (plumCreateDepositBuilder_ != null)) {
        return plumCreateDepositBuilder_.getMessageOrBuilder();
      } else {
        if (actionCase_ == 21) {
          return (com.github.iotexproject.grpc.types.PlumCreateDeposit) action_;
        }
        return com.github.iotexproject.grpc.types.PlumCreateDeposit.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.PlumCreateDeposit plumCreateDeposit = 21;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.PlumCreateDeposit, com.github.iotexproject.grpc.types.PlumCreateDeposit.Builder, com.github.iotexproject.grpc.types.PlumCreateDepositOrBuilder> 
        getPlumCreateDepositFieldBuilder() {
      if (plumCreateDepositBuilder_ == null) {
        if (!(actionCase_ == 21)) {
          action_ = com.github.iotexproject.grpc.types.PlumCreateDeposit.getDefaultInstance();
        }
        plumCreateDepositBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.iotexproject.grpc.types.PlumCreateDeposit, com.github.iotexproject.grpc.types.PlumCreateDeposit.Builder, com.github.iotexproject.grpc.types.PlumCreateDepositOrBuilder>(
                (com.github.iotexproject.grpc.types.PlumCreateDeposit) action_,
                getParentForChildren(),
                isClean());
        action_ = null;
      }
      actionCase_ = 21;
      onChanged();
      return plumCreateDepositBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.PlumStartExit, com.github.iotexproject.grpc.types.PlumStartExit.Builder, com.github.iotexproject.grpc.types.PlumStartExitOrBuilder> plumStartExitBuilder_;
    /**
     * <code>.iotextypes.PlumStartExit plumStartExit = 22;</code>
     * @return Whether the plumStartExit field is set.
     */
    @java.lang.Override
    public boolean hasPlumStartExit() {
      return actionCase_ == 22;
    }
    /**
     * <code>.iotextypes.PlumStartExit plumStartExit = 22;</code>
     * @return The plumStartExit.
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.PlumStartExit getPlumStartExit() {
      if (plumStartExitBuilder_ == null) {
        if (actionCase_ == 22) {
          return (com.github.iotexproject.grpc.types.PlumStartExit) action_;
        }
        return com.github.iotexproject.grpc.types.PlumStartExit.getDefaultInstance();
      } else {
        if (actionCase_ == 22) {
          return plumStartExitBuilder_.getMessage();
        }
        return com.github.iotexproject.grpc.types.PlumStartExit.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.PlumStartExit plumStartExit = 22;</code>
     */
    public Builder setPlumStartExit(com.github.iotexproject.grpc.types.PlumStartExit value) {
      if (plumStartExitBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        action_ = value;
        onChanged();
      } else {
        plumStartExitBuilder_.setMessage(value);
      }
      actionCase_ = 22;
      return this;
    }
    /**
     * <code>.iotextypes.PlumStartExit plumStartExit = 22;</code>
     */
    public Builder setPlumStartExit(
        com.github.iotexproject.grpc.types.PlumStartExit.Builder builderForValue) {
      if (plumStartExitBuilder_ == null) {
        action_ = builderForValue.build();
        onChanged();
      } else {
        plumStartExitBuilder_.setMessage(builderForValue.build());
      }
      actionCase_ = 22;
      return this;
    }
    /**
     * <code>.iotextypes.PlumStartExit plumStartExit = 22;</code>
     */
    public Builder mergePlumStartExit(com.github.iotexproject.grpc.types.PlumStartExit value) {
      if (plumStartExitBuilder_ == null) {
        if (actionCase_ == 22 &&
            action_ != com.github.iotexproject.grpc.types.PlumStartExit.getDefaultInstance()) {
          action_ = com.github.iotexproject.grpc.types.PlumStartExit.newBuilder((com.github.iotexproject.grpc.types.PlumStartExit) action_)
              .mergeFrom(value).buildPartial();
        } else {
          action_ = value;
        }
        onChanged();
      } else {
        if (actionCase_ == 22) {
          plumStartExitBuilder_.mergeFrom(value);
        } else {
          plumStartExitBuilder_.setMessage(value);
        }
      }
      actionCase_ = 22;
      return this;
    }
    /**
     * <code>.iotextypes.PlumStartExit plumStartExit = 22;</code>
     */
    public Builder clearPlumStartExit() {
      if (plumStartExitBuilder_ == null) {
        if (actionCase_ == 22) {
          actionCase_ = 0;
          action_ = null;
          onChanged();
        }
      } else {
        if (actionCase_ == 22) {
          actionCase_ = 0;
          action_ = null;
        }
        plumStartExitBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iotextypes.PlumStartExit plumStartExit = 22;</code>
     */
    public com.github.iotexproject.grpc.types.PlumStartExit.Builder getPlumStartExitBuilder() {
      return getPlumStartExitFieldBuilder().getBuilder();
    }
    /**
     * <code>.iotextypes.PlumStartExit plumStartExit = 22;</code>
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.PlumStartExitOrBuilder getPlumStartExitOrBuilder() {
      if ((actionCase_ == 22) && (plumStartExitBuilder_ != null)) {
        return plumStartExitBuilder_.getMessageOrBuilder();
      } else {
        if (actionCase_ == 22) {
          return (com.github.iotexproject.grpc.types.PlumStartExit) action_;
        }
        return com.github.iotexproject.grpc.types.PlumStartExit.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.PlumStartExit plumStartExit = 22;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.PlumStartExit, com.github.iotexproject.grpc.types.PlumStartExit.Builder, com.github.iotexproject.grpc.types.PlumStartExitOrBuilder> 
        getPlumStartExitFieldBuilder() {
      if (plumStartExitBuilder_ == null) {
        if (!(actionCase_ == 22)) {
          action_ = com.github.iotexproject.grpc.types.PlumStartExit.getDefaultInstance();
        }
        plumStartExitBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.iotexproject.grpc.types.PlumStartExit, com.github.iotexproject.grpc.types.PlumStartExit.Builder, com.github.iotexproject.grpc.types.PlumStartExitOrBuilder>(
                (com.github.iotexproject.grpc.types.PlumStartExit) action_,
                getParentForChildren(),
                isClean());
        action_ = null;
      }
      actionCase_ = 22;
      onChanged();
      return plumStartExitBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.PlumChallengeExit, com.github.iotexproject.grpc.types.PlumChallengeExit.Builder, com.github.iotexproject.grpc.types.PlumChallengeExitOrBuilder> plumChallengeExitBuilder_;
    /**
     * <code>.iotextypes.PlumChallengeExit plumChallengeExit = 23;</code>
     * @return Whether the plumChallengeExit field is set.
     */
    @java.lang.Override
    public boolean hasPlumChallengeExit() {
      return actionCase_ == 23;
    }
    /**
     * <code>.iotextypes.PlumChallengeExit plumChallengeExit = 23;</code>
     * @return The plumChallengeExit.
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.PlumChallengeExit getPlumChallengeExit() {
      if (plumChallengeExitBuilder_ == null) {
        if (actionCase_ == 23) {
          return (com.github.iotexproject.grpc.types.PlumChallengeExit) action_;
        }
        return com.github.iotexproject.grpc.types.PlumChallengeExit.getDefaultInstance();
      } else {
        if (actionCase_ == 23) {
          return plumChallengeExitBuilder_.getMessage();
        }
        return com.github.iotexproject.grpc.types.PlumChallengeExit.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.PlumChallengeExit plumChallengeExit = 23;</code>
     */
    public Builder setPlumChallengeExit(com.github.iotexproject.grpc.types.PlumChallengeExit value) {
      if (plumChallengeExitBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        action_ = value;
        onChanged();
      } else {
        plumChallengeExitBuilder_.setMessage(value);
      }
      actionCase_ = 23;
      return this;
    }
    /**
     * <code>.iotextypes.PlumChallengeExit plumChallengeExit = 23;</code>
     */
    public Builder setPlumChallengeExit(
        com.github.iotexproject.grpc.types.PlumChallengeExit.Builder builderForValue) {
      if (plumChallengeExitBuilder_ == null) {
        action_ = builderForValue.build();
        onChanged();
      } else {
        plumChallengeExitBuilder_.setMessage(builderForValue.build());
      }
      actionCase_ = 23;
      return this;
    }
    /**
     * <code>.iotextypes.PlumChallengeExit plumChallengeExit = 23;</code>
     */
    public Builder mergePlumChallengeExit(com.github.iotexproject.grpc.types.PlumChallengeExit value) {
      if (plumChallengeExitBuilder_ == null) {
        if (actionCase_ == 23 &&
            action_ != com.github.iotexproject.grpc.types.PlumChallengeExit.getDefaultInstance()) {
          action_ = com.github.iotexproject.grpc.types.PlumChallengeExit.newBuilder((com.github.iotexproject.grpc.types.PlumChallengeExit) action_)
              .mergeFrom(value).buildPartial();
        } else {
          action_ = value;
        }
        onChanged();
      } else {
        if (actionCase_ == 23) {
          plumChallengeExitBuilder_.mergeFrom(value);
        } else {
          plumChallengeExitBuilder_.setMessage(value);
        }
      }
      actionCase_ = 23;
      return this;
    }
    /**
     * <code>.iotextypes.PlumChallengeExit plumChallengeExit = 23;</code>
     */
    public Builder clearPlumChallengeExit() {
      if (plumChallengeExitBuilder_ == null) {
        if (actionCase_ == 23) {
          actionCase_ = 0;
          action_ = null;
          onChanged();
        }
      } else {
        if (actionCase_ == 23) {
          actionCase_ = 0;
          action_ = null;
        }
        plumChallengeExitBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iotextypes.PlumChallengeExit plumChallengeExit = 23;</code>
     */
    public com.github.iotexproject.grpc.types.PlumChallengeExit.Builder getPlumChallengeExitBuilder() {
      return getPlumChallengeExitFieldBuilder().getBuilder();
    }
    /**
     * <code>.iotextypes.PlumChallengeExit plumChallengeExit = 23;</code>
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.PlumChallengeExitOrBuilder getPlumChallengeExitOrBuilder() {
      if ((actionCase_ == 23) && (plumChallengeExitBuilder_ != null)) {
        return plumChallengeExitBuilder_.getMessageOrBuilder();
      } else {
        if (actionCase_ == 23) {
          return (com.github.iotexproject.grpc.types.PlumChallengeExit) action_;
        }
        return com.github.iotexproject.grpc.types.PlumChallengeExit.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.PlumChallengeExit plumChallengeExit = 23;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.PlumChallengeExit, com.github.iotexproject.grpc.types.PlumChallengeExit.Builder, com.github.iotexproject.grpc.types.PlumChallengeExitOrBuilder> 
        getPlumChallengeExitFieldBuilder() {
      if (plumChallengeExitBuilder_ == null) {
        if (!(actionCase_ == 23)) {
          action_ = com.github.iotexproject.grpc.types.PlumChallengeExit.getDefaultInstance();
        }
        plumChallengeExitBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.iotexproject.grpc.types.PlumChallengeExit, com.github.iotexproject.grpc.types.PlumChallengeExit.Builder, com.github.iotexproject.grpc.types.PlumChallengeExitOrBuilder>(
                (com.github.iotexproject.grpc.types.PlumChallengeExit) action_,
                getParentForChildren(),
                isClean());
        action_ = null;
      }
      actionCase_ = 23;
      onChanged();
      return plumChallengeExitBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.PlumResponseChallengeExit, com.github.iotexproject.grpc.types.PlumResponseChallengeExit.Builder, com.github.iotexproject.grpc.types.PlumResponseChallengeExitOrBuilder> plumResponseChallengeExitBuilder_;
    /**
     * <code>.iotextypes.PlumResponseChallengeExit plumResponseChallengeExit = 24;</code>
     * @return Whether the plumResponseChallengeExit field is set.
     */
    @java.lang.Override
    public boolean hasPlumResponseChallengeExit() {
      return actionCase_ == 24;
    }
    /**
     * <code>.iotextypes.PlumResponseChallengeExit plumResponseChallengeExit = 24;</code>
     * @return The plumResponseChallengeExit.
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.PlumResponseChallengeExit getPlumResponseChallengeExit() {
      if (plumResponseChallengeExitBuilder_ == null) {
        if (actionCase_ == 24) {
          return (com.github.iotexproject.grpc.types.PlumResponseChallengeExit) action_;
        }
        return com.github.iotexproject.grpc.types.PlumResponseChallengeExit.getDefaultInstance();
      } else {
        if (actionCase_ == 24) {
          return plumResponseChallengeExitBuilder_.getMessage();
        }
        return com.github.iotexproject.grpc.types.PlumResponseChallengeExit.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.PlumResponseChallengeExit plumResponseChallengeExit = 24;</code>
     */
    public Builder setPlumResponseChallengeExit(com.github.iotexproject.grpc.types.PlumResponseChallengeExit value) {
      if (plumResponseChallengeExitBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        action_ = value;
        onChanged();
      } else {
        plumResponseChallengeExitBuilder_.setMessage(value);
      }
      actionCase_ = 24;
      return this;
    }
    /**
     * <code>.iotextypes.PlumResponseChallengeExit plumResponseChallengeExit = 24;</code>
     */
    public Builder setPlumResponseChallengeExit(
        com.github.iotexproject.grpc.types.PlumResponseChallengeExit.Builder builderForValue) {
      if (plumResponseChallengeExitBuilder_ == null) {
        action_ = builderForValue.build();
        onChanged();
      } else {
        plumResponseChallengeExitBuilder_.setMessage(builderForValue.build());
      }
      actionCase_ = 24;
      return this;
    }
    /**
     * <code>.iotextypes.PlumResponseChallengeExit plumResponseChallengeExit = 24;</code>
     */
    public Builder mergePlumResponseChallengeExit(com.github.iotexproject.grpc.types.PlumResponseChallengeExit value) {
      if (plumResponseChallengeExitBuilder_ == null) {
        if (actionCase_ == 24 &&
            action_ != com.github.iotexproject.grpc.types.PlumResponseChallengeExit.getDefaultInstance()) {
          action_ = com.github.iotexproject.grpc.types.PlumResponseChallengeExit.newBuilder((com.github.iotexproject.grpc.types.PlumResponseChallengeExit) action_)
              .mergeFrom(value).buildPartial();
        } else {
          action_ = value;
        }
        onChanged();
      } else {
        if (actionCase_ == 24) {
          plumResponseChallengeExitBuilder_.mergeFrom(value);
        } else {
          plumResponseChallengeExitBuilder_.setMessage(value);
        }
      }
      actionCase_ = 24;
      return this;
    }
    /**
     * <code>.iotextypes.PlumResponseChallengeExit plumResponseChallengeExit = 24;</code>
     */
    public Builder clearPlumResponseChallengeExit() {
      if (plumResponseChallengeExitBuilder_ == null) {
        if (actionCase_ == 24) {
          actionCase_ = 0;
          action_ = null;
          onChanged();
        }
      } else {
        if (actionCase_ == 24) {
          actionCase_ = 0;
          action_ = null;
        }
        plumResponseChallengeExitBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iotextypes.PlumResponseChallengeExit plumResponseChallengeExit = 24;</code>
     */
    public com.github.iotexproject.grpc.types.PlumResponseChallengeExit.Builder getPlumResponseChallengeExitBuilder() {
      return getPlumResponseChallengeExitFieldBuilder().getBuilder();
    }
    /**
     * <code>.iotextypes.PlumResponseChallengeExit plumResponseChallengeExit = 24;</code>
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.PlumResponseChallengeExitOrBuilder getPlumResponseChallengeExitOrBuilder() {
      if ((actionCase_ == 24) && (plumResponseChallengeExitBuilder_ != null)) {
        return plumResponseChallengeExitBuilder_.getMessageOrBuilder();
      } else {
        if (actionCase_ == 24) {
          return (com.github.iotexproject.grpc.types.PlumResponseChallengeExit) action_;
        }
        return com.github.iotexproject.grpc.types.PlumResponseChallengeExit.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.PlumResponseChallengeExit plumResponseChallengeExit = 24;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.PlumResponseChallengeExit, com.github.iotexproject.grpc.types.PlumResponseChallengeExit.Builder, com.github.iotexproject.grpc.types.PlumResponseChallengeExitOrBuilder> 
        getPlumResponseChallengeExitFieldBuilder() {
      if (plumResponseChallengeExitBuilder_ == null) {
        if (!(actionCase_ == 24)) {
          action_ = com.github.iotexproject.grpc.types.PlumResponseChallengeExit.getDefaultInstance();
        }
        plumResponseChallengeExitBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.iotexproject.grpc.types.PlumResponseChallengeExit, com.github.iotexproject.grpc.types.PlumResponseChallengeExit.Builder, com.github.iotexproject.grpc.types.PlumResponseChallengeExitOrBuilder>(
                (com.github.iotexproject.grpc.types.PlumResponseChallengeExit) action_,
                getParentForChildren(),
                isClean());
        action_ = null;
      }
      actionCase_ = 24;
      onChanged();
      return plumResponseChallengeExitBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.PlumFinalizeExit, com.github.iotexproject.grpc.types.PlumFinalizeExit.Builder, com.github.iotexproject.grpc.types.PlumFinalizeExitOrBuilder> plumFinalizeExitBuilder_;
    /**
     * <code>.iotextypes.PlumFinalizeExit plumFinalizeExit = 25;</code>
     * @return Whether the plumFinalizeExit field is set.
     */
    @java.lang.Override
    public boolean hasPlumFinalizeExit() {
      return actionCase_ == 25;
    }
    /**
     * <code>.iotextypes.PlumFinalizeExit plumFinalizeExit = 25;</code>
     * @return The plumFinalizeExit.
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.PlumFinalizeExit getPlumFinalizeExit() {
      if (plumFinalizeExitBuilder_ == null) {
        if (actionCase_ == 25) {
          return (com.github.iotexproject.grpc.types.PlumFinalizeExit) action_;
        }
        return com.github.iotexproject.grpc.types.PlumFinalizeExit.getDefaultInstance();
      } else {
        if (actionCase_ == 25) {
          return plumFinalizeExitBuilder_.getMessage();
        }
        return com.github.iotexproject.grpc.types.PlumFinalizeExit.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.PlumFinalizeExit plumFinalizeExit = 25;</code>
     */
    public Builder setPlumFinalizeExit(com.github.iotexproject.grpc.types.PlumFinalizeExit value) {
      if (plumFinalizeExitBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        action_ = value;
        onChanged();
      } else {
        plumFinalizeExitBuilder_.setMessage(value);
      }
      actionCase_ = 25;
      return this;
    }
    /**
     * <code>.iotextypes.PlumFinalizeExit plumFinalizeExit = 25;</code>
     */
    public Builder setPlumFinalizeExit(
        com.github.iotexproject.grpc.types.PlumFinalizeExit.Builder builderForValue) {
      if (plumFinalizeExitBuilder_ == null) {
        action_ = builderForValue.build();
        onChanged();
      } else {
        plumFinalizeExitBuilder_.setMessage(builderForValue.build());
      }
      actionCase_ = 25;
      return this;
    }
    /**
     * <code>.iotextypes.PlumFinalizeExit plumFinalizeExit = 25;</code>
     */
    public Builder mergePlumFinalizeExit(com.github.iotexproject.grpc.types.PlumFinalizeExit value) {
      if (plumFinalizeExitBuilder_ == null) {
        if (actionCase_ == 25 &&
            action_ != com.github.iotexproject.grpc.types.PlumFinalizeExit.getDefaultInstance()) {
          action_ = com.github.iotexproject.grpc.types.PlumFinalizeExit.newBuilder((com.github.iotexproject.grpc.types.PlumFinalizeExit) action_)
              .mergeFrom(value).buildPartial();
        } else {
          action_ = value;
        }
        onChanged();
      } else {
        if (actionCase_ == 25) {
          plumFinalizeExitBuilder_.mergeFrom(value);
        } else {
          plumFinalizeExitBuilder_.setMessage(value);
        }
      }
      actionCase_ = 25;
      return this;
    }
    /**
     * <code>.iotextypes.PlumFinalizeExit plumFinalizeExit = 25;</code>
     */
    public Builder clearPlumFinalizeExit() {
      if (plumFinalizeExitBuilder_ == null) {
        if (actionCase_ == 25) {
          actionCase_ = 0;
          action_ = null;
          onChanged();
        }
      } else {
        if (actionCase_ == 25) {
          actionCase_ = 0;
          action_ = null;
        }
        plumFinalizeExitBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iotextypes.PlumFinalizeExit plumFinalizeExit = 25;</code>
     */
    public com.github.iotexproject.grpc.types.PlumFinalizeExit.Builder getPlumFinalizeExitBuilder() {
      return getPlumFinalizeExitFieldBuilder().getBuilder();
    }
    /**
     * <code>.iotextypes.PlumFinalizeExit plumFinalizeExit = 25;</code>
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.PlumFinalizeExitOrBuilder getPlumFinalizeExitOrBuilder() {
      if ((actionCase_ == 25) && (plumFinalizeExitBuilder_ != null)) {
        return plumFinalizeExitBuilder_.getMessageOrBuilder();
      } else {
        if (actionCase_ == 25) {
          return (com.github.iotexproject.grpc.types.PlumFinalizeExit) action_;
        }
        return com.github.iotexproject.grpc.types.PlumFinalizeExit.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.PlumFinalizeExit plumFinalizeExit = 25;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.PlumFinalizeExit, com.github.iotexproject.grpc.types.PlumFinalizeExit.Builder, com.github.iotexproject.grpc.types.PlumFinalizeExitOrBuilder> 
        getPlumFinalizeExitFieldBuilder() {
      if (plumFinalizeExitBuilder_ == null) {
        if (!(actionCase_ == 25)) {
          action_ = com.github.iotexproject.grpc.types.PlumFinalizeExit.getDefaultInstance();
        }
        plumFinalizeExitBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.iotexproject.grpc.types.PlumFinalizeExit, com.github.iotexproject.grpc.types.PlumFinalizeExit.Builder, com.github.iotexproject.grpc.types.PlumFinalizeExitOrBuilder>(
                (com.github.iotexproject.grpc.types.PlumFinalizeExit) action_,
                getParentForChildren(),
                isClean());
        action_ = null;
      }
      actionCase_ = 25;
      onChanged();
      return plumFinalizeExitBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.PlumSettleDeposit, com.github.iotexproject.grpc.types.PlumSettleDeposit.Builder, com.github.iotexproject.grpc.types.PlumSettleDepositOrBuilder> plumSettleDepositBuilder_;
    /**
     * <code>.iotextypes.PlumSettleDeposit plumSettleDeposit = 26;</code>
     * @return Whether the plumSettleDeposit field is set.
     */
    @java.lang.Override
    public boolean hasPlumSettleDeposit() {
      return actionCase_ == 26;
    }
    /**
     * <code>.iotextypes.PlumSettleDeposit plumSettleDeposit = 26;</code>
     * @return The plumSettleDeposit.
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.PlumSettleDeposit getPlumSettleDeposit() {
      if (plumSettleDepositBuilder_ == null) {
        if (actionCase_ == 26) {
          return (com.github.iotexproject.grpc.types.PlumSettleDeposit) action_;
        }
        return com.github.iotexproject.grpc.types.PlumSettleDeposit.getDefaultInstance();
      } else {
        if (actionCase_ == 26) {
          return plumSettleDepositBuilder_.getMessage();
        }
        return com.github.iotexproject.grpc.types.PlumSettleDeposit.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.PlumSettleDeposit plumSettleDeposit = 26;</code>
     */
    public Builder setPlumSettleDeposit(com.github.iotexproject.grpc.types.PlumSettleDeposit value) {
      if (plumSettleDepositBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        action_ = value;
        onChanged();
      } else {
        plumSettleDepositBuilder_.setMessage(value);
      }
      actionCase_ = 26;
      return this;
    }
    /**
     * <code>.iotextypes.PlumSettleDeposit plumSettleDeposit = 26;</code>
     */
    public Builder setPlumSettleDeposit(
        com.github.iotexproject.grpc.types.PlumSettleDeposit.Builder builderForValue) {
      if (plumSettleDepositBuilder_ == null) {
        action_ = builderForValue.build();
        onChanged();
      } else {
        plumSettleDepositBuilder_.setMessage(builderForValue.build());
      }
      actionCase_ = 26;
      return this;
    }
    /**
     * <code>.iotextypes.PlumSettleDeposit plumSettleDeposit = 26;</code>
     */
    public Builder mergePlumSettleDeposit(com.github.iotexproject.grpc.types.PlumSettleDeposit value) {
      if (plumSettleDepositBuilder_ == null) {
        if (actionCase_ == 26 &&
            action_ != com.github.iotexproject.grpc.types.PlumSettleDeposit.getDefaultInstance()) {
          action_ = com.github.iotexproject.grpc.types.PlumSettleDeposit.newBuilder((com.github.iotexproject.grpc.types.PlumSettleDeposit) action_)
              .mergeFrom(value).buildPartial();
        } else {
          action_ = value;
        }
        onChanged();
      } else {
        if (actionCase_ == 26) {
          plumSettleDepositBuilder_.mergeFrom(value);
        } else {
          plumSettleDepositBuilder_.setMessage(value);
        }
      }
      actionCase_ = 26;
      return this;
    }
    /**
     * <code>.iotextypes.PlumSettleDeposit plumSettleDeposit = 26;</code>
     */
    public Builder clearPlumSettleDeposit() {
      if (plumSettleDepositBuilder_ == null) {
        if (actionCase_ == 26) {
          actionCase_ = 0;
          action_ = null;
          onChanged();
        }
      } else {
        if (actionCase_ == 26) {
          actionCase_ = 0;
          action_ = null;
        }
        plumSettleDepositBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iotextypes.PlumSettleDeposit plumSettleDeposit = 26;</code>
     */
    public com.github.iotexproject.grpc.types.PlumSettleDeposit.Builder getPlumSettleDepositBuilder() {
      return getPlumSettleDepositFieldBuilder().getBuilder();
    }
    /**
     * <code>.iotextypes.PlumSettleDeposit plumSettleDeposit = 26;</code>
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.PlumSettleDepositOrBuilder getPlumSettleDepositOrBuilder() {
      if ((actionCase_ == 26) && (plumSettleDepositBuilder_ != null)) {
        return plumSettleDepositBuilder_.getMessageOrBuilder();
      } else {
        if (actionCase_ == 26) {
          return (com.github.iotexproject.grpc.types.PlumSettleDeposit) action_;
        }
        return com.github.iotexproject.grpc.types.PlumSettleDeposit.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.PlumSettleDeposit plumSettleDeposit = 26;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.PlumSettleDeposit, com.github.iotexproject.grpc.types.PlumSettleDeposit.Builder, com.github.iotexproject.grpc.types.PlumSettleDepositOrBuilder> 
        getPlumSettleDepositFieldBuilder() {
      if (plumSettleDepositBuilder_ == null) {
        if (!(actionCase_ == 26)) {
          action_ = com.github.iotexproject.grpc.types.PlumSettleDeposit.getDefaultInstance();
        }
        plumSettleDepositBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.iotexproject.grpc.types.PlumSettleDeposit, com.github.iotexproject.grpc.types.PlumSettleDeposit.Builder, com.github.iotexproject.grpc.types.PlumSettleDepositOrBuilder>(
                (com.github.iotexproject.grpc.types.PlumSettleDeposit) action_,
                getParentForChildren(),
                isClean());
        action_ = null;
      }
      actionCase_ = 26;
      onChanged();
      return plumSettleDepositBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.PlumTransfer, com.github.iotexproject.grpc.types.PlumTransfer.Builder, com.github.iotexproject.grpc.types.PlumTransferOrBuilder> plumTransferBuilder_;
    /**
     * <code>.iotextypes.PlumTransfer plumTransfer = 27;</code>
     * @return Whether the plumTransfer field is set.
     */
    @java.lang.Override
    public boolean hasPlumTransfer() {
      return actionCase_ == 27;
    }
    /**
     * <code>.iotextypes.PlumTransfer plumTransfer = 27;</code>
     * @return The plumTransfer.
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.PlumTransfer getPlumTransfer() {
      if (plumTransferBuilder_ == null) {
        if (actionCase_ == 27) {
          return (com.github.iotexproject.grpc.types.PlumTransfer) action_;
        }
        return com.github.iotexproject.grpc.types.PlumTransfer.getDefaultInstance();
      } else {
        if (actionCase_ == 27) {
          return plumTransferBuilder_.getMessage();
        }
        return com.github.iotexproject.grpc.types.PlumTransfer.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.PlumTransfer plumTransfer = 27;</code>
     */
    public Builder setPlumTransfer(com.github.iotexproject.grpc.types.PlumTransfer value) {
      if (plumTransferBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        action_ = value;
        onChanged();
      } else {
        plumTransferBuilder_.setMessage(value);
      }
      actionCase_ = 27;
      return this;
    }
    /**
     * <code>.iotextypes.PlumTransfer plumTransfer = 27;</code>
     */
    public Builder setPlumTransfer(
        com.github.iotexproject.grpc.types.PlumTransfer.Builder builderForValue) {
      if (plumTransferBuilder_ == null) {
        action_ = builderForValue.build();
        onChanged();
      } else {
        plumTransferBuilder_.setMessage(builderForValue.build());
      }
      actionCase_ = 27;
      return this;
    }
    /**
     * <code>.iotextypes.PlumTransfer plumTransfer = 27;</code>
     */
    public Builder mergePlumTransfer(com.github.iotexproject.grpc.types.PlumTransfer value) {
      if (plumTransferBuilder_ == null) {
        if (actionCase_ == 27 &&
            action_ != com.github.iotexproject.grpc.types.PlumTransfer.getDefaultInstance()) {
          action_ = com.github.iotexproject.grpc.types.PlumTransfer.newBuilder((com.github.iotexproject.grpc.types.PlumTransfer) action_)
              .mergeFrom(value).buildPartial();
        } else {
          action_ = value;
        }
        onChanged();
      } else {
        if (actionCase_ == 27) {
          plumTransferBuilder_.mergeFrom(value);
        } else {
          plumTransferBuilder_.setMessage(value);
        }
      }
      actionCase_ = 27;
      return this;
    }
    /**
     * <code>.iotextypes.PlumTransfer plumTransfer = 27;</code>
     */
    public Builder clearPlumTransfer() {
      if (plumTransferBuilder_ == null) {
        if (actionCase_ == 27) {
          actionCase_ = 0;
          action_ = null;
          onChanged();
        }
      } else {
        if (actionCase_ == 27) {
          actionCase_ = 0;
          action_ = null;
        }
        plumTransferBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iotextypes.PlumTransfer plumTransfer = 27;</code>
     */
    public com.github.iotexproject.grpc.types.PlumTransfer.Builder getPlumTransferBuilder() {
      return getPlumTransferFieldBuilder().getBuilder();
    }
    /**
     * <code>.iotextypes.PlumTransfer plumTransfer = 27;</code>
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.PlumTransferOrBuilder getPlumTransferOrBuilder() {
      if ((actionCase_ == 27) && (plumTransferBuilder_ != null)) {
        return plumTransferBuilder_.getMessageOrBuilder();
      } else {
        if (actionCase_ == 27) {
          return (com.github.iotexproject.grpc.types.PlumTransfer) action_;
        }
        return com.github.iotexproject.grpc.types.PlumTransfer.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.PlumTransfer plumTransfer = 27;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.PlumTransfer, com.github.iotexproject.grpc.types.PlumTransfer.Builder, com.github.iotexproject.grpc.types.PlumTransferOrBuilder> 
        getPlumTransferFieldBuilder() {
      if (plumTransferBuilder_ == null) {
        if (!(actionCase_ == 27)) {
          action_ = com.github.iotexproject.grpc.types.PlumTransfer.getDefaultInstance();
        }
        plumTransferBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.iotexproject.grpc.types.PlumTransfer, com.github.iotexproject.grpc.types.PlumTransfer.Builder, com.github.iotexproject.grpc.types.PlumTransferOrBuilder>(
                (com.github.iotexproject.grpc.types.PlumTransfer) action_,
                getParentForChildren(),
                isClean());
        action_ = null;
      }
      actionCase_ = 27;
      onChanged();
      return plumTransferBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.DepositToRewardingFund, com.github.iotexproject.grpc.types.DepositToRewardingFund.Builder, com.github.iotexproject.grpc.types.DepositToRewardingFundOrBuilder> depositToRewardingFundBuilder_;
    /**
     * <pre>
     * Rewarding protocol actions
     * </pre>
     *
     * <code>.iotextypes.DepositToRewardingFund depositToRewardingFund = 30;</code>
     * @return Whether the depositToRewardingFund field is set.
     */
    @java.lang.Override
    public boolean hasDepositToRewardingFund() {
      return actionCase_ == 30;
    }
    /**
     * <pre>
     * Rewarding protocol actions
     * </pre>
     *
     * <code>.iotextypes.DepositToRewardingFund depositToRewardingFund = 30;</code>
     * @return The depositToRewardingFund.
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.DepositToRewardingFund getDepositToRewardingFund() {
      if (depositToRewardingFundBuilder_ == null) {
        if (actionCase_ == 30) {
          return (com.github.iotexproject.grpc.types.DepositToRewardingFund) action_;
        }
        return com.github.iotexproject.grpc.types.DepositToRewardingFund.getDefaultInstance();
      } else {
        if (actionCase_ == 30) {
          return depositToRewardingFundBuilder_.getMessage();
        }
        return com.github.iotexproject.grpc.types.DepositToRewardingFund.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Rewarding protocol actions
     * </pre>
     *
     * <code>.iotextypes.DepositToRewardingFund depositToRewardingFund = 30;</code>
     */
    public Builder setDepositToRewardingFund(com.github.iotexproject.grpc.types.DepositToRewardingFund value) {
      if (depositToRewardingFundBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        action_ = value;
        onChanged();
      } else {
        depositToRewardingFundBuilder_.setMessage(value);
      }
      actionCase_ = 30;
      return this;
    }
    /**
     * <pre>
     * Rewarding protocol actions
     * </pre>
     *
     * <code>.iotextypes.DepositToRewardingFund depositToRewardingFund = 30;</code>
     */
    public Builder setDepositToRewardingFund(
        com.github.iotexproject.grpc.types.DepositToRewardingFund.Builder builderForValue) {
      if (depositToRewardingFundBuilder_ == null) {
        action_ = builderForValue.build();
        onChanged();
      } else {
        depositToRewardingFundBuilder_.setMessage(builderForValue.build());
      }
      actionCase_ = 30;
      return this;
    }
    /**
     * <pre>
     * Rewarding protocol actions
     * </pre>
     *
     * <code>.iotextypes.DepositToRewardingFund depositToRewardingFund = 30;</code>
     */
    public Builder mergeDepositToRewardingFund(com.github.iotexproject.grpc.types.DepositToRewardingFund value) {
      if (depositToRewardingFundBuilder_ == null) {
        if (actionCase_ == 30 &&
            action_ != com.github.iotexproject.grpc.types.DepositToRewardingFund.getDefaultInstance()) {
          action_ = com.github.iotexproject.grpc.types.DepositToRewardingFund.newBuilder((com.github.iotexproject.grpc.types.DepositToRewardingFund) action_)
              .mergeFrom(value).buildPartial();
        } else {
          action_ = value;
        }
        onChanged();
      } else {
        if (actionCase_ == 30) {
          depositToRewardingFundBuilder_.mergeFrom(value);
        } else {
          depositToRewardingFundBuilder_.setMessage(value);
        }
      }
      actionCase_ = 30;
      return this;
    }
    /**
     * <pre>
     * Rewarding protocol actions
     * </pre>
     *
     * <code>.iotextypes.DepositToRewardingFund depositToRewardingFund = 30;</code>
     */
    public Builder clearDepositToRewardingFund() {
      if (depositToRewardingFundBuilder_ == null) {
        if (actionCase_ == 30) {
          actionCase_ = 0;
          action_ = null;
          onChanged();
        }
      } else {
        if (actionCase_ == 30) {
          actionCase_ = 0;
          action_ = null;
        }
        depositToRewardingFundBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Rewarding protocol actions
     * </pre>
     *
     * <code>.iotextypes.DepositToRewardingFund depositToRewardingFund = 30;</code>
     */
    public com.github.iotexproject.grpc.types.DepositToRewardingFund.Builder getDepositToRewardingFundBuilder() {
      return getDepositToRewardingFundFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Rewarding protocol actions
     * </pre>
     *
     * <code>.iotextypes.DepositToRewardingFund depositToRewardingFund = 30;</code>
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.DepositToRewardingFundOrBuilder getDepositToRewardingFundOrBuilder() {
      if ((actionCase_ == 30) && (depositToRewardingFundBuilder_ != null)) {
        return depositToRewardingFundBuilder_.getMessageOrBuilder();
      } else {
        if (actionCase_ == 30) {
          return (com.github.iotexproject.grpc.types.DepositToRewardingFund) action_;
        }
        return com.github.iotexproject.grpc.types.DepositToRewardingFund.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Rewarding protocol actions
     * </pre>
     *
     * <code>.iotextypes.DepositToRewardingFund depositToRewardingFund = 30;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.DepositToRewardingFund, com.github.iotexproject.grpc.types.DepositToRewardingFund.Builder, com.github.iotexproject.grpc.types.DepositToRewardingFundOrBuilder> 
        getDepositToRewardingFundFieldBuilder() {
      if (depositToRewardingFundBuilder_ == null) {
        if (!(actionCase_ == 30)) {
          action_ = com.github.iotexproject.grpc.types.DepositToRewardingFund.getDefaultInstance();
        }
        depositToRewardingFundBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.iotexproject.grpc.types.DepositToRewardingFund, com.github.iotexproject.grpc.types.DepositToRewardingFund.Builder, com.github.iotexproject.grpc.types.DepositToRewardingFundOrBuilder>(
                (com.github.iotexproject.grpc.types.DepositToRewardingFund) action_,
                getParentForChildren(),
                isClean());
        action_ = null;
      }
      actionCase_ = 30;
      onChanged();
      return depositToRewardingFundBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.ClaimFromRewardingFund, com.github.iotexproject.grpc.types.ClaimFromRewardingFund.Builder, com.github.iotexproject.grpc.types.ClaimFromRewardingFundOrBuilder> claimFromRewardingFundBuilder_;
    /**
     * <code>.iotextypes.ClaimFromRewardingFund claimFromRewardingFund = 31;</code>
     * @return Whether the claimFromRewardingFund field is set.
     */
    @java.lang.Override
    public boolean hasClaimFromRewardingFund() {
      return actionCase_ == 31;
    }
    /**
     * <code>.iotextypes.ClaimFromRewardingFund claimFromRewardingFund = 31;</code>
     * @return The claimFromRewardingFund.
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.ClaimFromRewardingFund getClaimFromRewardingFund() {
      if (claimFromRewardingFundBuilder_ == null) {
        if (actionCase_ == 31) {
          return (com.github.iotexproject.grpc.types.ClaimFromRewardingFund) action_;
        }
        return com.github.iotexproject.grpc.types.ClaimFromRewardingFund.getDefaultInstance();
      } else {
        if (actionCase_ == 31) {
          return claimFromRewardingFundBuilder_.getMessage();
        }
        return com.github.iotexproject.grpc.types.ClaimFromRewardingFund.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.ClaimFromRewardingFund claimFromRewardingFund = 31;</code>
     */
    public Builder setClaimFromRewardingFund(com.github.iotexproject.grpc.types.ClaimFromRewardingFund value) {
      if (claimFromRewardingFundBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        action_ = value;
        onChanged();
      } else {
        claimFromRewardingFundBuilder_.setMessage(value);
      }
      actionCase_ = 31;
      return this;
    }
    /**
     * <code>.iotextypes.ClaimFromRewardingFund claimFromRewardingFund = 31;</code>
     */
    public Builder setClaimFromRewardingFund(
        com.github.iotexproject.grpc.types.ClaimFromRewardingFund.Builder builderForValue) {
      if (claimFromRewardingFundBuilder_ == null) {
        action_ = builderForValue.build();
        onChanged();
      } else {
        claimFromRewardingFundBuilder_.setMessage(builderForValue.build());
      }
      actionCase_ = 31;
      return this;
    }
    /**
     * <code>.iotextypes.ClaimFromRewardingFund claimFromRewardingFund = 31;</code>
     */
    public Builder mergeClaimFromRewardingFund(com.github.iotexproject.grpc.types.ClaimFromRewardingFund value) {
      if (claimFromRewardingFundBuilder_ == null) {
        if (actionCase_ == 31 &&
            action_ != com.github.iotexproject.grpc.types.ClaimFromRewardingFund.getDefaultInstance()) {
          action_ = com.github.iotexproject.grpc.types.ClaimFromRewardingFund.newBuilder((com.github.iotexproject.grpc.types.ClaimFromRewardingFund) action_)
              .mergeFrom(value).buildPartial();
        } else {
          action_ = value;
        }
        onChanged();
      } else {
        if (actionCase_ == 31) {
          claimFromRewardingFundBuilder_.mergeFrom(value);
        } else {
          claimFromRewardingFundBuilder_.setMessage(value);
        }
      }
      actionCase_ = 31;
      return this;
    }
    /**
     * <code>.iotextypes.ClaimFromRewardingFund claimFromRewardingFund = 31;</code>
     */
    public Builder clearClaimFromRewardingFund() {
      if (claimFromRewardingFundBuilder_ == null) {
        if (actionCase_ == 31) {
          actionCase_ = 0;
          action_ = null;
          onChanged();
        }
      } else {
        if (actionCase_ == 31) {
          actionCase_ = 0;
          action_ = null;
        }
        claimFromRewardingFundBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iotextypes.ClaimFromRewardingFund claimFromRewardingFund = 31;</code>
     */
    public com.github.iotexproject.grpc.types.ClaimFromRewardingFund.Builder getClaimFromRewardingFundBuilder() {
      return getClaimFromRewardingFundFieldBuilder().getBuilder();
    }
    /**
     * <code>.iotextypes.ClaimFromRewardingFund claimFromRewardingFund = 31;</code>
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.ClaimFromRewardingFundOrBuilder getClaimFromRewardingFundOrBuilder() {
      if ((actionCase_ == 31) && (claimFromRewardingFundBuilder_ != null)) {
        return claimFromRewardingFundBuilder_.getMessageOrBuilder();
      } else {
        if (actionCase_ == 31) {
          return (com.github.iotexproject.grpc.types.ClaimFromRewardingFund) action_;
        }
        return com.github.iotexproject.grpc.types.ClaimFromRewardingFund.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.ClaimFromRewardingFund claimFromRewardingFund = 31;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.ClaimFromRewardingFund, com.github.iotexproject.grpc.types.ClaimFromRewardingFund.Builder, com.github.iotexproject.grpc.types.ClaimFromRewardingFundOrBuilder> 
        getClaimFromRewardingFundFieldBuilder() {
      if (claimFromRewardingFundBuilder_ == null) {
        if (!(actionCase_ == 31)) {
          action_ = com.github.iotexproject.grpc.types.ClaimFromRewardingFund.getDefaultInstance();
        }
        claimFromRewardingFundBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.iotexproject.grpc.types.ClaimFromRewardingFund, com.github.iotexproject.grpc.types.ClaimFromRewardingFund.Builder, com.github.iotexproject.grpc.types.ClaimFromRewardingFundOrBuilder>(
                (com.github.iotexproject.grpc.types.ClaimFromRewardingFund) action_,
                getParentForChildren(),
                isClean());
        action_ = null;
      }
      actionCase_ = 31;
      onChanged();
      return claimFromRewardingFundBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.GrantReward, com.github.iotexproject.grpc.types.GrantReward.Builder, com.github.iotexproject.grpc.types.GrantRewardOrBuilder> grantRewardBuilder_;
    /**
     * <code>.iotextypes.GrantReward grantReward = 32;</code>
     * @return Whether the grantReward field is set.
     */
    @java.lang.Override
    public boolean hasGrantReward() {
      return actionCase_ == 32;
    }
    /**
     * <code>.iotextypes.GrantReward grantReward = 32;</code>
     * @return The grantReward.
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.GrantReward getGrantReward() {
      if (grantRewardBuilder_ == null) {
        if (actionCase_ == 32) {
          return (com.github.iotexproject.grpc.types.GrantReward) action_;
        }
        return com.github.iotexproject.grpc.types.GrantReward.getDefaultInstance();
      } else {
        if (actionCase_ == 32) {
          return grantRewardBuilder_.getMessage();
        }
        return com.github.iotexproject.grpc.types.GrantReward.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.GrantReward grantReward = 32;</code>
     */
    public Builder setGrantReward(com.github.iotexproject.grpc.types.GrantReward value) {
      if (grantRewardBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        action_ = value;
        onChanged();
      } else {
        grantRewardBuilder_.setMessage(value);
      }
      actionCase_ = 32;
      return this;
    }
    /**
     * <code>.iotextypes.GrantReward grantReward = 32;</code>
     */
    public Builder setGrantReward(
        com.github.iotexproject.grpc.types.GrantReward.Builder builderForValue) {
      if (grantRewardBuilder_ == null) {
        action_ = builderForValue.build();
        onChanged();
      } else {
        grantRewardBuilder_.setMessage(builderForValue.build());
      }
      actionCase_ = 32;
      return this;
    }
    /**
     * <code>.iotextypes.GrantReward grantReward = 32;</code>
     */
    public Builder mergeGrantReward(com.github.iotexproject.grpc.types.GrantReward value) {
      if (grantRewardBuilder_ == null) {
        if (actionCase_ == 32 &&
            action_ != com.github.iotexproject.grpc.types.GrantReward.getDefaultInstance()) {
          action_ = com.github.iotexproject.grpc.types.GrantReward.newBuilder((com.github.iotexproject.grpc.types.GrantReward) action_)
              .mergeFrom(value).buildPartial();
        } else {
          action_ = value;
        }
        onChanged();
      } else {
        if (actionCase_ == 32) {
          grantRewardBuilder_.mergeFrom(value);
        } else {
          grantRewardBuilder_.setMessage(value);
        }
      }
      actionCase_ = 32;
      return this;
    }
    /**
     * <code>.iotextypes.GrantReward grantReward = 32;</code>
     */
    public Builder clearGrantReward() {
      if (grantRewardBuilder_ == null) {
        if (actionCase_ == 32) {
          actionCase_ = 0;
          action_ = null;
          onChanged();
        }
      } else {
        if (actionCase_ == 32) {
          actionCase_ = 0;
          action_ = null;
        }
        grantRewardBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iotextypes.GrantReward grantReward = 32;</code>
     */
    public com.github.iotexproject.grpc.types.GrantReward.Builder getGrantRewardBuilder() {
      return getGrantRewardFieldBuilder().getBuilder();
    }
    /**
     * <code>.iotextypes.GrantReward grantReward = 32;</code>
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.GrantRewardOrBuilder getGrantRewardOrBuilder() {
      if ((actionCase_ == 32) && (grantRewardBuilder_ != null)) {
        return grantRewardBuilder_.getMessageOrBuilder();
      } else {
        if (actionCase_ == 32) {
          return (com.github.iotexproject.grpc.types.GrantReward) action_;
        }
        return com.github.iotexproject.grpc.types.GrantReward.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.GrantReward grantReward = 32;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.GrantReward, com.github.iotexproject.grpc.types.GrantReward.Builder, com.github.iotexproject.grpc.types.GrantRewardOrBuilder> 
        getGrantRewardFieldBuilder() {
      if (grantRewardBuilder_ == null) {
        if (!(actionCase_ == 32)) {
          action_ = com.github.iotexproject.grpc.types.GrantReward.getDefaultInstance();
        }
        grantRewardBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.iotexproject.grpc.types.GrantReward, com.github.iotexproject.grpc.types.GrantReward.Builder, com.github.iotexproject.grpc.types.GrantRewardOrBuilder>(
                (com.github.iotexproject.grpc.types.GrantReward) action_,
                getParentForChildren(),
                isClean());
        action_ = null;
      }
      actionCase_ = 32;
      onChanged();
      return grantRewardBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.StakeCreate, com.github.iotexproject.grpc.types.StakeCreate.Builder, com.github.iotexproject.grpc.types.StakeCreateOrBuilder> stakeCreateBuilder_;
    /**
     * <pre>
     * Native staking
     * </pre>
     *
     * <code>.iotextypes.StakeCreate stakeCreate = 40;</code>
     * @return Whether the stakeCreate field is set.
     */
    @java.lang.Override
    public boolean hasStakeCreate() {
      return actionCase_ == 40;
    }
    /**
     * <pre>
     * Native staking
     * </pre>
     *
     * <code>.iotextypes.StakeCreate stakeCreate = 40;</code>
     * @return The stakeCreate.
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.StakeCreate getStakeCreate() {
      if (stakeCreateBuilder_ == null) {
        if (actionCase_ == 40) {
          return (com.github.iotexproject.grpc.types.StakeCreate) action_;
        }
        return com.github.iotexproject.grpc.types.StakeCreate.getDefaultInstance();
      } else {
        if (actionCase_ == 40) {
          return stakeCreateBuilder_.getMessage();
        }
        return com.github.iotexproject.grpc.types.StakeCreate.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Native staking
     * </pre>
     *
     * <code>.iotextypes.StakeCreate stakeCreate = 40;</code>
     */
    public Builder setStakeCreate(com.github.iotexproject.grpc.types.StakeCreate value) {
      if (stakeCreateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        action_ = value;
        onChanged();
      } else {
        stakeCreateBuilder_.setMessage(value);
      }
      actionCase_ = 40;
      return this;
    }
    /**
     * <pre>
     * Native staking
     * </pre>
     *
     * <code>.iotextypes.StakeCreate stakeCreate = 40;</code>
     */
    public Builder setStakeCreate(
        com.github.iotexproject.grpc.types.StakeCreate.Builder builderForValue) {
      if (stakeCreateBuilder_ == null) {
        action_ = builderForValue.build();
        onChanged();
      } else {
        stakeCreateBuilder_.setMessage(builderForValue.build());
      }
      actionCase_ = 40;
      return this;
    }
    /**
     * <pre>
     * Native staking
     * </pre>
     *
     * <code>.iotextypes.StakeCreate stakeCreate = 40;</code>
     */
    public Builder mergeStakeCreate(com.github.iotexproject.grpc.types.StakeCreate value) {
      if (stakeCreateBuilder_ == null) {
        if (actionCase_ == 40 &&
            action_ != com.github.iotexproject.grpc.types.StakeCreate.getDefaultInstance()) {
          action_ = com.github.iotexproject.grpc.types.StakeCreate.newBuilder((com.github.iotexproject.grpc.types.StakeCreate) action_)
              .mergeFrom(value).buildPartial();
        } else {
          action_ = value;
        }
        onChanged();
      } else {
        if (actionCase_ == 40) {
          stakeCreateBuilder_.mergeFrom(value);
        } else {
          stakeCreateBuilder_.setMessage(value);
        }
      }
      actionCase_ = 40;
      return this;
    }
    /**
     * <pre>
     * Native staking
     * </pre>
     *
     * <code>.iotextypes.StakeCreate stakeCreate = 40;</code>
     */
    public Builder clearStakeCreate() {
      if (stakeCreateBuilder_ == null) {
        if (actionCase_ == 40) {
          actionCase_ = 0;
          action_ = null;
          onChanged();
        }
      } else {
        if (actionCase_ == 40) {
          actionCase_ = 0;
          action_ = null;
        }
        stakeCreateBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Native staking
     * </pre>
     *
     * <code>.iotextypes.StakeCreate stakeCreate = 40;</code>
     */
    public com.github.iotexproject.grpc.types.StakeCreate.Builder getStakeCreateBuilder() {
      return getStakeCreateFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Native staking
     * </pre>
     *
     * <code>.iotextypes.StakeCreate stakeCreate = 40;</code>
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.StakeCreateOrBuilder getStakeCreateOrBuilder() {
      if ((actionCase_ == 40) && (stakeCreateBuilder_ != null)) {
        return stakeCreateBuilder_.getMessageOrBuilder();
      } else {
        if (actionCase_ == 40) {
          return (com.github.iotexproject.grpc.types.StakeCreate) action_;
        }
        return com.github.iotexproject.grpc.types.StakeCreate.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Native staking
     * </pre>
     *
     * <code>.iotextypes.StakeCreate stakeCreate = 40;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.StakeCreate, com.github.iotexproject.grpc.types.StakeCreate.Builder, com.github.iotexproject.grpc.types.StakeCreateOrBuilder> 
        getStakeCreateFieldBuilder() {
      if (stakeCreateBuilder_ == null) {
        if (!(actionCase_ == 40)) {
          action_ = com.github.iotexproject.grpc.types.StakeCreate.getDefaultInstance();
        }
        stakeCreateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.iotexproject.grpc.types.StakeCreate, com.github.iotexproject.grpc.types.StakeCreate.Builder, com.github.iotexproject.grpc.types.StakeCreateOrBuilder>(
                (com.github.iotexproject.grpc.types.StakeCreate) action_,
                getParentForChildren(),
                isClean());
        action_ = null;
      }
      actionCase_ = 40;
      onChanged();
      return stakeCreateBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.StakeReclaim, com.github.iotexproject.grpc.types.StakeReclaim.Builder, com.github.iotexproject.grpc.types.StakeReclaimOrBuilder> stakeUnstakeBuilder_;
    /**
     * <code>.iotextypes.StakeReclaim stakeUnstake = 41;</code>
     * @return Whether the stakeUnstake field is set.
     */
    @java.lang.Override
    public boolean hasStakeUnstake() {
      return actionCase_ == 41;
    }
    /**
     * <code>.iotextypes.StakeReclaim stakeUnstake = 41;</code>
     * @return The stakeUnstake.
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.StakeReclaim getStakeUnstake() {
      if (stakeUnstakeBuilder_ == null) {
        if (actionCase_ == 41) {
          return (com.github.iotexproject.grpc.types.StakeReclaim) action_;
        }
        return com.github.iotexproject.grpc.types.StakeReclaim.getDefaultInstance();
      } else {
        if (actionCase_ == 41) {
          return stakeUnstakeBuilder_.getMessage();
        }
        return com.github.iotexproject.grpc.types.StakeReclaim.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.StakeReclaim stakeUnstake = 41;</code>
     */
    public Builder setStakeUnstake(com.github.iotexproject.grpc.types.StakeReclaim value) {
      if (stakeUnstakeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        action_ = value;
        onChanged();
      } else {
        stakeUnstakeBuilder_.setMessage(value);
      }
      actionCase_ = 41;
      return this;
    }
    /**
     * <code>.iotextypes.StakeReclaim stakeUnstake = 41;</code>
     */
    public Builder setStakeUnstake(
        com.github.iotexproject.grpc.types.StakeReclaim.Builder builderForValue) {
      if (stakeUnstakeBuilder_ == null) {
        action_ = builderForValue.build();
        onChanged();
      } else {
        stakeUnstakeBuilder_.setMessage(builderForValue.build());
      }
      actionCase_ = 41;
      return this;
    }
    /**
     * <code>.iotextypes.StakeReclaim stakeUnstake = 41;</code>
     */
    public Builder mergeStakeUnstake(com.github.iotexproject.grpc.types.StakeReclaim value) {
      if (stakeUnstakeBuilder_ == null) {
        if (actionCase_ == 41 &&
            action_ != com.github.iotexproject.grpc.types.StakeReclaim.getDefaultInstance()) {
          action_ = com.github.iotexproject.grpc.types.StakeReclaim.newBuilder((com.github.iotexproject.grpc.types.StakeReclaim) action_)
              .mergeFrom(value).buildPartial();
        } else {
          action_ = value;
        }
        onChanged();
      } else {
        if (actionCase_ == 41) {
          stakeUnstakeBuilder_.mergeFrom(value);
        } else {
          stakeUnstakeBuilder_.setMessage(value);
        }
      }
      actionCase_ = 41;
      return this;
    }
    /**
     * <code>.iotextypes.StakeReclaim stakeUnstake = 41;</code>
     */
    public Builder clearStakeUnstake() {
      if (stakeUnstakeBuilder_ == null) {
        if (actionCase_ == 41) {
          actionCase_ = 0;
          action_ = null;
          onChanged();
        }
      } else {
        if (actionCase_ == 41) {
          actionCase_ = 0;
          action_ = null;
        }
        stakeUnstakeBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iotextypes.StakeReclaim stakeUnstake = 41;</code>
     */
    public com.github.iotexproject.grpc.types.StakeReclaim.Builder getStakeUnstakeBuilder() {
      return getStakeUnstakeFieldBuilder().getBuilder();
    }
    /**
     * <code>.iotextypes.StakeReclaim stakeUnstake = 41;</code>
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.StakeReclaimOrBuilder getStakeUnstakeOrBuilder() {
      if ((actionCase_ == 41) && (stakeUnstakeBuilder_ != null)) {
        return stakeUnstakeBuilder_.getMessageOrBuilder();
      } else {
        if (actionCase_ == 41) {
          return (com.github.iotexproject.grpc.types.StakeReclaim) action_;
        }
        return com.github.iotexproject.grpc.types.StakeReclaim.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.StakeReclaim stakeUnstake = 41;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.StakeReclaim, com.github.iotexproject.grpc.types.StakeReclaim.Builder, com.github.iotexproject.grpc.types.StakeReclaimOrBuilder> 
        getStakeUnstakeFieldBuilder() {
      if (stakeUnstakeBuilder_ == null) {
        if (!(actionCase_ == 41)) {
          action_ = com.github.iotexproject.grpc.types.StakeReclaim.getDefaultInstance();
        }
        stakeUnstakeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.iotexproject.grpc.types.StakeReclaim, com.github.iotexproject.grpc.types.StakeReclaim.Builder, com.github.iotexproject.grpc.types.StakeReclaimOrBuilder>(
                (com.github.iotexproject.grpc.types.StakeReclaim) action_,
                getParentForChildren(),
                isClean());
        action_ = null;
      }
      actionCase_ = 41;
      onChanged();
      return stakeUnstakeBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.StakeReclaim, com.github.iotexproject.grpc.types.StakeReclaim.Builder, com.github.iotexproject.grpc.types.StakeReclaimOrBuilder> stakeWithdrawBuilder_;
    /**
     * <code>.iotextypes.StakeReclaim stakeWithdraw = 42;</code>
     * @return Whether the stakeWithdraw field is set.
     */
    @java.lang.Override
    public boolean hasStakeWithdraw() {
      return actionCase_ == 42;
    }
    /**
     * <code>.iotextypes.StakeReclaim stakeWithdraw = 42;</code>
     * @return The stakeWithdraw.
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.StakeReclaim getStakeWithdraw() {
      if (stakeWithdrawBuilder_ == null) {
        if (actionCase_ == 42) {
          return (com.github.iotexproject.grpc.types.StakeReclaim) action_;
        }
        return com.github.iotexproject.grpc.types.StakeReclaim.getDefaultInstance();
      } else {
        if (actionCase_ == 42) {
          return stakeWithdrawBuilder_.getMessage();
        }
        return com.github.iotexproject.grpc.types.StakeReclaim.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.StakeReclaim stakeWithdraw = 42;</code>
     */
    public Builder setStakeWithdraw(com.github.iotexproject.grpc.types.StakeReclaim value) {
      if (stakeWithdrawBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        action_ = value;
        onChanged();
      } else {
        stakeWithdrawBuilder_.setMessage(value);
      }
      actionCase_ = 42;
      return this;
    }
    /**
     * <code>.iotextypes.StakeReclaim stakeWithdraw = 42;</code>
     */
    public Builder setStakeWithdraw(
        com.github.iotexproject.grpc.types.StakeReclaim.Builder builderForValue) {
      if (stakeWithdrawBuilder_ == null) {
        action_ = builderForValue.build();
        onChanged();
      } else {
        stakeWithdrawBuilder_.setMessage(builderForValue.build());
      }
      actionCase_ = 42;
      return this;
    }
    /**
     * <code>.iotextypes.StakeReclaim stakeWithdraw = 42;</code>
     */
    public Builder mergeStakeWithdraw(com.github.iotexproject.grpc.types.StakeReclaim value) {
      if (stakeWithdrawBuilder_ == null) {
        if (actionCase_ == 42 &&
            action_ != com.github.iotexproject.grpc.types.StakeReclaim.getDefaultInstance()) {
          action_ = com.github.iotexproject.grpc.types.StakeReclaim.newBuilder((com.github.iotexproject.grpc.types.StakeReclaim) action_)
              .mergeFrom(value).buildPartial();
        } else {
          action_ = value;
        }
        onChanged();
      } else {
        if (actionCase_ == 42) {
          stakeWithdrawBuilder_.mergeFrom(value);
        } else {
          stakeWithdrawBuilder_.setMessage(value);
        }
      }
      actionCase_ = 42;
      return this;
    }
    /**
     * <code>.iotextypes.StakeReclaim stakeWithdraw = 42;</code>
     */
    public Builder clearStakeWithdraw() {
      if (stakeWithdrawBuilder_ == null) {
        if (actionCase_ == 42) {
          actionCase_ = 0;
          action_ = null;
          onChanged();
        }
      } else {
        if (actionCase_ == 42) {
          actionCase_ = 0;
          action_ = null;
        }
        stakeWithdrawBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iotextypes.StakeReclaim stakeWithdraw = 42;</code>
     */
    public com.github.iotexproject.grpc.types.StakeReclaim.Builder getStakeWithdrawBuilder() {
      return getStakeWithdrawFieldBuilder().getBuilder();
    }
    /**
     * <code>.iotextypes.StakeReclaim stakeWithdraw = 42;</code>
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.StakeReclaimOrBuilder getStakeWithdrawOrBuilder() {
      if ((actionCase_ == 42) && (stakeWithdrawBuilder_ != null)) {
        return stakeWithdrawBuilder_.getMessageOrBuilder();
      } else {
        if (actionCase_ == 42) {
          return (com.github.iotexproject.grpc.types.StakeReclaim) action_;
        }
        return com.github.iotexproject.grpc.types.StakeReclaim.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.StakeReclaim stakeWithdraw = 42;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.StakeReclaim, com.github.iotexproject.grpc.types.StakeReclaim.Builder, com.github.iotexproject.grpc.types.StakeReclaimOrBuilder> 
        getStakeWithdrawFieldBuilder() {
      if (stakeWithdrawBuilder_ == null) {
        if (!(actionCase_ == 42)) {
          action_ = com.github.iotexproject.grpc.types.StakeReclaim.getDefaultInstance();
        }
        stakeWithdrawBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.iotexproject.grpc.types.StakeReclaim, com.github.iotexproject.grpc.types.StakeReclaim.Builder, com.github.iotexproject.grpc.types.StakeReclaimOrBuilder>(
                (com.github.iotexproject.grpc.types.StakeReclaim) action_,
                getParentForChildren(),
                isClean());
        action_ = null;
      }
      actionCase_ = 42;
      onChanged();
      return stakeWithdrawBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.StakeAddDeposit, com.github.iotexproject.grpc.types.StakeAddDeposit.Builder, com.github.iotexproject.grpc.types.StakeAddDepositOrBuilder> stakeAddDepositBuilder_;
    /**
     * <code>.iotextypes.StakeAddDeposit stakeAddDeposit = 43;</code>
     * @return Whether the stakeAddDeposit field is set.
     */
    @java.lang.Override
    public boolean hasStakeAddDeposit() {
      return actionCase_ == 43;
    }
    /**
     * <code>.iotextypes.StakeAddDeposit stakeAddDeposit = 43;</code>
     * @return The stakeAddDeposit.
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.StakeAddDeposit getStakeAddDeposit() {
      if (stakeAddDepositBuilder_ == null) {
        if (actionCase_ == 43) {
          return (com.github.iotexproject.grpc.types.StakeAddDeposit) action_;
        }
        return com.github.iotexproject.grpc.types.StakeAddDeposit.getDefaultInstance();
      } else {
        if (actionCase_ == 43) {
          return stakeAddDepositBuilder_.getMessage();
        }
        return com.github.iotexproject.grpc.types.StakeAddDeposit.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.StakeAddDeposit stakeAddDeposit = 43;</code>
     */
    public Builder setStakeAddDeposit(com.github.iotexproject.grpc.types.StakeAddDeposit value) {
      if (stakeAddDepositBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        action_ = value;
        onChanged();
      } else {
        stakeAddDepositBuilder_.setMessage(value);
      }
      actionCase_ = 43;
      return this;
    }
    /**
     * <code>.iotextypes.StakeAddDeposit stakeAddDeposit = 43;</code>
     */
    public Builder setStakeAddDeposit(
        com.github.iotexproject.grpc.types.StakeAddDeposit.Builder builderForValue) {
      if (stakeAddDepositBuilder_ == null) {
        action_ = builderForValue.build();
        onChanged();
      } else {
        stakeAddDepositBuilder_.setMessage(builderForValue.build());
      }
      actionCase_ = 43;
      return this;
    }
    /**
     * <code>.iotextypes.StakeAddDeposit stakeAddDeposit = 43;</code>
     */
    public Builder mergeStakeAddDeposit(com.github.iotexproject.grpc.types.StakeAddDeposit value) {
      if (stakeAddDepositBuilder_ == null) {
        if (actionCase_ == 43 &&
            action_ != com.github.iotexproject.grpc.types.StakeAddDeposit.getDefaultInstance()) {
          action_ = com.github.iotexproject.grpc.types.StakeAddDeposit.newBuilder((com.github.iotexproject.grpc.types.StakeAddDeposit) action_)
              .mergeFrom(value).buildPartial();
        } else {
          action_ = value;
        }
        onChanged();
      } else {
        if (actionCase_ == 43) {
          stakeAddDepositBuilder_.mergeFrom(value);
        } else {
          stakeAddDepositBuilder_.setMessage(value);
        }
      }
      actionCase_ = 43;
      return this;
    }
    /**
     * <code>.iotextypes.StakeAddDeposit stakeAddDeposit = 43;</code>
     */
    public Builder clearStakeAddDeposit() {
      if (stakeAddDepositBuilder_ == null) {
        if (actionCase_ == 43) {
          actionCase_ = 0;
          action_ = null;
          onChanged();
        }
      } else {
        if (actionCase_ == 43) {
          actionCase_ = 0;
          action_ = null;
        }
        stakeAddDepositBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iotextypes.StakeAddDeposit stakeAddDeposit = 43;</code>
     */
    public com.github.iotexproject.grpc.types.StakeAddDeposit.Builder getStakeAddDepositBuilder() {
      return getStakeAddDepositFieldBuilder().getBuilder();
    }
    /**
     * <code>.iotextypes.StakeAddDeposit stakeAddDeposit = 43;</code>
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.StakeAddDepositOrBuilder getStakeAddDepositOrBuilder() {
      if ((actionCase_ == 43) && (stakeAddDepositBuilder_ != null)) {
        return stakeAddDepositBuilder_.getMessageOrBuilder();
      } else {
        if (actionCase_ == 43) {
          return (com.github.iotexproject.grpc.types.StakeAddDeposit) action_;
        }
        return com.github.iotexproject.grpc.types.StakeAddDeposit.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.StakeAddDeposit stakeAddDeposit = 43;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.StakeAddDeposit, com.github.iotexproject.grpc.types.StakeAddDeposit.Builder, com.github.iotexproject.grpc.types.StakeAddDepositOrBuilder> 
        getStakeAddDepositFieldBuilder() {
      if (stakeAddDepositBuilder_ == null) {
        if (!(actionCase_ == 43)) {
          action_ = com.github.iotexproject.grpc.types.StakeAddDeposit.getDefaultInstance();
        }
        stakeAddDepositBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.iotexproject.grpc.types.StakeAddDeposit, com.github.iotexproject.grpc.types.StakeAddDeposit.Builder, com.github.iotexproject.grpc.types.StakeAddDepositOrBuilder>(
                (com.github.iotexproject.grpc.types.StakeAddDeposit) action_,
                getParentForChildren(),
                isClean());
        action_ = null;
      }
      actionCase_ = 43;
      onChanged();
      return stakeAddDepositBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.StakeRestake, com.github.iotexproject.grpc.types.StakeRestake.Builder, com.github.iotexproject.grpc.types.StakeRestakeOrBuilder> stakeRestakeBuilder_;
    /**
     * <code>.iotextypes.StakeRestake stakeRestake = 44;</code>
     * @return Whether the stakeRestake field is set.
     */
    @java.lang.Override
    public boolean hasStakeRestake() {
      return actionCase_ == 44;
    }
    /**
     * <code>.iotextypes.StakeRestake stakeRestake = 44;</code>
     * @return The stakeRestake.
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.StakeRestake getStakeRestake() {
      if (stakeRestakeBuilder_ == null) {
        if (actionCase_ == 44) {
          return (com.github.iotexproject.grpc.types.StakeRestake) action_;
        }
        return com.github.iotexproject.grpc.types.StakeRestake.getDefaultInstance();
      } else {
        if (actionCase_ == 44) {
          return stakeRestakeBuilder_.getMessage();
        }
        return com.github.iotexproject.grpc.types.StakeRestake.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.StakeRestake stakeRestake = 44;</code>
     */
    public Builder setStakeRestake(com.github.iotexproject.grpc.types.StakeRestake value) {
      if (stakeRestakeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        action_ = value;
        onChanged();
      } else {
        stakeRestakeBuilder_.setMessage(value);
      }
      actionCase_ = 44;
      return this;
    }
    /**
     * <code>.iotextypes.StakeRestake stakeRestake = 44;</code>
     */
    public Builder setStakeRestake(
        com.github.iotexproject.grpc.types.StakeRestake.Builder builderForValue) {
      if (stakeRestakeBuilder_ == null) {
        action_ = builderForValue.build();
        onChanged();
      } else {
        stakeRestakeBuilder_.setMessage(builderForValue.build());
      }
      actionCase_ = 44;
      return this;
    }
    /**
     * <code>.iotextypes.StakeRestake stakeRestake = 44;</code>
     */
    public Builder mergeStakeRestake(com.github.iotexproject.grpc.types.StakeRestake value) {
      if (stakeRestakeBuilder_ == null) {
        if (actionCase_ == 44 &&
            action_ != com.github.iotexproject.grpc.types.StakeRestake.getDefaultInstance()) {
          action_ = com.github.iotexproject.grpc.types.StakeRestake.newBuilder((com.github.iotexproject.grpc.types.StakeRestake) action_)
              .mergeFrom(value).buildPartial();
        } else {
          action_ = value;
        }
        onChanged();
      } else {
        if (actionCase_ == 44) {
          stakeRestakeBuilder_.mergeFrom(value);
        } else {
          stakeRestakeBuilder_.setMessage(value);
        }
      }
      actionCase_ = 44;
      return this;
    }
    /**
     * <code>.iotextypes.StakeRestake stakeRestake = 44;</code>
     */
    public Builder clearStakeRestake() {
      if (stakeRestakeBuilder_ == null) {
        if (actionCase_ == 44) {
          actionCase_ = 0;
          action_ = null;
          onChanged();
        }
      } else {
        if (actionCase_ == 44) {
          actionCase_ = 0;
          action_ = null;
        }
        stakeRestakeBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iotextypes.StakeRestake stakeRestake = 44;</code>
     */
    public com.github.iotexproject.grpc.types.StakeRestake.Builder getStakeRestakeBuilder() {
      return getStakeRestakeFieldBuilder().getBuilder();
    }
    /**
     * <code>.iotextypes.StakeRestake stakeRestake = 44;</code>
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.StakeRestakeOrBuilder getStakeRestakeOrBuilder() {
      if ((actionCase_ == 44) && (stakeRestakeBuilder_ != null)) {
        return stakeRestakeBuilder_.getMessageOrBuilder();
      } else {
        if (actionCase_ == 44) {
          return (com.github.iotexproject.grpc.types.StakeRestake) action_;
        }
        return com.github.iotexproject.grpc.types.StakeRestake.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.StakeRestake stakeRestake = 44;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.StakeRestake, com.github.iotexproject.grpc.types.StakeRestake.Builder, com.github.iotexproject.grpc.types.StakeRestakeOrBuilder> 
        getStakeRestakeFieldBuilder() {
      if (stakeRestakeBuilder_ == null) {
        if (!(actionCase_ == 44)) {
          action_ = com.github.iotexproject.grpc.types.StakeRestake.getDefaultInstance();
        }
        stakeRestakeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.iotexproject.grpc.types.StakeRestake, com.github.iotexproject.grpc.types.StakeRestake.Builder, com.github.iotexproject.grpc.types.StakeRestakeOrBuilder>(
                (com.github.iotexproject.grpc.types.StakeRestake) action_,
                getParentForChildren(),
                isClean());
        action_ = null;
      }
      actionCase_ = 44;
      onChanged();
      return stakeRestakeBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.StakeChangeCandidate, com.github.iotexproject.grpc.types.StakeChangeCandidate.Builder, com.github.iotexproject.grpc.types.StakeChangeCandidateOrBuilder> stakeChangeCandidateBuilder_;
    /**
     * <code>.iotextypes.StakeChangeCandidate stakeChangeCandidate = 45;</code>
     * @return Whether the stakeChangeCandidate field is set.
     */
    @java.lang.Override
    public boolean hasStakeChangeCandidate() {
      return actionCase_ == 45;
    }
    /**
     * <code>.iotextypes.StakeChangeCandidate stakeChangeCandidate = 45;</code>
     * @return The stakeChangeCandidate.
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.StakeChangeCandidate getStakeChangeCandidate() {
      if (stakeChangeCandidateBuilder_ == null) {
        if (actionCase_ == 45) {
          return (com.github.iotexproject.grpc.types.StakeChangeCandidate) action_;
        }
        return com.github.iotexproject.grpc.types.StakeChangeCandidate.getDefaultInstance();
      } else {
        if (actionCase_ == 45) {
          return stakeChangeCandidateBuilder_.getMessage();
        }
        return com.github.iotexproject.grpc.types.StakeChangeCandidate.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.StakeChangeCandidate stakeChangeCandidate = 45;</code>
     */
    public Builder setStakeChangeCandidate(com.github.iotexproject.grpc.types.StakeChangeCandidate value) {
      if (stakeChangeCandidateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        action_ = value;
        onChanged();
      } else {
        stakeChangeCandidateBuilder_.setMessage(value);
      }
      actionCase_ = 45;
      return this;
    }
    /**
     * <code>.iotextypes.StakeChangeCandidate stakeChangeCandidate = 45;</code>
     */
    public Builder setStakeChangeCandidate(
        com.github.iotexproject.grpc.types.StakeChangeCandidate.Builder builderForValue) {
      if (stakeChangeCandidateBuilder_ == null) {
        action_ = builderForValue.build();
        onChanged();
      } else {
        stakeChangeCandidateBuilder_.setMessage(builderForValue.build());
      }
      actionCase_ = 45;
      return this;
    }
    /**
     * <code>.iotextypes.StakeChangeCandidate stakeChangeCandidate = 45;</code>
     */
    public Builder mergeStakeChangeCandidate(com.github.iotexproject.grpc.types.StakeChangeCandidate value) {
      if (stakeChangeCandidateBuilder_ == null) {
        if (actionCase_ == 45 &&
            action_ != com.github.iotexproject.grpc.types.StakeChangeCandidate.getDefaultInstance()) {
          action_ = com.github.iotexproject.grpc.types.StakeChangeCandidate.newBuilder((com.github.iotexproject.grpc.types.StakeChangeCandidate) action_)
              .mergeFrom(value).buildPartial();
        } else {
          action_ = value;
        }
        onChanged();
      } else {
        if (actionCase_ == 45) {
          stakeChangeCandidateBuilder_.mergeFrom(value);
        } else {
          stakeChangeCandidateBuilder_.setMessage(value);
        }
      }
      actionCase_ = 45;
      return this;
    }
    /**
     * <code>.iotextypes.StakeChangeCandidate stakeChangeCandidate = 45;</code>
     */
    public Builder clearStakeChangeCandidate() {
      if (stakeChangeCandidateBuilder_ == null) {
        if (actionCase_ == 45) {
          actionCase_ = 0;
          action_ = null;
          onChanged();
        }
      } else {
        if (actionCase_ == 45) {
          actionCase_ = 0;
          action_ = null;
        }
        stakeChangeCandidateBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iotextypes.StakeChangeCandidate stakeChangeCandidate = 45;</code>
     */
    public com.github.iotexproject.grpc.types.StakeChangeCandidate.Builder getStakeChangeCandidateBuilder() {
      return getStakeChangeCandidateFieldBuilder().getBuilder();
    }
    /**
     * <code>.iotextypes.StakeChangeCandidate stakeChangeCandidate = 45;</code>
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.StakeChangeCandidateOrBuilder getStakeChangeCandidateOrBuilder() {
      if ((actionCase_ == 45) && (stakeChangeCandidateBuilder_ != null)) {
        return stakeChangeCandidateBuilder_.getMessageOrBuilder();
      } else {
        if (actionCase_ == 45) {
          return (com.github.iotexproject.grpc.types.StakeChangeCandidate) action_;
        }
        return com.github.iotexproject.grpc.types.StakeChangeCandidate.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.StakeChangeCandidate stakeChangeCandidate = 45;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.StakeChangeCandidate, com.github.iotexproject.grpc.types.StakeChangeCandidate.Builder, com.github.iotexproject.grpc.types.StakeChangeCandidateOrBuilder> 
        getStakeChangeCandidateFieldBuilder() {
      if (stakeChangeCandidateBuilder_ == null) {
        if (!(actionCase_ == 45)) {
          action_ = com.github.iotexproject.grpc.types.StakeChangeCandidate.getDefaultInstance();
        }
        stakeChangeCandidateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.iotexproject.grpc.types.StakeChangeCandidate, com.github.iotexproject.grpc.types.StakeChangeCandidate.Builder, com.github.iotexproject.grpc.types.StakeChangeCandidateOrBuilder>(
                (com.github.iotexproject.grpc.types.StakeChangeCandidate) action_,
                getParentForChildren(),
                isClean());
        action_ = null;
      }
      actionCase_ = 45;
      onChanged();
      return stakeChangeCandidateBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.StakeTransferOwnership, com.github.iotexproject.grpc.types.StakeTransferOwnership.Builder, com.github.iotexproject.grpc.types.StakeTransferOwnershipOrBuilder> stakeTransferOwnershipBuilder_;
    /**
     * <code>.iotextypes.StakeTransferOwnership stakeTransferOwnership = 46;</code>
     * @return Whether the stakeTransferOwnership field is set.
     */
    @java.lang.Override
    public boolean hasStakeTransferOwnership() {
      return actionCase_ == 46;
    }
    /**
     * <code>.iotextypes.StakeTransferOwnership stakeTransferOwnership = 46;</code>
     * @return The stakeTransferOwnership.
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.StakeTransferOwnership getStakeTransferOwnership() {
      if (stakeTransferOwnershipBuilder_ == null) {
        if (actionCase_ == 46) {
          return (com.github.iotexproject.grpc.types.StakeTransferOwnership) action_;
        }
        return com.github.iotexproject.grpc.types.StakeTransferOwnership.getDefaultInstance();
      } else {
        if (actionCase_ == 46) {
          return stakeTransferOwnershipBuilder_.getMessage();
        }
        return com.github.iotexproject.grpc.types.StakeTransferOwnership.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.StakeTransferOwnership stakeTransferOwnership = 46;</code>
     */
    public Builder setStakeTransferOwnership(com.github.iotexproject.grpc.types.StakeTransferOwnership value) {
      if (stakeTransferOwnershipBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        action_ = value;
        onChanged();
      } else {
        stakeTransferOwnershipBuilder_.setMessage(value);
      }
      actionCase_ = 46;
      return this;
    }
    /**
     * <code>.iotextypes.StakeTransferOwnership stakeTransferOwnership = 46;</code>
     */
    public Builder setStakeTransferOwnership(
        com.github.iotexproject.grpc.types.StakeTransferOwnership.Builder builderForValue) {
      if (stakeTransferOwnershipBuilder_ == null) {
        action_ = builderForValue.build();
        onChanged();
      } else {
        stakeTransferOwnershipBuilder_.setMessage(builderForValue.build());
      }
      actionCase_ = 46;
      return this;
    }
    /**
     * <code>.iotextypes.StakeTransferOwnership stakeTransferOwnership = 46;</code>
     */
    public Builder mergeStakeTransferOwnership(com.github.iotexproject.grpc.types.StakeTransferOwnership value) {
      if (stakeTransferOwnershipBuilder_ == null) {
        if (actionCase_ == 46 &&
            action_ != com.github.iotexproject.grpc.types.StakeTransferOwnership.getDefaultInstance()) {
          action_ = com.github.iotexproject.grpc.types.StakeTransferOwnership.newBuilder((com.github.iotexproject.grpc.types.StakeTransferOwnership) action_)
              .mergeFrom(value).buildPartial();
        } else {
          action_ = value;
        }
        onChanged();
      } else {
        if (actionCase_ == 46) {
          stakeTransferOwnershipBuilder_.mergeFrom(value);
        } else {
          stakeTransferOwnershipBuilder_.setMessage(value);
        }
      }
      actionCase_ = 46;
      return this;
    }
    /**
     * <code>.iotextypes.StakeTransferOwnership stakeTransferOwnership = 46;</code>
     */
    public Builder clearStakeTransferOwnership() {
      if (stakeTransferOwnershipBuilder_ == null) {
        if (actionCase_ == 46) {
          actionCase_ = 0;
          action_ = null;
          onChanged();
        }
      } else {
        if (actionCase_ == 46) {
          actionCase_ = 0;
          action_ = null;
        }
        stakeTransferOwnershipBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iotextypes.StakeTransferOwnership stakeTransferOwnership = 46;</code>
     */
    public com.github.iotexproject.grpc.types.StakeTransferOwnership.Builder getStakeTransferOwnershipBuilder() {
      return getStakeTransferOwnershipFieldBuilder().getBuilder();
    }
    /**
     * <code>.iotextypes.StakeTransferOwnership stakeTransferOwnership = 46;</code>
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.StakeTransferOwnershipOrBuilder getStakeTransferOwnershipOrBuilder() {
      if ((actionCase_ == 46) && (stakeTransferOwnershipBuilder_ != null)) {
        return stakeTransferOwnershipBuilder_.getMessageOrBuilder();
      } else {
        if (actionCase_ == 46) {
          return (com.github.iotexproject.grpc.types.StakeTransferOwnership) action_;
        }
        return com.github.iotexproject.grpc.types.StakeTransferOwnership.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.StakeTransferOwnership stakeTransferOwnership = 46;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.StakeTransferOwnership, com.github.iotexproject.grpc.types.StakeTransferOwnership.Builder, com.github.iotexproject.grpc.types.StakeTransferOwnershipOrBuilder> 
        getStakeTransferOwnershipFieldBuilder() {
      if (stakeTransferOwnershipBuilder_ == null) {
        if (!(actionCase_ == 46)) {
          action_ = com.github.iotexproject.grpc.types.StakeTransferOwnership.getDefaultInstance();
        }
        stakeTransferOwnershipBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.iotexproject.grpc.types.StakeTransferOwnership, com.github.iotexproject.grpc.types.StakeTransferOwnership.Builder, com.github.iotexproject.grpc.types.StakeTransferOwnershipOrBuilder>(
                (com.github.iotexproject.grpc.types.StakeTransferOwnership) action_,
                getParentForChildren(),
                isClean());
        action_ = null;
      }
      actionCase_ = 46;
      onChanged();
      return stakeTransferOwnershipBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.CandidateRegister, com.github.iotexproject.grpc.types.CandidateRegister.Builder, com.github.iotexproject.grpc.types.CandidateRegisterOrBuilder> candidateRegisterBuilder_;
    /**
     * <code>.iotextypes.CandidateRegister candidateRegister = 47;</code>
     * @return Whether the candidateRegister field is set.
     */
    @java.lang.Override
    public boolean hasCandidateRegister() {
      return actionCase_ == 47;
    }
    /**
     * <code>.iotextypes.CandidateRegister candidateRegister = 47;</code>
     * @return The candidateRegister.
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.CandidateRegister getCandidateRegister() {
      if (candidateRegisterBuilder_ == null) {
        if (actionCase_ == 47) {
          return (com.github.iotexproject.grpc.types.CandidateRegister) action_;
        }
        return com.github.iotexproject.grpc.types.CandidateRegister.getDefaultInstance();
      } else {
        if (actionCase_ == 47) {
          return candidateRegisterBuilder_.getMessage();
        }
        return com.github.iotexproject.grpc.types.CandidateRegister.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.CandidateRegister candidateRegister = 47;</code>
     */
    public Builder setCandidateRegister(com.github.iotexproject.grpc.types.CandidateRegister value) {
      if (candidateRegisterBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        action_ = value;
        onChanged();
      } else {
        candidateRegisterBuilder_.setMessage(value);
      }
      actionCase_ = 47;
      return this;
    }
    /**
     * <code>.iotextypes.CandidateRegister candidateRegister = 47;</code>
     */
    public Builder setCandidateRegister(
        com.github.iotexproject.grpc.types.CandidateRegister.Builder builderForValue) {
      if (candidateRegisterBuilder_ == null) {
        action_ = builderForValue.build();
        onChanged();
      } else {
        candidateRegisterBuilder_.setMessage(builderForValue.build());
      }
      actionCase_ = 47;
      return this;
    }
    /**
     * <code>.iotextypes.CandidateRegister candidateRegister = 47;</code>
     */
    public Builder mergeCandidateRegister(com.github.iotexproject.grpc.types.CandidateRegister value) {
      if (candidateRegisterBuilder_ == null) {
        if (actionCase_ == 47 &&
            action_ != com.github.iotexproject.grpc.types.CandidateRegister.getDefaultInstance()) {
          action_ = com.github.iotexproject.grpc.types.CandidateRegister.newBuilder((com.github.iotexproject.grpc.types.CandidateRegister) action_)
              .mergeFrom(value).buildPartial();
        } else {
          action_ = value;
        }
        onChanged();
      } else {
        if (actionCase_ == 47) {
          candidateRegisterBuilder_.mergeFrom(value);
        } else {
          candidateRegisterBuilder_.setMessage(value);
        }
      }
      actionCase_ = 47;
      return this;
    }
    /**
     * <code>.iotextypes.CandidateRegister candidateRegister = 47;</code>
     */
    public Builder clearCandidateRegister() {
      if (candidateRegisterBuilder_ == null) {
        if (actionCase_ == 47) {
          actionCase_ = 0;
          action_ = null;
          onChanged();
        }
      } else {
        if (actionCase_ == 47) {
          actionCase_ = 0;
          action_ = null;
        }
        candidateRegisterBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iotextypes.CandidateRegister candidateRegister = 47;</code>
     */
    public com.github.iotexproject.grpc.types.CandidateRegister.Builder getCandidateRegisterBuilder() {
      return getCandidateRegisterFieldBuilder().getBuilder();
    }
    /**
     * <code>.iotextypes.CandidateRegister candidateRegister = 47;</code>
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.CandidateRegisterOrBuilder getCandidateRegisterOrBuilder() {
      if ((actionCase_ == 47) && (candidateRegisterBuilder_ != null)) {
        return candidateRegisterBuilder_.getMessageOrBuilder();
      } else {
        if (actionCase_ == 47) {
          return (com.github.iotexproject.grpc.types.CandidateRegister) action_;
        }
        return com.github.iotexproject.grpc.types.CandidateRegister.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.CandidateRegister candidateRegister = 47;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.CandidateRegister, com.github.iotexproject.grpc.types.CandidateRegister.Builder, com.github.iotexproject.grpc.types.CandidateRegisterOrBuilder> 
        getCandidateRegisterFieldBuilder() {
      if (candidateRegisterBuilder_ == null) {
        if (!(actionCase_ == 47)) {
          action_ = com.github.iotexproject.grpc.types.CandidateRegister.getDefaultInstance();
        }
        candidateRegisterBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.iotexproject.grpc.types.CandidateRegister, com.github.iotexproject.grpc.types.CandidateRegister.Builder, com.github.iotexproject.grpc.types.CandidateRegisterOrBuilder>(
                (com.github.iotexproject.grpc.types.CandidateRegister) action_,
                getParentForChildren(),
                isClean());
        action_ = null;
      }
      actionCase_ = 47;
      onChanged();
      return candidateRegisterBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.CandidateBasicInfo, com.github.iotexproject.grpc.types.CandidateBasicInfo.Builder, com.github.iotexproject.grpc.types.CandidateBasicInfoOrBuilder> candidateUpdateBuilder_;
    /**
     * <code>.iotextypes.CandidateBasicInfo candidateUpdate = 48;</code>
     * @return Whether the candidateUpdate field is set.
     */
    @java.lang.Override
    public boolean hasCandidateUpdate() {
      return actionCase_ == 48;
    }
    /**
     * <code>.iotextypes.CandidateBasicInfo candidateUpdate = 48;</code>
     * @return The candidateUpdate.
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.CandidateBasicInfo getCandidateUpdate() {
      if (candidateUpdateBuilder_ == null) {
        if (actionCase_ == 48) {
          return (com.github.iotexproject.grpc.types.CandidateBasicInfo) action_;
        }
        return com.github.iotexproject.grpc.types.CandidateBasicInfo.getDefaultInstance();
      } else {
        if (actionCase_ == 48) {
          return candidateUpdateBuilder_.getMessage();
        }
        return com.github.iotexproject.grpc.types.CandidateBasicInfo.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.CandidateBasicInfo candidateUpdate = 48;</code>
     */
    public Builder setCandidateUpdate(com.github.iotexproject.grpc.types.CandidateBasicInfo value) {
      if (candidateUpdateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        action_ = value;
        onChanged();
      } else {
        candidateUpdateBuilder_.setMessage(value);
      }
      actionCase_ = 48;
      return this;
    }
    /**
     * <code>.iotextypes.CandidateBasicInfo candidateUpdate = 48;</code>
     */
    public Builder setCandidateUpdate(
        com.github.iotexproject.grpc.types.CandidateBasicInfo.Builder builderForValue) {
      if (candidateUpdateBuilder_ == null) {
        action_ = builderForValue.build();
        onChanged();
      } else {
        candidateUpdateBuilder_.setMessage(builderForValue.build());
      }
      actionCase_ = 48;
      return this;
    }
    /**
     * <code>.iotextypes.CandidateBasicInfo candidateUpdate = 48;</code>
     */
    public Builder mergeCandidateUpdate(com.github.iotexproject.grpc.types.CandidateBasicInfo value) {
      if (candidateUpdateBuilder_ == null) {
        if (actionCase_ == 48 &&
            action_ != com.github.iotexproject.grpc.types.CandidateBasicInfo.getDefaultInstance()) {
          action_ = com.github.iotexproject.grpc.types.CandidateBasicInfo.newBuilder((com.github.iotexproject.grpc.types.CandidateBasicInfo) action_)
              .mergeFrom(value).buildPartial();
        } else {
          action_ = value;
        }
        onChanged();
      } else {
        if (actionCase_ == 48) {
          candidateUpdateBuilder_.mergeFrom(value);
        } else {
          candidateUpdateBuilder_.setMessage(value);
        }
      }
      actionCase_ = 48;
      return this;
    }
    /**
     * <code>.iotextypes.CandidateBasicInfo candidateUpdate = 48;</code>
     */
    public Builder clearCandidateUpdate() {
      if (candidateUpdateBuilder_ == null) {
        if (actionCase_ == 48) {
          actionCase_ = 0;
          action_ = null;
          onChanged();
        }
      } else {
        if (actionCase_ == 48) {
          actionCase_ = 0;
          action_ = null;
        }
        candidateUpdateBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iotextypes.CandidateBasicInfo candidateUpdate = 48;</code>
     */
    public com.github.iotexproject.grpc.types.CandidateBasicInfo.Builder getCandidateUpdateBuilder() {
      return getCandidateUpdateFieldBuilder().getBuilder();
    }
    /**
     * <code>.iotextypes.CandidateBasicInfo candidateUpdate = 48;</code>
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.CandidateBasicInfoOrBuilder getCandidateUpdateOrBuilder() {
      if ((actionCase_ == 48) && (candidateUpdateBuilder_ != null)) {
        return candidateUpdateBuilder_.getMessageOrBuilder();
      } else {
        if (actionCase_ == 48) {
          return (com.github.iotexproject.grpc.types.CandidateBasicInfo) action_;
        }
        return com.github.iotexproject.grpc.types.CandidateBasicInfo.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.CandidateBasicInfo candidateUpdate = 48;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.CandidateBasicInfo, com.github.iotexproject.grpc.types.CandidateBasicInfo.Builder, com.github.iotexproject.grpc.types.CandidateBasicInfoOrBuilder> 
        getCandidateUpdateFieldBuilder() {
      if (candidateUpdateBuilder_ == null) {
        if (!(actionCase_ == 48)) {
          action_ = com.github.iotexproject.grpc.types.CandidateBasicInfo.getDefaultInstance();
        }
        candidateUpdateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.iotexproject.grpc.types.CandidateBasicInfo, com.github.iotexproject.grpc.types.CandidateBasicInfo.Builder, com.github.iotexproject.grpc.types.CandidateBasicInfoOrBuilder>(
                (com.github.iotexproject.grpc.types.CandidateBasicInfo) action_,
                getParentForChildren(),
                isClean());
        action_ = null;
      }
      actionCase_ = 48;
      onChanged();
      return candidateUpdateBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.CandidateActivate, com.github.iotexproject.grpc.types.CandidateActivate.Builder, com.github.iotexproject.grpc.types.CandidateActivateOrBuilder> candidateActivateBuilder_;
    /**
     * <code>.iotextypes.CandidateActivate candidateActivate = 49;</code>
     * @return Whether the candidateActivate field is set.
     */
    @java.lang.Override
    public boolean hasCandidateActivate() {
      return actionCase_ == 49;
    }
    /**
     * <code>.iotextypes.CandidateActivate candidateActivate = 49;</code>
     * @return The candidateActivate.
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.CandidateActivate getCandidateActivate() {
      if (candidateActivateBuilder_ == null) {
        if (actionCase_ == 49) {
          return (com.github.iotexproject.grpc.types.CandidateActivate) action_;
        }
        return com.github.iotexproject.grpc.types.CandidateActivate.getDefaultInstance();
      } else {
        if (actionCase_ == 49) {
          return candidateActivateBuilder_.getMessage();
        }
        return com.github.iotexproject.grpc.types.CandidateActivate.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.CandidateActivate candidateActivate = 49;</code>
     */
    public Builder setCandidateActivate(com.github.iotexproject.grpc.types.CandidateActivate value) {
      if (candidateActivateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        action_ = value;
        onChanged();
      } else {
        candidateActivateBuilder_.setMessage(value);
      }
      actionCase_ = 49;
      return this;
    }
    /**
     * <code>.iotextypes.CandidateActivate candidateActivate = 49;</code>
     */
    public Builder setCandidateActivate(
        com.github.iotexproject.grpc.types.CandidateActivate.Builder builderForValue) {
      if (candidateActivateBuilder_ == null) {
        action_ = builderForValue.build();
        onChanged();
      } else {
        candidateActivateBuilder_.setMessage(builderForValue.build());
      }
      actionCase_ = 49;
      return this;
    }
    /**
     * <code>.iotextypes.CandidateActivate candidateActivate = 49;</code>
     */
    public Builder mergeCandidateActivate(com.github.iotexproject.grpc.types.CandidateActivate value) {
      if (candidateActivateBuilder_ == null) {
        if (actionCase_ == 49 &&
            action_ != com.github.iotexproject.grpc.types.CandidateActivate.getDefaultInstance()) {
          action_ = com.github.iotexproject.grpc.types.CandidateActivate.newBuilder((com.github.iotexproject.grpc.types.CandidateActivate) action_)
              .mergeFrom(value).buildPartial();
        } else {
          action_ = value;
        }
        onChanged();
      } else {
        if (actionCase_ == 49) {
          candidateActivateBuilder_.mergeFrom(value);
        } else {
          candidateActivateBuilder_.setMessage(value);
        }
      }
      actionCase_ = 49;
      return this;
    }
    /**
     * <code>.iotextypes.CandidateActivate candidateActivate = 49;</code>
     */
    public Builder clearCandidateActivate() {
      if (candidateActivateBuilder_ == null) {
        if (actionCase_ == 49) {
          actionCase_ = 0;
          action_ = null;
          onChanged();
        }
      } else {
        if (actionCase_ == 49) {
          actionCase_ = 0;
          action_ = null;
        }
        candidateActivateBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iotextypes.CandidateActivate candidateActivate = 49;</code>
     */
    public com.github.iotexproject.grpc.types.CandidateActivate.Builder getCandidateActivateBuilder() {
      return getCandidateActivateFieldBuilder().getBuilder();
    }
    /**
     * <code>.iotextypes.CandidateActivate candidateActivate = 49;</code>
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.CandidateActivateOrBuilder getCandidateActivateOrBuilder() {
      if ((actionCase_ == 49) && (candidateActivateBuilder_ != null)) {
        return candidateActivateBuilder_.getMessageOrBuilder();
      } else {
        if (actionCase_ == 49) {
          return (com.github.iotexproject.grpc.types.CandidateActivate) action_;
        }
        return com.github.iotexproject.grpc.types.CandidateActivate.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.CandidateActivate candidateActivate = 49;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.CandidateActivate, com.github.iotexproject.grpc.types.CandidateActivate.Builder, com.github.iotexproject.grpc.types.CandidateActivateOrBuilder> 
        getCandidateActivateFieldBuilder() {
      if (candidateActivateBuilder_ == null) {
        if (!(actionCase_ == 49)) {
          action_ = com.github.iotexproject.grpc.types.CandidateActivate.getDefaultInstance();
        }
        candidateActivateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.iotexproject.grpc.types.CandidateActivate, com.github.iotexproject.grpc.types.CandidateActivate.Builder, com.github.iotexproject.grpc.types.CandidateActivateOrBuilder>(
                (com.github.iotexproject.grpc.types.CandidateActivate) action_,
                getParentForChildren(),
                isClean());
        action_ = null;
      }
      actionCase_ = 49;
      onChanged();
      return candidateActivateBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.CandidateEndorsement, com.github.iotexproject.grpc.types.CandidateEndorsement.Builder, com.github.iotexproject.grpc.types.CandidateEndorsementOrBuilder> candidateEndorsementBuilder_;
    /**
     * <code>.iotextypes.CandidateEndorsement candidateEndorsement = 51;</code>
     * @return Whether the candidateEndorsement field is set.
     */
    @java.lang.Override
    public boolean hasCandidateEndorsement() {
      return actionCase_ == 51;
    }
    /**
     * <code>.iotextypes.CandidateEndorsement candidateEndorsement = 51;</code>
     * @return The candidateEndorsement.
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.CandidateEndorsement getCandidateEndorsement() {
      if (candidateEndorsementBuilder_ == null) {
        if (actionCase_ == 51) {
          return (com.github.iotexproject.grpc.types.CandidateEndorsement) action_;
        }
        return com.github.iotexproject.grpc.types.CandidateEndorsement.getDefaultInstance();
      } else {
        if (actionCase_ == 51) {
          return candidateEndorsementBuilder_.getMessage();
        }
        return com.github.iotexproject.grpc.types.CandidateEndorsement.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.CandidateEndorsement candidateEndorsement = 51;</code>
     */
    public Builder setCandidateEndorsement(com.github.iotexproject.grpc.types.CandidateEndorsement value) {
      if (candidateEndorsementBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        action_ = value;
        onChanged();
      } else {
        candidateEndorsementBuilder_.setMessage(value);
      }
      actionCase_ = 51;
      return this;
    }
    /**
     * <code>.iotextypes.CandidateEndorsement candidateEndorsement = 51;</code>
     */
    public Builder setCandidateEndorsement(
        com.github.iotexproject.grpc.types.CandidateEndorsement.Builder builderForValue) {
      if (candidateEndorsementBuilder_ == null) {
        action_ = builderForValue.build();
        onChanged();
      } else {
        candidateEndorsementBuilder_.setMessage(builderForValue.build());
      }
      actionCase_ = 51;
      return this;
    }
    /**
     * <code>.iotextypes.CandidateEndorsement candidateEndorsement = 51;</code>
     */
    public Builder mergeCandidateEndorsement(com.github.iotexproject.grpc.types.CandidateEndorsement value) {
      if (candidateEndorsementBuilder_ == null) {
        if (actionCase_ == 51 &&
            action_ != com.github.iotexproject.grpc.types.CandidateEndorsement.getDefaultInstance()) {
          action_ = com.github.iotexproject.grpc.types.CandidateEndorsement.newBuilder((com.github.iotexproject.grpc.types.CandidateEndorsement) action_)
              .mergeFrom(value).buildPartial();
        } else {
          action_ = value;
        }
        onChanged();
      } else {
        if (actionCase_ == 51) {
          candidateEndorsementBuilder_.mergeFrom(value);
        } else {
          candidateEndorsementBuilder_.setMessage(value);
        }
      }
      actionCase_ = 51;
      return this;
    }
    /**
     * <code>.iotextypes.CandidateEndorsement candidateEndorsement = 51;</code>
     */
    public Builder clearCandidateEndorsement() {
      if (candidateEndorsementBuilder_ == null) {
        if (actionCase_ == 51) {
          actionCase_ = 0;
          action_ = null;
          onChanged();
        }
      } else {
        if (actionCase_ == 51) {
          actionCase_ = 0;
          action_ = null;
        }
        candidateEndorsementBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iotextypes.CandidateEndorsement candidateEndorsement = 51;</code>
     */
    public com.github.iotexproject.grpc.types.CandidateEndorsement.Builder getCandidateEndorsementBuilder() {
      return getCandidateEndorsementFieldBuilder().getBuilder();
    }
    /**
     * <code>.iotextypes.CandidateEndorsement candidateEndorsement = 51;</code>
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.CandidateEndorsementOrBuilder getCandidateEndorsementOrBuilder() {
      if ((actionCase_ == 51) && (candidateEndorsementBuilder_ != null)) {
        return candidateEndorsementBuilder_.getMessageOrBuilder();
      } else {
        if (actionCase_ == 51) {
          return (com.github.iotexproject.grpc.types.CandidateEndorsement) action_;
        }
        return com.github.iotexproject.grpc.types.CandidateEndorsement.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.CandidateEndorsement candidateEndorsement = 51;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.CandidateEndorsement, com.github.iotexproject.grpc.types.CandidateEndorsement.Builder, com.github.iotexproject.grpc.types.CandidateEndorsementOrBuilder> 
        getCandidateEndorsementFieldBuilder() {
      if (candidateEndorsementBuilder_ == null) {
        if (!(actionCase_ == 51)) {
          action_ = com.github.iotexproject.grpc.types.CandidateEndorsement.getDefaultInstance();
        }
        candidateEndorsementBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.iotexproject.grpc.types.CandidateEndorsement, com.github.iotexproject.grpc.types.CandidateEndorsement.Builder, com.github.iotexproject.grpc.types.CandidateEndorsementOrBuilder>(
                (com.github.iotexproject.grpc.types.CandidateEndorsement) action_,
                getParentForChildren(),
                isClean());
        action_ = null;
      }
      actionCase_ = 51;
      onChanged();
      return candidateEndorsementBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.CandidateTransferOwnership, com.github.iotexproject.grpc.types.CandidateTransferOwnership.Builder, com.github.iotexproject.grpc.types.CandidateTransferOwnershipOrBuilder> candidateTransferOwnershipBuilder_;
    /**
     * <code>.iotextypes.CandidateTransferOwnership candidateTransferOwnership = 52;</code>
     * @return Whether the candidateTransferOwnership field is set.
     */
    @java.lang.Override
    public boolean hasCandidateTransferOwnership() {
      return actionCase_ == 52;
    }
    /**
     * <code>.iotextypes.CandidateTransferOwnership candidateTransferOwnership = 52;</code>
     * @return The candidateTransferOwnership.
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.CandidateTransferOwnership getCandidateTransferOwnership() {
      if (candidateTransferOwnershipBuilder_ == null) {
        if (actionCase_ == 52) {
          return (com.github.iotexproject.grpc.types.CandidateTransferOwnership) action_;
        }
        return com.github.iotexproject.grpc.types.CandidateTransferOwnership.getDefaultInstance();
      } else {
        if (actionCase_ == 52) {
          return candidateTransferOwnershipBuilder_.getMessage();
        }
        return com.github.iotexproject.grpc.types.CandidateTransferOwnership.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.CandidateTransferOwnership candidateTransferOwnership = 52;</code>
     */
    public Builder setCandidateTransferOwnership(com.github.iotexproject.grpc.types.CandidateTransferOwnership value) {
      if (candidateTransferOwnershipBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        action_ = value;
        onChanged();
      } else {
        candidateTransferOwnershipBuilder_.setMessage(value);
      }
      actionCase_ = 52;
      return this;
    }
    /**
     * <code>.iotextypes.CandidateTransferOwnership candidateTransferOwnership = 52;</code>
     */
    public Builder setCandidateTransferOwnership(
        com.github.iotexproject.grpc.types.CandidateTransferOwnership.Builder builderForValue) {
      if (candidateTransferOwnershipBuilder_ == null) {
        action_ = builderForValue.build();
        onChanged();
      } else {
        candidateTransferOwnershipBuilder_.setMessage(builderForValue.build());
      }
      actionCase_ = 52;
      return this;
    }
    /**
     * <code>.iotextypes.CandidateTransferOwnership candidateTransferOwnership = 52;</code>
     */
    public Builder mergeCandidateTransferOwnership(com.github.iotexproject.grpc.types.CandidateTransferOwnership value) {
      if (candidateTransferOwnershipBuilder_ == null) {
        if (actionCase_ == 52 &&
            action_ != com.github.iotexproject.grpc.types.CandidateTransferOwnership.getDefaultInstance()) {
          action_ = com.github.iotexproject.grpc.types.CandidateTransferOwnership.newBuilder((com.github.iotexproject.grpc.types.CandidateTransferOwnership) action_)
              .mergeFrom(value).buildPartial();
        } else {
          action_ = value;
        }
        onChanged();
      } else {
        if (actionCase_ == 52) {
          candidateTransferOwnershipBuilder_.mergeFrom(value);
        } else {
          candidateTransferOwnershipBuilder_.setMessage(value);
        }
      }
      actionCase_ = 52;
      return this;
    }
    /**
     * <code>.iotextypes.CandidateTransferOwnership candidateTransferOwnership = 52;</code>
     */
    public Builder clearCandidateTransferOwnership() {
      if (candidateTransferOwnershipBuilder_ == null) {
        if (actionCase_ == 52) {
          actionCase_ = 0;
          action_ = null;
          onChanged();
        }
      } else {
        if (actionCase_ == 52) {
          actionCase_ = 0;
          action_ = null;
        }
        candidateTransferOwnershipBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iotextypes.CandidateTransferOwnership candidateTransferOwnership = 52;</code>
     */
    public com.github.iotexproject.grpc.types.CandidateTransferOwnership.Builder getCandidateTransferOwnershipBuilder() {
      return getCandidateTransferOwnershipFieldBuilder().getBuilder();
    }
    /**
     * <code>.iotextypes.CandidateTransferOwnership candidateTransferOwnership = 52;</code>
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.CandidateTransferOwnershipOrBuilder getCandidateTransferOwnershipOrBuilder() {
      if ((actionCase_ == 52) && (candidateTransferOwnershipBuilder_ != null)) {
        return candidateTransferOwnershipBuilder_.getMessageOrBuilder();
      } else {
        if (actionCase_ == 52) {
          return (com.github.iotexproject.grpc.types.CandidateTransferOwnership) action_;
        }
        return com.github.iotexproject.grpc.types.CandidateTransferOwnership.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.CandidateTransferOwnership candidateTransferOwnership = 52;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.CandidateTransferOwnership, com.github.iotexproject.grpc.types.CandidateTransferOwnership.Builder, com.github.iotexproject.grpc.types.CandidateTransferOwnershipOrBuilder> 
        getCandidateTransferOwnershipFieldBuilder() {
      if (candidateTransferOwnershipBuilder_ == null) {
        if (!(actionCase_ == 52)) {
          action_ = com.github.iotexproject.grpc.types.CandidateTransferOwnership.getDefaultInstance();
        }
        candidateTransferOwnershipBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.iotexproject.grpc.types.CandidateTransferOwnership, com.github.iotexproject.grpc.types.CandidateTransferOwnership.Builder, com.github.iotexproject.grpc.types.CandidateTransferOwnershipOrBuilder>(
                (com.github.iotexproject.grpc.types.CandidateTransferOwnership) action_,
                getParentForChildren(),
                isClean());
        action_ = null;
      }
      actionCase_ = 52;
      onChanged();
      return candidateTransferOwnershipBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.StakeMigrate, com.github.iotexproject.grpc.types.StakeMigrate.Builder, com.github.iotexproject.grpc.types.StakeMigrateOrBuilder> stakeMigrateBuilder_;
    /**
     * <code>.iotextypes.StakeMigrate stakeMigrate = 53;</code>
     * @return Whether the stakeMigrate field is set.
     */
    @java.lang.Override
    public boolean hasStakeMigrate() {
      return actionCase_ == 53;
    }
    /**
     * <code>.iotextypes.StakeMigrate stakeMigrate = 53;</code>
     * @return The stakeMigrate.
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.StakeMigrate getStakeMigrate() {
      if (stakeMigrateBuilder_ == null) {
        if (actionCase_ == 53) {
          return (com.github.iotexproject.grpc.types.StakeMigrate) action_;
        }
        return com.github.iotexproject.grpc.types.StakeMigrate.getDefaultInstance();
      } else {
        if (actionCase_ == 53) {
          return stakeMigrateBuilder_.getMessage();
        }
        return com.github.iotexproject.grpc.types.StakeMigrate.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.StakeMigrate stakeMigrate = 53;</code>
     */
    public Builder setStakeMigrate(com.github.iotexproject.grpc.types.StakeMigrate value) {
      if (stakeMigrateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        action_ = value;
        onChanged();
      } else {
        stakeMigrateBuilder_.setMessage(value);
      }
      actionCase_ = 53;
      return this;
    }
    /**
     * <code>.iotextypes.StakeMigrate stakeMigrate = 53;</code>
     */
    public Builder setStakeMigrate(
        com.github.iotexproject.grpc.types.StakeMigrate.Builder builderForValue) {
      if (stakeMigrateBuilder_ == null) {
        action_ = builderForValue.build();
        onChanged();
      } else {
        stakeMigrateBuilder_.setMessage(builderForValue.build());
      }
      actionCase_ = 53;
      return this;
    }
    /**
     * <code>.iotextypes.StakeMigrate stakeMigrate = 53;</code>
     */
    public Builder mergeStakeMigrate(com.github.iotexproject.grpc.types.StakeMigrate value) {
      if (stakeMigrateBuilder_ == null) {
        if (actionCase_ == 53 &&
            action_ != com.github.iotexproject.grpc.types.StakeMigrate.getDefaultInstance()) {
          action_ = com.github.iotexproject.grpc.types.StakeMigrate.newBuilder((com.github.iotexproject.grpc.types.StakeMigrate) action_)
              .mergeFrom(value).buildPartial();
        } else {
          action_ = value;
        }
        onChanged();
      } else {
        if (actionCase_ == 53) {
          stakeMigrateBuilder_.mergeFrom(value);
        } else {
          stakeMigrateBuilder_.setMessage(value);
        }
      }
      actionCase_ = 53;
      return this;
    }
    /**
     * <code>.iotextypes.StakeMigrate stakeMigrate = 53;</code>
     */
    public Builder clearStakeMigrate() {
      if (stakeMigrateBuilder_ == null) {
        if (actionCase_ == 53) {
          actionCase_ = 0;
          action_ = null;
          onChanged();
        }
      } else {
        if (actionCase_ == 53) {
          actionCase_ = 0;
          action_ = null;
        }
        stakeMigrateBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iotextypes.StakeMigrate stakeMigrate = 53;</code>
     */
    public com.github.iotexproject.grpc.types.StakeMigrate.Builder getStakeMigrateBuilder() {
      return getStakeMigrateFieldBuilder().getBuilder();
    }
    /**
     * <code>.iotextypes.StakeMigrate stakeMigrate = 53;</code>
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.StakeMigrateOrBuilder getStakeMigrateOrBuilder() {
      if ((actionCase_ == 53) && (stakeMigrateBuilder_ != null)) {
        return stakeMigrateBuilder_.getMessageOrBuilder();
      } else {
        if (actionCase_ == 53) {
          return (com.github.iotexproject.grpc.types.StakeMigrate) action_;
        }
        return com.github.iotexproject.grpc.types.StakeMigrate.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.StakeMigrate stakeMigrate = 53;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.StakeMigrate, com.github.iotexproject.grpc.types.StakeMigrate.Builder, com.github.iotexproject.grpc.types.StakeMigrateOrBuilder> 
        getStakeMigrateFieldBuilder() {
      if (stakeMigrateBuilder_ == null) {
        if (!(actionCase_ == 53)) {
          action_ = com.github.iotexproject.grpc.types.StakeMigrate.getDefaultInstance();
        }
        stakeMigrateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.iotexproject.grpc.types.StakeMigrate, com.github.iotexproject.grpc.types.StakeMigrate.Builder, com.github.iotexproject.grpc.types.StakeMigrateOrBuilder>(
                (com.github.iotexproject.grpc.types.StakeMigrate) action_,
                getParentForChildren(),
                isClean());
        action_ = null;
      }
      actionCase_ = 53;
      onChanged();
      return stakeMigrateBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.PutPollResult, com.github.iotexproject.grpc.types.PutPollResult.Builder, com.github.iotexproject.grpc.types.PutPollResultOrBuilder> putPollResultBuilder_;
    /**
     * <code>.iotextypes.PutPollResult putPollResult = 50;</code>
     * @return Whether the putPollResult field is set.
     */
    @java.lang.Override
    public boolean hasPutPollResult() {
      return actionCase_ == 50;
    }
    /**
     * <code>.iotextypes.PutPollResult putPollResult = 50;</code>
     * @return The putPollResult.
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.PutPollResult getPutPollResult() {
      if (putPollResultBuilder_ == null) {
        if (actionCase_ == 50) {
          return (com.github.iotexproject.grpc.types.PutPollResult) action_;
        }
        return com.github.iotexproject.grpc.types.PutPollResult.getDefaultInstance();
      } else {
        if (actionCase_ == 50) {
          return putPollResultBuilder_.getMessage();
        }
        return com.github.iotexproject.grpc.types.PutPollResult.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.PutPollResult putPollResult = 50;</code>
     */
    public Builder setPutPollResult(com.github.iotexproject.grpc.types.PutPollResult value) {
      if (putPollResultBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        action_ = value;
        onChanged();
      } else {
        putPollResultBuilder_.setMessage(value);
      }
      actionCase_ = 50;
      return this;
    }
    /**
     * <code>.iotextypes.PutPollResult putPollResult = 50;</code>
     */
    public Builder setPutPollResult(
        com.github.iotexproject.grpc.types.PutPollResult.Builder builderForValue) {
      if (putPollResultBuilder_ == null) {
        action_ = builderForValue.build();
        onChanged();
      } else {
        putPollResultBuilder_.setMessage(builderForValue.build());
      }
      actionCase_ = 50;
      return this;
    }
    /**
     * <code>.iotextypes.PutPollResult putPollResult = 50;</code>
     */
    public Builder mergePutPollResult(com.github.iotexproject.grpc.types.PutPollResult value) {
      if (putPollResultBuilder_ == null) {
        if (actionCase_ == 50 &&
            action_ != com.github.iotexproject.grpc.types.PutPollResult.getDefaultInstance()) {
          action_ = com.github.iotexproject.grpc.types.PutPollResult.newBuilder((com.github.iotexproject.grpc.types.PutPollResult) action_)
              .mergeFrom(value).buildPartial();
        } else {
          action_ = value;
        }
        onChanged();
      } else {
        if (actionCase_ == 50) {
          putPollResultBuilder_.mergeFrom(value);
        } else {
          putPollResultBuilder_.setMessage(value);
        }
      }
      actionCase_ = 50;
      return this;
    }
    /**
     * <code>.iotextypes.PutPollResult putPollResult = 50;</code>
     */
    public Builder clearPutPollResult() {
      if (putPollResultBuilder_ == null) {
        if (actionCase_ == 50) {
          actionCase_ = 0;
          action_ = null;
          onChanged();
        }
      } else {
        if (actionCase_ == 50) {
          actionCase_ = 0;
          action_ = null;
        }
        putPollResultBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iotextypes.PutPollResult putPollResult = 50;</code>
     */
    public com.github.iotexproject.grpc.types.PutPollResult.Builder getPutPollResultBuilder() {
      return getPutPollResultFieldBuilder().getBuilder();
    }
    /**
     * <code>.iotextypes.PutPollResult putPollResult = 50;</code>
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.PutPollResultOrBuilder getPutPollResultOrBuilder() {
      if ((actionCase_ == 50) && (putPollResultBuilder_ != null)) {
        return putPollResultBuilder_.getMessageOrBuilder();
      } else {
        if (actionCase_ == 50) {
          return (com.github.iotexproject.grpc.types.PutPollResult) action_;
        }
        return com.github.iotexproject.grpc.types.PutPollResult.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.PutPollResult putPollResult = 50;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.PutPollResult, com.github.iotexproject.grpc.types.PutPollResult.Builder, com.github.iotexproject.grpc.types.PutPollResultOrBuilder> 
        getPutPollResultFieldBuilder() {
      if (putPollResultBuilder_ == null) {
        if (!(actionCase_ == 50)) {
          action_ = com.github.iotexproject.grpc.types.PutPollResult.getDefaultInstance();
        }
        putPollResultBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.iotexproject.grpc.types.PutPollResult, com.github.iotexproject.grpc.types.PutPollResult.Builder, com.github.iotexproject.grpc.types.PutPollResultOrBuilder>(
                (com.github.iotexproject.grpc.types.PutPollResult) action_,
                getParentForChildren(),
                isClean());
        action_ = null;
      }
      actionCase_ = 50;
      onChanged();
      return putPollResultBuilder_;
    }

    // @@protoc_insertion_point(builder_scope:iotextypes.ActionCore)
  }

  // @@protoc_insertion_point(class_scope:iotextypes.ActionCore)
  private static final com.github.iotexproject.grpc.types.ActionCore DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.github.iotexproject.grpc.types.ActionCore();
  }

  public static com.github.iotexproject.grpc.types.ActionCore getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ActionCore>
      PARSER = new com.google.protobuf.AbstractParser<ActionCore>() {
    @java.lang.Override
    public ActionCore parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<ActionCore> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ActionCore> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.github.iotexproject.grpc.types.ActionCore getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

