// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: proto/types/action.proto
// Protobuf Java Version: 4.29.1

package com.github.iotexproject.grpc.types;

/**
 * Protobuf type {@code iotextypes.Execution}
 */
public final class Execution extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:iotextypes.Execution)
    ExecutionOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 1,
      /* suffix= */ "",
      Execution.class.getName());
  }
  // Use Execution.newBuilder() to construct.
  private Execution(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private Execution() {
    amount_ = "";
    contract_ = "";
    data_ = com.google.protobuf.ByteString.EMPTY;
    accessList_ = java.util.Collections.emptyList();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.github.iotexproject.grpc.types.ActionOuterClass.internal_static_iotextypes_Execution_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.github.iotexproject.grpc.types.ActionOuterClass.internal_static_iotextypes_Execution_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.github.iotexproject.grpc.types.Execution.class, com.github.iotexproject.grpc.types.Execution.Builder.class);
  }

  public static final int AMOUNT_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object amount_ = "";
  /**
   * <code>string amount = 1;</code>
   * @return The amount.
   */
  @java.lang.Override
  public java.lang.String getAmount() {
    java.lang.Object ref = amount_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      amount_ = s;
      return s;
    }
  }
  /**
   * <code>string amount = 1;</code>
   * @return The bytes for amount.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getAmountBytes() {
    java.lang.Object ref = amount_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      amount_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CONTRACT_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object contract_ = "";
  /**
   * <code>string contract = 2;</code>
   * @return The contract.
   */
  @java.lang.Override
  public java.lang.String getContract() {
    java.lang.Object ref = contract_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      contract_ = s;
      return s;
    }
  }
  /**
   * <code>string contract = 2;</code>
   * @return The bytes for contract.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getContractBytes() {
    java.lang.Object ref = contract_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      contract_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DATA_FIELD_NUMBER = 3;
  private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
  /**
   * <code>bytes data = 3;</code>
   * @return The data.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getData() {
    return data_;
  }

  public static final int ACCESSLIST_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private java.util.List<com.github.iotexproject.grpc.types.AccessTuple> accessList_;
  /**
   * <code>repeated .iotextypes.AccessTuple accessList = 4;</code>
   */
  @java.lang.Override
  public java.util.List<com.github.iotexproject.grpc.types.AccessTuple> getAccessListList() {
    return accessList_;
  }
  /**
   * <code>repeated .iotextypes.AccessTuple accessList = 4;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.github.iotexproject.grpc.types.AccessTupleOrBuilder> 
      getAccessListOrBuilderList() {
    return accessList_;
  }
  /**
   * <code>repeated .iotextypes.AccessTuple accessList = 4;</code>
   */
  @java.lang.Override
  public int getAccessListCount() {
    return accessList_.size();
  }
  /**
   * <code>repeated .iotextypes.AccessTuple accessList = 4;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.AccessTuple getAccessList(int index) {
    return accessList_.get(index);
  }
  /**
   * <code>repeated .iotextypes.AccessTuple accessList = 4;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.AccessTupleOrBuilder getAccessListOrBuilder(
      int index) {
    return accessList_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(amount_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 1, amount_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(contract_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 2, contract_);
    }
    if (!data_.isEmpty()) {
      output.writeBytes(3, data_);
    }
    for (int i = 0; i < accessList_.size(); i++) {
      output.writeMessage(4, accessList_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(amount_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(1, amount_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(contract_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(2, contract_);
    }
    if (!data_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(3, data_);
    }
    for (int i = 0; i < accessList_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, accessList_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.github.iotexproject.grpc.types.Execution)) {
      return super.equals(obj);
    }
    com.github.iotexproject.grpc.types.Execution other = (com.github.iotexproject.grpc.types.Execution) obj;

    if (!getAmount()
        .equals(other.getAmount())) return false;
    if (!getContract()
        .equals(other.getContract())) return false;
    if (!getData()
        .equals(other.getData())) return false;
    if (!getAccessListList()
        .equals(other.getAccessListList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + AMOUNT_FIELD_NUMBER;
    hash = (53 * hash) + getAmount().hashCode();
    hash = (37 * hash) + CONTRACT_FIELD_NUMBER;
    hash = (53 * hash) + getContract().hashCode();
    hash = (37 * hash) + DATA_FIELD_NUMBER;
    hash = (53 * hash) + getData().hashCode();
    if (getAccessListCount() > 0) {
      hash = (37 * hash) + ACCESSLIST_FIELD_NUMBER;
      hash = (53 * hash) + getAccessListList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.github.iotexproject.grpc.types.Execution parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.iotexproject.grpc.types.Execution parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.iotexproject.grpc.types.Execution parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.iotexproject.grpc.types.Execution parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.iotexproject.grpc.types.Execution parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.iotexproject.grpc.types.Execution parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.iotexproject.grpc.types.Execution parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.github.iotexproject.grpc.types.Execution parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.github.iotexproject.grpc.types.Execution parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.github.iotexproject.grpc.types.Execution parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.github.iotexproject.grpc.types.Execution parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.github.iotexproject.grpc.types.Execution parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.github.iotexproject.grpc.types.Execution prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code iotextypes.Execution}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:iotextypes.Execution)
      com.github.iotexproject.grpc.types.ExecutionOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.iotexproject.grpc.types.ActionOuterClass.internal_static_iotextypes_Execution_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.iotexproject.grpc.types.ActionOuterClass.internal_static_iotextypes_Execution_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.iotexproject.grpc.types.Execution.class, com.github.iotexproject.grpc.types.Execution.Builder.class);
    }

    // Construct using com.github.iotexproject.grpc.types.Execution.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      amount_ = "";
      contract_ = "";
      data_ = com.google.protobuf.ByteString.EMPTY;
      if (accessListBuilder_ == null) {
        accessList_ = java.util.Collections.emptyList();
      } else {
        accessList_ = null;
        accessListBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000008);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.github.iotexproject.grpc.types.ActionOuterClass.internal_static_iotextypes_Execution_descriptor;
    }

    @java.lang.Override
    public com.github.iotexproject.grpc.types.Execution getDefaultInstanceForType() {
      return com.github.iotexproject.grpc.types.Execution.getDefaultInstance();
    }

    @java.lang.Override
    public com.github.iotexproject.grpc.types.Execution build() {
      com.github.iotexproject.grpc.types.Execution result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.github.iotexproject.grpc.types.Execution buildPartial() {
      com.github.iotexproject.grpc.types.Execution result = new com.github.iotexproject.grpc.types.Execution(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.github.iotexproject.grpc.types.Execution result) {
      if (accessListBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)) {
          accessList_ = java.util.Collections.unmodifiableList(accessList_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.accessList_ = accessList_;
      } else {
        result.accessList_ = accessListBuilder_.build();
      }
    }

    private void buildPartial0(com.github.iotexproject.grpc.types.Execution result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.amount_ = amount_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.contract_ = contract_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.data_ = data_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.github.iotexproject.grpc.types.Execution) {
        return mergeFrom((com.github.iotexproject.grpc.types.Execution)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.github.iotexproject.grpc.types.Execution other) {
      if (other == com.github.iotexproject.grpc.types.Execution.getDefaultInstance()) return this;
      if (!other.getAmount().isEmpty()) {
        amount_ = other.amount_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (!other.getContract().isEmpty()) {
        contract_ = other.contract_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (other.getData() != com.google.protobuf.ByteString.EMPTY) {
        setData(other.getData());
      }
      if (accessListBuilder_ == null) {
        if (!other.accessList_.isEmpty()) {
          if (accessList_.isEmpty()) {
            accessList_ = other.accessList_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureAccessListIsMutable();
            accessList_.addAll(other.accessList_);
          }
          onChanged();
        }
      } else {
        if (!other.accessList_.isEmpty()) {
          if (accessListBuilder_.isEmpty()) {
            accessListBuilder_.dispose();
            accessListBuilder_ = null;
            accessList_ = other.accessList_;
            bitField0_ = (bitField0_ & ~0x00000008);
            accessListBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getAccessListFieldBuilder() : null;
          } else {
            accessListBuilder_.addAllMessages(other.accessList_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              amount_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              contract_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              data_ = input.readBytes();
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              com.github.iotexproject.grpc.types.AccessTuple m =
                  input.readMessage(
                      com.github.iotexproject.grpc.types.AccessTuple.parser(),
                      extensionRegistry);
              if (accessListBuilder_ == null) {
                ensureAccessListIsMutable();
                accessList_.add(m);
              } else {
                accessListBuilder_.addMessage(m);
              }
              break;
            } // case 34
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object amount_ = "";
    /**
     * <code>string amount = 1;</code>
     * @return The amount.
     */
    public java.lang.String getAmount() {
      java.lang.Object ref = amount_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        amount_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string amount = 1;</code>
     * @return The bytes for amount.
     */
    public com.google.protobuf.ByteString
        getAmountBytes() {
      java.lang.Object ref = amount_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        amount_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string amount = 1;</code>
     * @param value The amount to set.
     * @return This builder for chaining.
     */
    public Builder setAmount(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      amount_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>string amount = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearAmount() {
      amount_ = getDefaultInstance().getAmount();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <code>string amount = 1;</code>
     * @param value The bytes for amount to set.
     * @return This builder for chaining.
     */
    public Builder setAmountBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      amount_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.lang.Object contract_ = "";
    /**
     * <code>string contract = 2;</code>
     * @return The contract.
     */
    public java.lang.String getContract() {
      java.lang.Object ref = contract_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        contract_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string contract = 2;</code>
     * @return The bytes for contract.
     */
    public com.google.protobuf.ByteString
        getContractBytes() {
      java.lang.Object ref = contract_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        contract_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string contract = 2;</code>
     * @param value The contract to set.
     * @return This builder for chaining.
     */
    public Builder setContract(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      contract_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>string contract = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearContract() {
      contract_ = getDefaultInstance().getContract();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <code>string contract = 2;</code>
     * @param value The bytes for contract to set.
     * @return This builder for chaining.
     */
    public Builder setContractBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      contract_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>bytes data = 3;</code>
     * @return The data.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getData() {
      return data_;
    }
    /**
     * <code>bytes data = 3;</code>
     * @param value The data to set.
     * @return This builder for chaining.
     */
    public Builder setData(com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      data_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>bytes data = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearData() {
      bitField0_ = (bitField0_ & ~0x00000004);
      data_ = getDefaultInstance().getData();
      onChanged();
      return this;
    }

    private java.util.List<com.github.iotexproject.grpc.types.AccessTuple> accessList_ =
      java.util.Collections.emptyList();
    private void ensureAccessListIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        accessList_ = new java.util.ArrayList<com.github.iotexproject.grpc.types.AccessTuple>(accessList_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        com.github.iotexproject.grpc.types.AccessTuple, com.github.iotexproject.grpc.types.AccessTuple.Builder, com.github.iotexproject.grpc.types.AccessTupleOrBuilder> accessListBuilder_;

    /**
     * <code>repeated .iotextypes.AccessTuple accessList = 4;</code>
     */
    public java.util.List<com.github.iotexproject.grpc.types.AccessTuple> getAccessListList() {
      if (accessListBuilder_ == null) {
        return java.util.Collections.unmodifiableList(accessList_);
      } else {
        return accessListBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .iotextypes.AccessTuple accessList = 4;</code>
     */
    public int getAccessListCount() {
      if (accessListBuilder_ == null) {
        return accessList_.size();
      } else {
        return accessListBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .iotextypes.AccessTuple accessList = 4;</code>
     */
    public com.github.iotexproject.grpc.types.AccessTuple getAccessList(int index) {
      if (accessListBuilder_ == null) {
        return accessList_.get(index);
      } else {
        return accessListBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .iotextypes.AccessTuple accessList = 4;</code>
     */
    public Builder setAccessList(
        int index, com.github.iotexproject.grpc.types.AccessTuple value) {
      if (accessListBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAccessListIsMutable();
        accessList_.set(index, value);
        onChanged();
      } else {
        accessListBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .iotextypes.AccessTuple accessList = 4;</code>
     */
    public Builder setAccessList(
        int index, com.github.iotexproject.grpc.types.AccessTuple.Builder builderForValue) {
      if (accessListBuilder_ == null) {
        ensureAccessListIsMutable();
        accessList_.set(index, builderForValue.build());
        onChanged();
      } else {
        accessListBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .iotextypes.AccessTuple accessList = 4;</code>
     */
    public Builder addAccessList(com.github.iotexproject.grpc.types.AccessTuple value) {
      if (accessListBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAccessListIsMutable();
        accessList_.add(value);
        onChanged();
      } else {
        accessListBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .iotextypes.AccessTuple accessList = 4;</code>
     */
    public Builder addAccessList(
        int index, com.github.iotexproject.grpc.types.AccessTuple value) {
      if (accessListBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAccessListIsMutable();
        accessList_.add(index, value);
        onChanged();
      } else {
        accessListBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .iotextypes.AccessTuple accessList = 4;</code>
     */
    public Builder addAccessList(
        com.github.iotexproject.grpc.types.AccessTuple.Builder builderForValue) {
      if (accessListBuilder_ == null) {
        ensureAccessListIsMutable();
        accessList_.add(builderForValue.build());
        onChanged();
      } else {
        accessListBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .iotextypes.AccessTuple accessList = 4;</code>
     */
    public Builder addAccessList(
        int index, com.github.iotexproject.grpc.types.AccessTuple.Builder builderForValue) {
      if (accessListBuilder_ == null) {
        ensureAccessListIsMutable();
        accessList_.add(index, builderForValue.build());
        onChanged();
      } else {
        accessListBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .iotextypes.AccessTuple accessList = 4;</code>
     */
    public Builder addAllAccessList(
        java.lang.Iterable<? extends com.github.iotexproject.grpc.types.AccessTuple> values) {
      if (accessListBuilder_ == null) {
        ensureAccessListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, accessList_);
        onChanged();
      } else {
        accessListBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .iotextypes.AccessTuple accessList = 4;</code>
     */
    public Builder clearAccessList() {
      if (accessListBuilder_ == null) {
        accessList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        accessListBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .iotextypes.AccessTuple accessList = 4;</code>
     */
    public Builder removeAccessList(int index) {
      if (accessListBuilder_ == null) {
        ensureAccessListIsMutable();
        accessList_.remove(index);
        onChanged();
      } else {
        accessListBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .iotextypes.AccessTuple accessList = 4;</code>
     */
    public com.github.iotexproject.grpc.types.AccessTuple.Builder getAccessListBuilder(
        int index) {
      return getAccessListFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .iotextypes.AccessTuple accessList = 4;</code>
     */
    public com.github.iotexproject.grpc.types.AccessTupleOrBuilder getAccessListOrBuilder(
        int index) {
      if (accessListBuilder_ == null) {
        return accessList_.get(index);  } else {
        return accessListBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .iotextypes.AccessTuple accessList = 4;</code>
     */
    public java.util.List<? extends com.github.iotexproject.grpc.types.AccessTupleOrBuilder> 
         getAccessListOrBuilderList() {
      if (accessListBuilder_ != null) {
        return accessListBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(accessList_);
      }
    }
    /**
     * <code>repeated .iotextypes.AccessTuple accessList = 4;</code>
     */
    public com.github.iotexproject.grpc.types.AccessTuple.Builder addAccessListBuilder() {
      return getAccessListFieldBuilder().addBuilder(
          com.github.iotexproject.grpc.types.AccessTuple.getDefaultInstance());
    }
    /**
     * <code>repeated .iotextypes.AccessTuple accessList = 4;</code>
     */
    public com.github.iotexproject.grpc.types.AccessTuple.Builder addAccessListBuilder(
        int index) {
      return getAccessListFieldBuilder().addBuilder(
          index, com.github.iotexproject.grpc.types.AccessTuple.getDefaultInstance());
    }
    /**
     * <code>repeated .iotextypes.AccessTuple accessList = 4;</code>
     */
    public java.util.List<com.github.iotexproject.grpc.types.AccessTuple.Builder> 
         getAccessListBuilderList() {
      return getAccessListFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        com.github.iotexproject.grpc.types.AccessTuple, com.github.iotexproject.grpc.types.AccessTuple.Builder, com.github.iotexproject.grpc.types.AccessTupleOrBuilder> 
        getAccessListFieldBuilder() {
      if (accessListBuilder_ == null) {
        accessListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            com.github.iotexproject.grpc.types.AccessTuple, com.github.iotexproject.grpc.types.AccessTuple.Builder, com.github.iotexproject.grpc.types.AccessTupleOrBuilder>(
                accessList_,
                ((bitField0_ & 0x00000008) != 0),
                getParentForChildren(),
                isClean());
        accessList_ = null;
      }
      return accessListBuilder_;
    }

    // @@protoc_insertion_point(builder_scope:iotextypes.Execution)
  }

  // @@protoc_insertion_point(class_scope:iotextypes.Execution)
  private static final com.github.iotexproject.grpc.types.Execution DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.github.iotexproject.grpc.types.Execution();
  }

  public static com.github.iotexproject.grpc.types.Execution getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Execution>
      PARSER = new com.google.protobuf.AbstractParser<Execution>() {
    @java.lang.Override
    public Execution parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Execution> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Execution> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.github.iotexproject.grpc.types.Execution getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

