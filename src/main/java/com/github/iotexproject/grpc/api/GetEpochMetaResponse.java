// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: proto/api/api.proto
// Protobuf Java Version: 4.29.1

package com.github.iotexproject.grpc.api;

/**
 * Protobuf type {@code iotexapi.GetEpochMetaResponse}
 */
public final class GetEpochMetaResponse extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:iotexapi.GetEpochMetaResponse)
    GetEpochMetaResponseOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 1,
      /* suffix= */ "",
      GetEpochMetaResponse.class.getName());
  }
  // Use GetEpochMetaResponse.newBuilder() to construct.
  private GetEpochMetaResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private GetEpochMetaResponse() {
    blockProducersInfo_ = java.util.Collections.emptyList();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.github.iotexproject.grpc.api.Api.internal_static_iotexapi_GetEpochMetaResponse_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.github.iotexproject.grpc.api.Api.internal_static_iotexapi_GetEpochMetaResponse_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.github.iotexproject.grpc.api.GetEpochMetaResponse.class, com.github.iotexproject.grpc.api.GetEpochMetaResponse.Builder.class);
  }

  private int bitField0_;
  public static final int EPOCHDATA_FIELD_NUMBER = 1;
  private com.github.iotexproject.grpc.types.EpochData epochData_;
  /**
   * <code>.iotextypes.EpochData epochData = 1;</code>
   * @return Whether the epochData field is set.
   */
  @java.lang.Override
  public boolean hasEpochData() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <code>.iotextypes.EpochData epochData = 1;</code>
   * @return The epochData.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.EpochData getEpochData() {
    return epochData_ == null ? com.github.iotexproject.grpc.types.EpochData.getDefaultInstance() : epochData_;
  }
  /**
   * <code>.iotextypes.EpochData epochData = 1;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.EpochDataOrBuilder getEpochDataOrBuilder() {
    return epochData_ == null ? com.github.iotexproject.grpc.types.EpochData.getDefaultInstance() : epochData_;
  }

  public static final int TOTALBLOCKS_FIELD_NUMBER = 2;
  private long totalBlocks_ = 0L;
  /**
   * <code>uint64 totalBlocks = 2;</code>
   * @return The totalBlocks.
   */
  @java.lang.Override
  public long getTotalBlocks() {
    return totalBlocks_;
  }

  public static final int BLOCKPRODUCERSINFO_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private java.util.List<com.github.iotexproject.grpc.api.BlockProducerInfo> blockProducersInfo_;
  /**
   * <code>repeated .iotexapi.BlockProducerInfo blockProducersInfo = 3;</code>
   */
  @java.lang.Override
  public java.util.List<com.github.iotexproject.grpc.api.BlockProducerInfo> getBlockProducersInfoList() {
    return blockProducersInfo_;
  }
  /**
   * <code>repeated .iotexapi.BlockProducerInfo blockProducersInfo = 3;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.github.iotexproject.grpc.api.BlockProducerInfoOrBuilder> 
      getBlockProducersInfoOrBuilderList() {
    return blockProducersInfo_;
  }
  /**
   * <code>repeated .iotexapi.BlockProducerInfo blockProducersInfo = 3;</code>
   */
  @java.lang.Override
  public int getBlockProducersInfoCount() {
    return blockProducersInfo_.size();
  }
  /**
   * <code>repeated .iotexapi.BlockProducerInfo blockProducersInfo = 3;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.api.BlockProducerInfo getBlockProducersInfo(int index) {
    return blockProducersInfo_.get(index);
  }
  /**
   * <code>repeated .iotexapi.BlockProducerInfo blockProducersInfo = 3;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.api.BlockProducerInfoOrBuilder getBlockProducersInfoOrBuilder(
      int index) {
    return blockProducersInfo_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(1, getEpochData());
    }
    if (totalBlocks_ != 0L) {
      output.writeUInt64(2, totalBlocks_);
    }
    for (int i = 0; i < blockProducersInfo_.size(); i++) {
      output.writeMessage(3, blockProducersInfo_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getEpochData());
    }
    if (totalBlocks_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(2, totalBlocks_);
    }
    for (int i = 0; i < blockProducersInfo_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, blockProducersInfo_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.github.iotexproject.grpc.api.GetEpochMetaResponse)) {
      return super.equals(obj);
    }
    com.github.iotexproject.grpc.api.GetEpochMetaResponse other = (com.github.iotexproject.grpc.api.GetEpochMetaResponse) obj;

    if (hasEpochData() != other.hasEpochData()) return false;
    if (hasEpochData()) {
      if (!getEpochData()
          .equals(other.getEpochData())) return false;
    }
    if (getTotalBlocks()
        != other.getTotalBlocks()) return false;
    if (!getBlockProducersInfoList()
        .equals(other.getBlockProducersInfoList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasEpochData()) {
      hash = (37 * hash) + EPOCHDATA_FIELD_NUMBER;
      hash = (53 * hash) + getEpochData().hashCode();
    }
    hash = (37 * hash) + TOTALBLOCKS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getTotalBlocks());
    if (getBlockProducersInfoCount() > 0) {
      hash = (37 * hash) + BLOCKPRODUCERSINFO_FIELD_NUMBER;
      hash = (53 * hash) + getBlockProducersInfoList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.github.iotexproject.grpc.api.GetEpochMetaResponse parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.iotexproject.grpc.api.GetEpochMetaResponse parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.iotexproject.grpc.api.GetEpochMetaResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.iotexproject.grpc.api.GetEpochMetaResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.iotexproject.grpc.api.GetEpochMetaResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.iotexproject.grpc.api.GetEpochMetaResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.iotexproject.grpc.api.GetEpochMetaResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.github.iotexproject.grpc.api.GetEpochMetaResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.github.iotexproject.grpc.api.GetEpochMetaResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.github.iotexproject.grpc.api.GetEpochMetaResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.github.iotexproject.grpc.api.GetEpochMetaResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.github.iotexproject.grpc.api.GetEpochMetaResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.github.iotexproject.grpc.api.GetEpochMetaResponse prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code iotexapi.GetEpochMetaResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:iotexapi.GetEpochMetaResponse)
      com.github.iotexproject.grpc.api.GetEpochMetaResponseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.iotexproject.grpc.api.Api.internal_static_iotexapi_GetEpochMetaResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.iotexproject.grpc.api.Api.internal_static_iotexapi_GetEpochMetaResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.iotexproject.grpc.api.GetEpochMetaResponse.class, com.github.iotexproject.grpc.api.GetEpochMetaResponse.Builder.class);
    }

    // Construct using com.github.iotexproject.grpc.api.GetEpochMetaResponse.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage
              .alwaysUseFieldBuilders) {
        getEpochDataFieldBuilder();
        getBlockProducersInfoFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      epochData_ = null;
      if (epochDataBuilder_ != null) {
        epochDataBuilder_.dispose();
        epochDataBuilder_ = null;
      }
      totalBlocks_ = 0L;
      if (blockProducersInfoBuilder_ == null) {
        blockProducersInfo_ = java.util.Collections.emptyList();
      } else {
        blockProducersInfo_ = null;
        blockProducersInfoBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.github.iotexproject.grpc.api.Api.internal_static_iotexapi_GetEpochMetaResponse_descriptor;
    }

    @java.lang.Override
    public com.github.iotexproject.grpc.api.GetEpochMetaResponse getDefaultInstanceForType() {
      return com.github.iotexproject.grpc.api.GetEpochMetaResponse.getDefaultInstance();
    }

    @java.lang.Override
    public com.github.iotexproject.grpc.api.GetEpochMetaResponse build() {
      com.github.iotexproject.grpc.api.GetEpochMetaResponse result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.github.iotexproject.grpc.api.GetEpochMetaResponse buildPartial() {
      com.github.iotexproject.grpc.api.GetEpochMetaResponse result = new com.github.iotexproject.grpc.api.GetEpochMetaResponse(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.github.iotexproject.grpc.api.GetEpochMetaResponse result) {
      if (blockProducersInfoBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          blockProducersInfo_ = java.util.Collections.unmodifiableList(blockProducersInfo_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.blockProducersInfo_ = blockProducersInfo_;
      } else {
        result.blockProducersInfo_ = blockProducersInfoBuilder_.build();
      }
    }

    private void buildPartial0(com.github.iotexproject.grpc.api.GetEpochMetaResponse result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.epochData_ = epochDataBuilder_ == null
            ? epochData_
            : epochDataBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.totalBlocks_ = totalBlocks_;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.github.iotexproject.grpc.api.GetEpochMetaResponse) {
        return mergeFrom((com.github.iotexproject.grpc.api.GetEpochMetaResponse)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.github.iotexproject.grpc.api.GetEpochMetaResponse other) {
      if (other == com.github.iotexproject.grpc.api.GetEpochMetaResponse.getDefaultInstance()) return this;
      if (other.hasEpochData()) {
        mergeEpochData(other.getEpochData());
      }
      if (other.getTotalBlocks() != 0L) {
        setTotalBlocks(other.getTotalBlocks());
      }
      if (blockProducersInfoBuilder_ == null) {
        if (!other.blockProducersInfo_.isEmpty()) {
          if (blockProducersInfo_.isEmpty()) {
            blockProducersInfo_ = other.blockProducersInfo_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureBlockProducersInfoIsMutable();
            blockProducersInfo_.addAll(other.blockProducersInfo_);
          }
          onChanged();
        }
      } else {
        if (!other.blockProducersInfo_.isEmpty()) {
          if (blockProducersInfoBuilder_.isEmpty()) {
            blockProducersInfoBuilder_.dispose();
            blockProducersInfoBuilder_ = null;
            blockProducersInfo_ = other.blockProducersInfo_;
            bitField0_ = (bitField0_ & ~0x00000004);
            blockProducersInfoBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getBlockProducersInfoFieldBuilder() : null;
          } else {
            blockProducersInfoBuilder_.addAllMessages(other.blockProducersInfo_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getEpochDataFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 16: {
              totalBlocks_ = input.readUInt64();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 26: {
              com.github.iotexproject.grpc.api.BlockProducerInfo m =
                  input.readMessage(
                      com.github.iotexproject.grpc.api.BlockProducerInfo.parser(),
                      extensionRegistry);
              if (blockProducersInfoBuilder_ == null) {
                ensureBlockProducersInfoIsMutable();
                blockProducersInfo_.add(m);
              } else {
                blockProducersInfoBuilder_.addMessage(m);
              }
              break;
            } // case 26
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.github.iotexproject.grpc.types.EpochData epochData_;
    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.EpochData, com.github.iotexproject.grpc.types.EpochData.Builder, com.github.iotexproject.grpc.types.EpochDataOrBuilder> epochDataBuilder_;
    /**
     * <code>.iotextypes.EpochData epochData = 1;</code>
     * @return Whether the epochData field is set.
     */
    public boolean hasEpochData() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>.iotextypes.EpochData epochData = 1;</code>
     * @return The epochData.
     */
    public com.github.iotexproject.grpc.types.EpochData getEpochData() {
      if (epochDataBuilder_ == null) {
        return epochData_ == null ? com.github.iotexproject.grpc.types.EpochData.getDefaultInstance() : epochData_;
      } else {
        return epochDataBuilder_.getMessage();
      }
    }
    /**
     * <code>.iotextypes.EpochData epochData = 1;</code>
     */
    public Builder setEpochData(com.github.iotexproject.grpc.types.EpochData value) {
      if (epochDataBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        epochData_ = value;
      } else {
        epochDataBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>.iotextypes.EpochData epochData = 1;</code>
     */
    public Builder setEpochData(
        com.github.iotexproject.grpc.types.EpochData.Builder builderForValue) {
      if (epochDataBuilder_ == null) {
        epochData_ = builderForValue.build();
      } else {
        epochDataBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>.iotextypes.EpochData epochData = 1;</code>
     */
    public Builder mergeEpochData(com.github.iotexproject.grpc.types.EpochData value) {
      if (epochDataBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          epochData_ != null &&
          epochData_ != com.github.iotexproject.grpc.types.EpochData.getDefaultInstance()) {
          getEpochDataBuilder().mergeFrom(value);
        } else {
          epochData_ = value;
        }
      } else {
        epochDataBuilder_.mergeFrom(value);
      }
      if (epochData_ != null) {
        bitField0_ |= 0x00000001;
        onChanged();
      }
      return this;
    }
    /**
     * <code>.iotextypes.EpochData epochData = 1;</code>
     */
    public Builder clearEpochData() {
      bitField0_ = (bitField0_ & ~0x00000001);
      epochData_ = null;
      if (epochDataBuilder_ != null) {
        epochDataBuilder_.dispose();
        epochDataBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.iotextypes.EpochData epochData = 1;</code>
     */
    public com.github.iotexproject.grpc.types.EpochData.Builder getEpochDataBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getEpochDataFieldBuilder().getBuilder();
    }
    /**
     * <code>.iotextypes.EpochData epochData = 1;</code>
     */
    public com.github.iotexproject.grpc.types.EpochDataOrBuilder getEpochDataOrBuilder() {
      if (epochDataBuilder_ != null) {
        return epochDataBuilder_.getMessageOrBuilder();
      } else {
        return epochData_ == null ?
            com.github.iotexproject.grpc.types.EpochData.getDefaultInstance() : epochData_;
      }
    }
    /**
     * <code>.iotextypes.EpochData epochData = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.types.EpochData, com.github.iotexproject.grpc.types.EpochData.Builder, com.github.iotexproject.grpc.types.EpochDataOrBuilder> 
        getEpochDataFieldBuilder() {
      if (epochDataBuilder_ == null) {
        epochDataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.iotexproject.grpc.types.EpochData, com.github.iotexproject.grpc.types.EpochData.Builder, com.github.iotexproject.grpc.types.EpochDataOrBuilder>(
                getEpochData(),
                getParentForChildren(),
                isClean());
        epochData_ = null;
      }
      return epochDataBuilder_;
    }

    private long totalBlocks_ ;
    /**
     * <code>uint64 totalBlocks = 2;</code>
     * @return The totalBlocks.
     */
    @java.lang.Override
    public long getTotalBlocks() {
      return totalBlocks_;
    }
    /**
     * <code>uint64 totalBlocks = 2;</code>
     * @param value The totalBlocks to set.
     * @return This builder for chaining.
     */
    public Builder setTotalBlocks(long value) {

      totalBlocks_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>uint64 totalBlocks = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearTotalBlocks() {
      bitField0_ = (bitField0_ & ~0x00000002);
      totalBlocks_ = 0L;
      onChanged();
      return this;
    }

    private java.util.List<com.github.iotexproject.grpc.api.BlockProducerInfo> blockProducersInfo_ =
      java.util.Collections.emptyList();
    private void ensureBlockProducersInfoIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        blockProducersInfo_ = new java.util.ArrayList<com.github.iotexproject.grpc.api.BlockProducerInfo>(blockProducersInfo_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        com.github.iotexproject.grpc.api.BlockProducerInfo, com.github.iotexproject.grpc.api.BlockProducerInfo.Builder, com.github.iotexproject.grpc.api.BlockProducerInfoOrBuilder> blockProducersInfoBuilder_;

    /**
     * <code>repeated .iotexapi.BlockProducerInfo blockProducersInfo = 3;</code>
     */
    public java.util.List<com.github.iotexproject.grpc.api.BlockProducerInfo> getBlockProducersInfoList() {
      if (blockProducersInfoBuilder_ == null) {
        return java.util.Collections.unmodifiableList(blockProducersInfo_);
      } else {
        return blockProducersInfoBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .iotexapi.BlockProducerInfo blockProducersInfo = 3;</code>
     */
    public int getBlockProducersInfoCount() {
      if (blockProducersInfoBuilder_ == null) {
        return blockProducersInfo_.size();
      } else {
        return blockProducersInfoBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .iotexapi.BlockProducerInfo blockProducersInfo = 3;</code>
     */
    public com.github.iotexproject.grpc.api.BlockProducerInfo getBlockProducersInfo(int index) {
      if (blockProducersInfoBuilder_ == null) {
        return blockProducersInfo_.get(index);
      } else {
        return blockProducersInfoBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .iotexapi.BlockProducerInfo blockProducersInfo = 3;</code>
     */
    public Builder setBlockProducersInfo(
        int index, com.github.iotexproject.grpc.api.BlockProducerInfo value) {
      if (blockProducersInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBlockProducersInfoIsMutable();
        blockProducersInfo_.set(index, value);
        onChanged();
      } else {
        blockProducersInfoBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .iotexapi.BlockProducerInfo blockProducersInfo = 3;</code>
     */
    public Builder setBlockProducersInfo(
        int index, com.github.iotexproject.grpc.api.BlockProducerInfo.Builder builderForValue) {
      if (blockProducersInfoBuilder_ == null) {
        ensureBlockProducersInfoIsMutable();
        blockProducersInfo_.set(index, builderForValue.build());
        onChanged();
      } else {
        blockProducersInfoBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .iotexapi.BlockProducerInfo blockProducersInfo = 3;</code>
     */
    public Builder addBlockProducersInfo(com.github.iotexproject.grpc.api.BlockProducerInfo value) {
      if (blockProducersInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBlockProducersInfoIsMutable();
        blockProducersInfo_.add(value);
        onChanged();
      } else {
        blockProducersInfoBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .iotexapi.BlockProducerInfo blockProducersInfo = 3;</code>
     */
    public Builder addBlockProducersInfo(
        int index, com.github.iotexproject.grpc.api.BlockProducerInfo value) {
      if (blockProducersInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBlockProducersInfoIsMutable();
        blockProducersInfo_.add(index, value);
        onChanged();
      } else {
        blockProducersInfoBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .iotexapi.BlockProducerInfo blockProducersInfo = 3;</code>
     */
    public Builder addBlockProducersInfo(
        com.github.iotexproject.grpc.api.BlockProducerInfo.Builder builderForValue) {
      if (blockProducersInfoBuilder_ == null) {
        ensureBlockProducersInfoIsMutable();
        blockProducersInfo_.add(builderForValue.build());
        onChanged();
      } else {
        blockProducersInfoBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .iotexapi.BlockProducerInfo blockProducersInfo = 3;</code>
     */
    public Builder addBlockProducersInfo(
        int index, com.github.iotexproject.grpc.api.BlockProducerInfo.Builder builderForValue) {
      if (blockProducersInfoBuilder_ == null) {
        ensureBlockProducersInfoIsMutable();
        blockProducersInfo_.add(index, builderForValue.build());
        onChanged();
      } else {
        blockProducersInfoBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .iotexapi.BlockProducerInfo blockProducersInfo = 3;</code>
     */
    public Builder addAllBlockProducersInfo(
        java.lang.Iterable<? extends com.github.iotexproject.grpc.api.BlockProducerInfo> values) {
      if (blockProducersInfoBuilder_ == null) {
        ensureBlockProducersInfoIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, blockProducersInfo_);
        onChanged();
      } else {
        blockProducersInfoBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .iotexapi.BlockProducerInfo blockProducersInfo = 3;</code>
     */
    public Builder clearBlockProducersInfo() {
      if (blockProducersInfoBuilder_ == null) {
        blockProducersInfo_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        blockProducersInfoBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .iotexapi.BlockProducerInfo blockProducersInfo = 3;</code>
     */
    public Builder removeBlockProducersInfo(int index) {
      if (blockProducersInfoBuilder_ == null) {
        ensureBlockProducersInfoIsMutable();
        blockProducersInfo_.remove(index);
        onChanged();
      } else {
        blockProducersInfoBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .iotexapi.BlockProducerInfo blockProducersInfo = 3;</code>
     */
    public com.github.iotexproject.grpc.api.BlockProducerInfo.Builder getBlockProducersInfoBuilder(
        int index) {
      return getBlockProducersInfoFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .iotexapi.BlockProducerInfo blockProducersInfo = 3;</code>
     */
    public com.github.iotexproject.grpc.api.BlockProducerInfoOrBuilder getBlockProducersInfoOrBuilder(
        int index) {
      if (blockProducersInfoBuilder_ == null) {
        return blockProducersInfo_.get(index);  } else {
        return blockProducersInfoBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .iotexapi.BlockProducerInfo blockProducersInfo = 3;</code>
     */
    public java.util.List<? extends com.github.iotexproject.grpc.api.BlockProducerInfoOrBuilder> 
         getBlockProducersInfoOrBuilderList() {
      if (blockProducersInfoBuilder_ != null) {
        return blockProducersInfoBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(blockProducersInfo_);
      }
    }
    /**
     * <code>repeated .iotexapi.BlockProducerInfo blockProducersInfo = 3;</code>
     */
    public com.github.iotexproject.grpc.api.BlockProducerInfo.Builder addBlockProducersInfoBuilder() {
      return getBlockProducersInfoFieldBuilder().addBuilder(
          com.github.iotexproject.grpc.api.BlockProducerInfo.getDefaultInstance());
    }
    /**
     * <code>repeated .iotexapi.BlockProducerInfo blockProducersInfo = 3;</code>
     */
    public com.github.iotexproject.grpc.api.BlockProducerInfo.Builder addBlockProducersInfoBuilder(
        int index) {
      return getBlockProducersInfoFieldBuilder().addBuilder(
          index, com.github.iotexproject.grpc.api.BlockProducerInfo.getDefaultInstance());
    }
    /**
     * <code>repeated .iotexapi.BlockProducerInfo blockProducersInfo = 3;</code>
     */
    public java.util.List<com.github.iotexproject.grpc.api.BlockProducerInfo.Builder> 
         getBlockProducersInfoBuilderList() {
      return getBlockProducersInfoFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        com.github.iotexproject.grpc.api.BlockProducerInfo, com.github.iotexproject.grpc.api.BlockProducerInfo.Builder, com.github.iotexproject.grpc.api.BlockProducerInfoOrBuilder> 
        getBlockProducersInfoFieldBuilder() {
      if (blockProducersInfoBuilder_ == null) {
        blockProducersInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            com.github.iotexproject.grpc.api.BlockProducerInfo, com.github.iotexproject.grpc.api.BlockProducerInfo.Builder, com.github.iotexproject.grpc.api.BlockProducerInfoOrBuilder>(
                blockProducersInfo_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        blockProducersInfo_ = null;
      }
      return blockProducersInfoBuilder_;
    }

    // @@protoc_insertion_point(builder_scope:iotexapi.GetEpochMetaResponse)
  }

  // @@protoc_insertion_point(class_scope:iotexapi.GetEpochMetaResponse)
  private static final com.github.iotexproject.grpc.api.GetEpochMetaResponse DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.github.iotexproject.grpc.api.GetEpochMetaResponse();
  }

  public static com.github.iotexproject.grpc.api.GetEpochMetaResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<GetEpochMetaResponse>
      PARSER = new com.google.protobuf.AbstractParser<GetEpochMetaResponse>() {
    @java.lang.Override
    public GetEpochMetaResponse parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<GetEpochMetaResponse> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<GetEpochMetaResponse> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.github.iotexproject.grpc.api.GetEpochMetaResponse getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

