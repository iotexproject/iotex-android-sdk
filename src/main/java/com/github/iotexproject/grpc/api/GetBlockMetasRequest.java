// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: proto/api/api.proto
// Protobuf Java Version: 4.29.1

package com.github.iotexproject.grpc.api;

/**
 * Protobuf type {@code iotexapi.GetBlockMetasRequest}
 */
public final class GetBlockMetasRequest extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:iotexapi.GetBlockMetasRequest)
    GetBlockMetasRequestOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 1,
      /* suffix= */ "",
      GetBlockMetasRequest.class.getName());
  }
  // Use GetBlockMetasRequest.newBuilder() to construct.
  private GetBlockMetasRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private GetBlockMetasRequest() {
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.github.iotexproject.grpc.api.Api.internal_static_iotexapi_GetBlockMetasRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.github.iotexproject.grpc.api.Api.internal_static_iotexapi_GetBlockMetasRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.github.iotexproject.grpc.api.GetBlockMetasRequest.class, com.github.iotexproject.grpc.api.GetBlockMetasRequest.Builder.class);
  }

  private int lookupCase_ = 0;
  @SuppressWarnings("serial")
  private java.lang.Object lookup_;
  public enum LookupCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    BYINDEX(1),
    BYHASH(2),
    LOOKUP_NOT_SET(0);
    private final int value;
    private LookupCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static LookupCase valueOf(int value) {
      return forNumber(value);
    }

    public static LookupCase forNumber(int value) {
      switch (value) {
        case 1: return BYINDEX;
        case 2: return BYHASH;
        case 0: return LOOKUP_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public LookupCase
  getLookupCase() {
    return LookupCase.forNumber(
        lookupCase_);
  }

  public static final int BYINDEX_FIELD_NUMBER = 1;
  /**
   * <code>.iotexapi.GetBlockMetasByIndexRequest byIndex = 1;</code>
   * @return Whether the byIndex field is set.
   */
  @java.lang.Override
  public boolean hasByIndex() {
    return lookupCase_ == 1;
  }
  /**
   * <code>.iotexapi.GetBlockMetasByIndexRequest byIndex = 1;</code>
   * @return The byIndex.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.api.GetBlockMetasByIndexRequest getByIndex() {
    if (lookupCase_ == 1) {
       return (com.github.iotexproject.grpc.api.GetBlockMetasByIndexRequest) lookup_;
    }
    return com.github.iotexproject.grpc.api.GetBlockMetasByIndexRequest.getDefaultInstance();
  }
  /**
   * <code>.iotexapi.GetBlockMetasByIndexRequest byIndex = 1;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.api.GetBlockMetasByIndexRequestOrBuilder getByIndexOrBuilder() {
    if (lookupCase_ == 1) {
       return (com.github.iotexproject.grpc.api.GetBlockMetasByIndexRequest) lookup_;
    }
    return com.github.iotexproject.grpc.api.GetBlockMetasByIndexRequest.getDefaultInstance();
  }

  public static final int BYHASH_FIELD_NUMBER = 2;
  /**
   * <code>.iotexapi.GetBlockMetaByHashRequest byHash = 2;</code>
   * @return Whether the byHash field is set.
   */
  @java.lang.Override
  public boolean hasByHash() {
    return lookupCase_ == 2;
  }
  /**
   * <code>.iotexapi.GetBlockMetaByHashRequest byHash = 2;</code>
   * @return The byHash.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.api.GetBlockMetaByHashRequest getByHash() {
    if (lookupCase_ == 2) {
       return (com.github.iotexproject.grpc.api.GetBlockMetaByHashRequest) lookup_;
    }
    return com.github.iotexproject.grpc.api.GetBlockMetaByHashRequest.getDefaultInstance();
  }
  /**
   * <code>.iotexapi.GetBlockMetaByHashRequest byHash = 2;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.api.GetBlockMetaByHashRequestOrBuilder getByHashOrBuilder() {
    if (lookupCase_ == 2) {
       return (com.github.iotexproject.grpc.api.GetBlockMetaByHashRequest) lookup_;
    }
    return com.github.iotexproject.grpc.api.GetBlockMetaByHashRequest.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (lookupCase_ == 1) {
      output.writeMessage(1, (com.github.iotexproject.grpc.api.GetBlockMetasByIndexRequest) lookup_);
    }
    if (lookupCase_ == 2) {
      output.writeMessage(2, (com.github.iotexproject.grpc.api.GetBlockMetaByHashRequest) lookup_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (lookupCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (com.github.iotexproject.grpc.api.GetBlockMetasByIndexRequest) lookup_);
    }
    if (lookupCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (com.github.iotexproject.grpc.api.GetBlockMetaByHashRequest) lookup_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.github.iotexproject.grpc.api.GetBlockMetasRequest)) {
      return super.equals(obj);
    }
    com.github.iotexproject.grpc.api.GetBlockMetasRequest other = (com.github.iotexproject.grpc.api.GetBlockMetasRequest) obj;

    if (!getLookupCase().equals(other.getLookupCase())) return false;
    switch (lookupCase_) {
      case 1:
        if (!getByIndex()
            .equals(other.getByIndex())) return false;
        break;
      case 2:
        if (!getByHash()
            .equals(other.getByHash())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (lookupCase_) {
      case 1:
        hash = (37 * hash) + BYINDEX_FIELD_NUMBER;
        hash = (53 * hash) + getByIndex().hashCode();
        break;
      case 2:
        hash = (37 * hash) + BYHASH_FIELD_NUMBER;
        hash = (53 * hash) + getByHash().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.github.iotexproject.grpc.api.GetBlockMetasRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.iotexproject.grpc.api.GetBlockMetasRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.iotexproject.grpc.api.GetBlockMetasRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.iotexproject.grpc.api.GetBlockMetasRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.iotexproject.grpc.api.GetBlockMetasRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.iotexproject.grpc.api.GetBlockMetasRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.iotexproject.grpc.api.GetBlockMetasRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.github.iotexproject.grpc.api.GetBlockMetasRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.github.iotexproject.grpc.api.GetBlockMetasRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.github.iotexproject.grpc.api.GetBlockMetasRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.github.iotexproject.grpc.api.GetBlockMetasRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.github.iotexproject.grpc.api.GetBlockMetasRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.github.iotexproject.grpc.api.GetBlockMetasRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code iotexapi.GetBlockMetasRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:iotexapi.GetBlockMetasRequest)
      com.github.iotexproject.grpc.api.GetBlockMetasRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.iotexproject.grpc.api.Api.internal_static_iotexapi_GetBlockMetasRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.iotexproject.grpc.api.Api.internal_static_iotexapi_GetBlockMetasRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.iotexproject.grpc.api.GetBlockMetasRequest.class, com.github.iotexproject.grpc.api.GetBlockMetasRequest.Builder.class);
    }

    // Construct using com.github.iotexproject.grpc.api.GetBlockMetasRequest.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (byIndexBuilder_ != null) {
        byIndexBuilder_.clear();
      }
      if (byHashBuilder_ != null) {
        byHashBuilder_.clear();
      }
      lookupCase_ = 0;
      lookup_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.github.iotexproject.grpc.api.Api.internal_static_iotexapi_GetBlockMetasRequest_descriptor;
    }

    @java.lang.Override
    public com.github.iotexproject.grpc.api.GetBlockMetasRequest getDefaultInstanceForType() {
      return com.github.iotexproject.grpc.api.GetBlockMetasRequest.getDefaultInstance();
    }

    @java.lang.Override
    public com.github.iotexproject.grpc.api.GetBlockMetasRequest build() {
      com.github.iotexproject.grpc.api.GetBlockMetasRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.github.iotexproject.grpc.api.GetBlockMetasRequest buildPartial() {
      com.github.iotexproject.grpc.api.GetBlockMetasRequest result = new com.github.iotexproject.grpc.api.GetBlockMetasRequest(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartial0(com.github.iotexproject.grpc.api.GetBlockMetasRequest result) {
      int from_bitField0_ = bitField0_;
    }

    private void buildPartialOneofs(com.github.iotexproject.grpc.api.GetBlockMetasRequest result) {
      result.lookupCase_ = lookupCase_;
      result.lookup_ = this.lookup_;
      if (lookupCase_ == 1 &&
          byIndexBuilder_ != null) {
        result.lookup_ = byIndexBuilder_.build();
      }
      if (lookupCase_ == 2 &&
          byHashBuilder_ != null) {
        result.lookup_ = byHashBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.github.iotexproject.grpc.api.GetBlockMetasRequest) {
        return mergeFrom((com.github.iotexproject.grpc.api.GetBlockMetasRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.github.iotexproject.grpc.api.GetBlockMetasRequest other) {
      if (other == com.github.iotexproject.grpc.api.GetBlockMetasRequest.getDefaultInstance()) return this;
      switch (other.getLookupCase()) {
        case BYINDEX: {
          mergeByIndex(other.getByIndex());
          break;
        }
        case BYHASH: {
          mergeByHash(other.getByHash());
          break;
        }
        case LOOKUP_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getByIndexFieldBuilder().getBuilder(),
                  extensionRegistry);
              lookupCase_ = 1;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getByHashFieldBuilder().getBuilder(),
                  extensionRegistry);
              lookupCase_ = 2;
              break;
            } // case 18
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int lookupCase_ = 0;
    private java.lang.Object lookup_;
    public LookupCase
        getLookupCase() {
      return LookupCase.forNumber(
          lookupCase_);
    }

    public Builder clearLookup() {
      lookupCase_ = 0;
      lookup_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.api.GetBlockMetasByIndexRequest, com.github.iotexproject.grpc.api.GetBlockMetasByIndexRequest.Builder, com.github.iotexproject.grpc.api.GetBlockMetasByIndexRequestOrBuilder> byIndexBuilder_;
    /**
     * <code>.iotexapi.GetBlockMetasByIndexRequest byIndex = 1;</code>
     * @return Whether the byIndex field is set.
     */
    @java.lang.Override
    public boolean hasByIndex() {
      return lookupCase_ == 1;
    }
    /**
     * <code>.iotexapi.GetBlockMetasByIndexRequest byIndex = 1;</code>
     * @return The byIndex.
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.api.GetBlockMetasByIndexRequest getByIndex() {
      if (byIndexBuilder_ == null) {
        if (lookupCase_ == 1) {
          return (com.github.iotexproject.grpc.api.GetBlockMetasByIndexRequest) lookup_;
        }
        return com.github.iotexproject.grpc.api.GetBlockMetasByIndexRequest.getDefaultInstance();
      } else {
        if (lookupCase_ == 1) {
          return byIndexBuilder_.getMessage();
        }
        return com.github.iotexproject.grpc.api.GetBlockMetasByIndexRequest.getDefaultInstance();
      }
    }
    /**
     * <code>.iotexapi.GetBlockMetasByIndexRequest byIndex = 1;</code>
     */
    public Builder setByIndex(com.github.iotexproject.grpc.api.GetBlockMetasByIndexRequest value) {
      if (byIndexBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        lookup_ = value;
        onChanged();
      } else {
        byIndexBuilder_.setMessage(value);
      }
      lookupCase_ = 1;
      return this;
    }
    /**
     * <code>.iotexapi.GetBlockMetasByIndexRequest byIndex = 1;</code>
     */
    public Builder setByIndex(
        com.github.iotexproject.grpc.api.GetBlockMetasByIndexRequest.Builder builderForValue) {
      if (byIndexBuilder_ == null) {
        lookup_ = builderForValue.build();
        onChanged();
      } else {
        byIndexBuilder_.setMessage(builderForValue.build());
      }
      lookupCase_ = 1;
      return this;
    }
    /**
     * <code>.iotexapi.GetBlockMetasByIndexRequest byIndex = 1;</code>
     */
    public Builder mergeByIndex(com.github.iotexproject.grpc.api.GetBlockMetasByIndexRequest value) {
      if (byIndexBuilder_ == null) {
        if (lookupCase_ == 1 &&
            lookup_ != com.github.iotexproject.grpc.api.GetBlockMetasByIndexRequest.getDefaultInstance()) {
          lookup_ = com.github.iotexproject.grpc.api.GetBlockMetasByIndexRequest.newBuilder((com.github.iotexproject.grpc.api.GetBlockMetasByIndexRequest) lookup_)
              .mergeFrom(value).buildPartial();
        } else {
          lookup_ = value;
        }
        onChanged();
      } else {
        if (lookupCase_ == 1) {
          byIndexBuilder_.mergeFrom(value);
        } else {
          byIndexBuilder_.setMessage(value);
        }
      }
      lookupCase_ = 1;
      return this;
    }
    /**
     * <code>.iotexapi.GetBlockMetasByIndexRequest byIndex = 1;</code>
     */
    public Builder clearByIndex() {
      if (byIndexBuilder_ == null) {
        if (lookupCase_ == 1) {
          lookupCase_ = 0;
          lookup_ = null;
          onChanged();
        }
      } else {
        if (lookupCase_ == 1) {
          lookupCase_ = 0;
          lookup_ = null;
        }
        byIndexBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iotexapi.GetBlockMetasByIndexRequest byIndex = 1;</code>
     */
    public com.github.iotexproject.grpc.api.GetBlockMetasByIndexRequest.Builder getByIndexBuilder() {
      return getByIndexFieldBuilder().getBuilder();
    }
    /**
     * <code>.iotexapi.GetBlockMetasByIndexRequest byIndex = 1;</code>
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.api.GetBlockMetasByIndexRequestOrBuilder getByIndexOrBuilder() {
      if ((lookupCase_ == 1) && (byIndexBuilder_ != null)) {
        return byIndexBuilder_.getMessageOrBuilder();
      } else {
        if (lookupCase_ == 1) {
          return (com.github.iotexproject.grpc.api.GetBlockMetasByIndexRequest) lookup_;
        }
        return com.github.iotexproject.grpc.api.GetBlockMetasByIndexRequest.getDefaultInstance();
      }
    }
    /**
     * <code>.iotexapi.GetBlockMetasByIndexRequest byIndex = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.api.GetBlockMetasByIndexRequest, com.github.iotexproject.grpc.api.GetBlockMetasByIndexRequest.Builder, com.github.iotexproject.grpc.api.GetBlockMetasByIndexRequestOrBuilder> 
        getByIndexFieldBuilder() {
      if (byIndexBuilder_ == null) {
        if (!(lookupCase_ == 1)) {
          lookup_ = com.github.iotexproject.grpc.api.GetBlockMetasByIndexRequest.getDefaultInstance();
        }
        byIndexBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.iotexproject.grpc.api.GetBlockMetasByIndexRequest, com.github.iotexproject.grpc.api.GetBlockMetasByIndexRequest.Builder, com.github.iotexproject.grpc.api.GetBlockMetasByIndexRequestOrBuilder>(
                (com.github.iotexproject.grpc.api.GetBlockMetasByIndexRequest) lookup_,
                getParentForChildren(),
                isClean());
        lookup_ = null;
      }
      lookupCase_ = 1;
      onChanged();
      return byIndexBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.api.GetBlockMetaByHashRequest, com.github.iotexproject.grpc.api.GetBlockMetaByHashRequest.Builder, com.github.iotexproject.grpc.api.GetBlockMetaByHashRequestOrBuilder> byHashBuilder_;
    /**
     * <code>.iotexapi.GetBlockMetaByHashRequest byHash = 2;</code>
     * @return Whether the byHash field is set.
     */
    @java.lang.Override
    public boolean hasByHash() {
      return lookupCase_ == 2;
    }
    /**
     * <code>.iotexapi.GetBlockMetaByHashRequest byHash = 2;</code>
     * @return The byHash.
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.api.GetBlockMetaByHashRequest getByHash() {
      if (byHashBuilder_ == null) {
        if (lookupCase_ == 2) {
          return (com.github.iotexproject.grpc.api.GetBlockMetaByHashRequest) lookup_;
        }
        return com.github.iotexproject.grpc.api.GetBlockMetaByHashRequest.getDefaultInstance();
      } else {
        if (lookupCase_ == 2) {
          return byHashBuilder_.getMessage();
        }
        return com.github.iotexproject.grpc.api.GetBlockMetaByHashRequest.getDefaultInstance();
      }
    }
    /**
     * <code>.iotexapi.GetBlockMetaByHashRequest byHash = 2;</code>
     */
    public Builder setByHash(com.github.iotexproject.grpc.api.GetBlockMetaByHashRequest value) {
      if (byHashBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        lookup_ = value;
        onChanged();
      } else {
        byHashBuilder_.setMessage(value);
      }
      lookupCase_ = 2;
      return this;
    }
    /**
     * <code>.iotexapi.GetBlockMetaByHashRequest byHash = 2;</code>
     */
    public Builder setByHash(
        com.github.iotexproject.grpc.api.GetBlockMetaByHashRequest.Builder builderForValue) {
      if (byHashBuilder_ == null) {
        lookup_ = builderForValue.build();
        onChanged();
      } else {
        byHashBuilder_.setMessage(builderForValue.build());
      }
      lookupCase_ = 2;
      return this;
    }
    /**
     * <code>.iotexapi.GetBlockMetaByHashRequest byHash = 2;</code>
     */
    public Builder mergeByHash(com.github.iotexproject.grpc.api.GetBlockMetaByHashRequest value) {
      if (byHashBuilder_ == null) {
        if (lookupCase_ == 2 &&
            lookup_ != com.github.iotexproject.grpc.api.GetBlockMetaByHashRequest.getDefaultInstance()) {
          lookup_ = com.github.iotexproject.grpc.api.GetBlockMetaByHashRequest.newBuilder((com.github.iotexproject.grpc.api.GetBlockMetaByHashRequest) lookup_)
              .mergeFrom(value).buildPartial();
        } else {
          lookup_ = value;
        }
        onChanged();
      } else {
        if (lookupCase_ == 2) {
          byHashBuilder_.mergeFrom(value);
        } else {
          byHashBuilder_.setMessage(value);
        }
      }
      lookupCase_ = 2;
      return this;
    }
    /**
     * <code>.iotexapi.GetBlockMetaByHashRequest byHash = 2;</code>
     */
    public Builder clearByHash() {
      if (byHashBuilder_ == null) {
        if (lookupCase_ == 2) {
          lookupCase_ = 0;
          lookup_ = null;
          onChanged();
        }
      } else {
        if (lookupCase_ == 2) {
          lookupCase_ = 0;
          lookup_ = null;
        }
        byHashBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iotexapi.GetBlockMetaByHashRequest byHash = 2;</code>
     */
    public com.github.iotexproject.grpc.api.GetBlockMetaByHashRequest.Builder getByHashBuilder() {
      return getByHashFieldBuilder().getBuilder();
    }
    /**
     * <code>.iotexapi.GetBlockMetaByHashRequest byHash = 2;</code>
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.api.GetBlockMetaByHashRequestOrBuilder getByHashOrBuilder() {
      if ((lookupCase_ == 2) && (byHashBuilder_ != null)) {
        return byHashBuilder_.getMessageOrBuilder();
      } else {
        if (lookupCase_ == 2) {
          return (com.github.iotexproject.grpc.api.GetBlockMetaByHashRequest) lookup_;
        }
        return com.github.iotexproject.grpc.api.GetBlockMetaByHashRequest.getDefaultInstance();
      }
    }
    /**
     * <code>.iotexapi.GetBlockMetaByHashRequest byHash = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.github.iotexproject.grpc.api.GetBlockMetaByHashRequest, com.github.iotexproject.grpc.api.GetBlockMetaByHashRequest.Builder, com.github.iotexproject.grpc.api.GetBlockMetaByHashRequestOrBuilder> 
        getByHashFieldBuilder() {
      if (byHashBuilder_ == null) {
        if (!(lookupCase_ == 2)) {
          lookup_ = com.github.iotexproject.grpc.api.GetBlockMetaByHashRequest.getDefaultInstance();
        }
        byHashBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.github.iotexproject.grpc.api.GetBlockMetaByHashRequest, com.github.iotexproject.grpc.api.GetBlockMetaByHashRequest.Builder, com.github.iotexproject.grpc.api.GetBlockMetaByHashRequestOrBuilder>(
                (com.github.iotexproject.grpc.api.GetBlockMetaByHashRequest) lookup_,
                getParentForChildren(),
                isClean());
        lookup_ = null;
      }
      lookupCase_ = 2;
      onChanged();
      return byHashBuilder_;
    }

    // @@protoc_insertion_point(builder_scope:iotexapi.GetBlockMetasRequest)
  }

  // @@protoc_insertion_point(class_scope:iotexapi.GetBlockMetasRequest)
  private static final com.github.iotexproject.grpc.api.GetBlockMetasRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.github.iotexproject.grpc.api.GetBlockMetasRequest();
  }

  public static com.github.iotexproject.grpc.api.GetBlockMetasRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<GetBlockMetasRequest>
      PARSER = new com.google.protobuf.AbstractParser<GetBlockMetasRequest>() {
    @java.lang.Override
    public GetBlockMetasRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<GetBlockMetasRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<GetBlockMetasRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.github.iotexproject.grpc.api.GetBlockMetasRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

