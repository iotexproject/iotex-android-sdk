// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: proto/api/read_state.proto
// Protobuf Java Version: 4.29.1

package com.github.iotexproject.grpc.api;

/**
 * Protobuf type {@code iotexapi.ReadStakingDataMethod}
 */
public final class ReadStakingDataMethod extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:iotexapi.ReadStakingDataMethod)
    ReadStakingDataMethodOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 1,
      /* suffix= */ "",
      ReadStakingDataMethod.class.getName());
  }
  // Use ReadStakingDataMethod.newBuilder() to construct.
  private ReadStakingDataMethod(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private ReadStakingDataMethod() {
    method_ = 0;
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.github.iotexproject.grpc.api.ReadState.internal_static_iotexapi_ReadStakingDataMethod_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.github.iotexproject.grpc.api.ReadState.internal_static_iotexapi_ReadStakingDataMethod_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.github.iotexproject.grpc.api.ReadStakingDataMethod.class, com.github.iotexproject.grpc.api.ReadStakingDataMethod.Builder.class);
  }

  /**
   * Protobuf enum {@code iotexapi.ReadStakingDataMethod.Name}
   */
  public enum Name
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>INVALID = 0;</code>
     */
    INVALID(0),
    /**
     * <code>BUCKETS = 1;</code>
     */
    BUCKETS(1),
    /**
     * <code>BUCKETS_BY_VOTER = 2;</code>
     */
    BUCKETS_BY_VOTER(2),
    /**
     * <code>BUCKETS_BY_CANDIDATE = 3;</code>
     */
    BUCKETS_BY_CANDIDATE(3),
    /**
     * <code>CANDIDATES = 4;</code>
     */
    CANDIDATES(4),
    /**
     * <code>CANDIDATE_BY_NAME = 5;</code>
     */
    CANDIDATE_BY_NAME(5),
    /**
     * <code>BUCKETS_BY_INDEXES = 6;</code>
     */
    BUCKETS_BY_INDEXES(6),
    /**
     * <code>CANDIDATE_BY_ADDRESS = 7;</code>
     */
    CANDIDATE_BY_ADDRESS(7),
    /**
     * <code>TOTAL_STAKING_AMOUNT = 8;</code>
     */
    TOTAL_STAKING_AMOUNT(8),
    /**
     * <code>BUCKETS_COUNT = 9;</code>
     */
    BUCKETS_COUNT(9),
    UNRECOGNIZED(-1),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 1,
        /* suffix= */ "",
        Name.class.getName());
    }
    /**
     * <code>INVALID = 0;</code>
     */
    public static final int INVALID_VALUE = 0;
    /**
     * <code>BUCKETS = 1;</code>
     */
    public static final int BUCKETS_VALUE = 1;
    /**
     * <code>BUCKETS_BY_VOTER = 2;</code>
     */
    public static final int BUCKETS_BY_VOTER_VALUE = 2;
    /**
     * <code>BUCKETS_BY_CANDIDATE = 3;</code>
     */
    public static final int BUCKETS_BY_CANDIDATE_VALUE = 3;
    /**
     * <code>CANDIDATES = 4;</code>
     */
    public static final int CANDIDATES_VALUE = 4;
    /**
     * <code>CANDIDATE_BY_NAME = 5;</code>
     */
    public static final int CANDIDATE_BY_NAME_VALUE = 5;
    /**
     * <code>BUCKETS_BY_INDEXES = 6;</code>
     */
    public static final int BUCKETS_BY_INDEXES_VALUE = 6;
    /**
     * <code>CANDIDATE_BY_ADDRESS = 7;</code>
     */
    public static final int CANDIDATE_BY_ADDRESS_VALUE = 7;
    /**
     * <code>TOTAL_STAKING_AMOUNT = 8;</code>
     */
    public static final int TOTAL_STAKING_AMOUNT_VALUE = 8;
    /**
     * <code>BUCKETS_COUNT = 9;</code>
     */
    public static final int BUCKETS_COUNT_VALUE = 9;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Name valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Name forNumber(int value) {
      switch (value) {
        case 0: return INVALID;
        case 1: return BUCKETS;
        case 2: return BUCKETS_BY_VOTER;
        case 3: return BUCKETS_BY_CANDIDATE;
        case 4: return CANDIDATES;
        case 5: return CANDIDATE_BY_NAME;
        case 6: return BUCKETS_BY_INDEXES;
        case 7: return CANDIDATE_BY_ADDRESS;
        case 8: return TOTAL_STAKING_AMOUNT;
        case 9: return BUCKETS_COUNT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Name>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Name> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Name>() {
            public Name findValueByNumber(int number) {
              return Name.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.github.iotexproject.grpc.api.ReadStakingDataMethod.getDescriptor().getEnumTypes().get(0);
    }

    private static final Name[] VALUES = values();

    public static Name valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Name(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:iotexapi.ReadStakingDataMethod.Name)
  }

  public static final int METHOD_FIELD_NUMBER = 1;
  private int method_ = 0;
  /**
   * <code>.iotexapi.ReadStakingDataMethod.Name method = 1;</code>
   * @return The enum numeric value on the wire for method.
   */
  @java.lang.Override public int getMethodValue() {
    return method_;
  }
  /**
   * <code>.iotexapi.ReadStakingDataMethod.Name method = 1;</code>
   * @return The method.
   */
  @java.lang.Override public com.github.iotexproject.grpc.api.ReadStakingDataMethod.Name getMethod() {
    com.github.iotexproject.grpc.api.ReadStakingDataMethod.Name result = com.github.iotexproject.grpc.api.ReadStakingDataMethod.Name.forNumber(method_);
    return result == null ? com.github.iotexproject.grpc.api.ReadStakingDataMethod.Name.UNRECOGNIZED : result;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (method_ != com.github.iotexproject.grpc.api.ReadStakingDataMethod.Name.INVALID.getNumber()) {
      output.writeEnum(1, method_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (method_ != com.github.iotexproject.grpc.api.ReadStakingDataMethod.Name.INVALID.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, method_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.github.iotexproject.grpc.api.ReadStakingDataMethod)) {
      return super.equals(obj);
    }
    com.github.iotexproject.grpc.api.ReadStakingDataMethod other = (com.github.iotexproject.grpc.api.ReadStakingDataMethod) obj;

    if (method_ != other.method_) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + METHOD_FIELD_NUMBER;
    hash = (53 * hash) + method_;
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.github.iotexproject.grpc.api.ReadStakingDataMethod parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.iotexproject.grpc.api.ReadStakingDataMethod parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.iotexproject.grpc.api.ReadStakingDataMethod parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.iotexproject.grpc.api.ReadStakingDataMethod parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.iotexproject.grpc.api.ReadStakingDataMethod parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.iotexproject.grpc.api.ReadStakingDataMethod parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.iotexproject.grpc.api.ReadStakingDataMethod parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.github.iotexproject.grpc.api.ReadStakingDataMethod parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.github.iotexproject.grpc.api.ReadStakingDataMethod parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.github.iotexproject.grpc.api.ReadStakingDataMethod parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.github.iotexproject.grpc.api.ReadStakingDataMethod parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.github.iotexproject.grpc.api.ReadStakingDataMethod parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.github.iotexproject.grpc.api.ReadStakingDataMethod prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code iotexapi.ReadStakingDataMethod}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:iotexapi.ReadStakingDataMethod)
      com.github.iotexproject.grpc.api.ReadStakingDataMethodOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.iotexproject.grpc.api.ReadState.internal_static_iotexapi_ReadStakingDataMethod_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.iotexproject.grpc.api.ReadState.internal_static_iotexapi_ReadStakingDataMethod_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.iotexproject.grpc.api.ReadStakingDataMethod.class, com.github.iotexproject.grpc.api.ReadStakingDataMethod.Builder.class);
    }

    // Construct using com.github.iotexproject.grpc.api.ReadStakingDataMethod.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      method_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.github.iotexproject.grpc.api.ReadState.internal_static_iotexapi_ReadStakingDataMethod_descriptor;
    }

    @java.lang.Override
    public com.github.iotexproject.grpc.api.ReadStakingDataMethod getDefaultInstanceForType() {
      return com.github.iotexproject.grpc.api.ReadStakingDataMethod.getDefaultInstance();
    }

    @java.lang.Override
    public com.github.iotexproject.grpc.api.ReadStakingDataMethod build() {
      com.github.iotexproject.grpc.api.ReadStakingDataMethod result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.github.iotexproject.grpc.api.ReadStakingDataMethod buildPartial() {
      com.github.iotexproject.grpc.api.ReadStakingDataMethod result = new com.github.iotexproject.grpc.api.ReadStakingDataMethod(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.github.iotexproject.grpc.api.ReadStakingDataMethod result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.method_ = method_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.github.iotexproject.grpc.api.ReadStakingDataMethod) {
        return mergeFrom((com.github.iotexproject.grpc.api.ReadStakingDataMethod)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.github.iotexproject.grpc.api.ReadStakingDataMethod other) {
      if (other == com.github.iotexproject.grpc.api.ReadStakingDataMethod.getDefaultInstance()) return this;
      if (other.method_ != 0) {
        setMethodValue(other.getMethodValue());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              method_ = input.readEnum();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int method_ = 0;
    /**
     * <code>.iotexapi.ReadStakingDataMethod.Name method = 1;</code>
     * @return The enum numeric value on the wire for method.
     */
    @java.lang.Override public int getMethodValue() {
      return method_;
    }
    /**
     * <code>.iotexapi.ReadStakingDataMethod.Name method = 1;</code>
     * @param value The enum numeric value on the wire for method to set.
     * @return This builder for chaining.
     */
    public Builder setMethodValue(int value) {
      method_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>.iotexapi.ReadStakingDataMethod.Name method = 1;</code>
     * @return The method.
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.api.ReadStakingDataMethod.Name getMethod() {
      com.github.iotexproject.grpc.api.ReadStakingDataMethod.Name result = com.github.iotexproject.grpc.api.ReadStakingDataMethod.Name.forNumber(method_);
      return result == null ? com.github.iotexproject.grpc.api.ReadStakingDataMethod.Name.UNRECOGNIZED : result;
    }
    /**
     * <code>.iotexapi.ReadStakingDataMethod.Name method = 1;</code>
     * @param value The method to set.
     * @return This builder for chaining.
     */
    public Builder setMethod(com.github.iotexproject.grpc.api.ReadStakingDataMethod.Name value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      method_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.iotexapi.ReadStakingDataMethod.Name method = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearMethod() {
      bitField0_ = (bitField0_ & ~0x00000001);
      method_ = 0;
      onChanged();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:iotexapi.ReadStakingDataMethod)
  }

  // @@protoc_insertion_point(class_scope:iotexapi.ReadStakingDataMethod)
  private static final com.github.iotexproject.grpc.api.ReadStakingDataMethod DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.github.iotexproject.grpc.api.ReadStakingDataMethod();
  }

  public static com.github.iotexproject.grpc.api.ReadStakingDataMethod getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ReadStakingDataMethod>
      PARSER = new com.google.protobuf.AbstractParser<ReadStakingDataMethod>() {
    @java.lang.Override
    public ReadStakingDataMethod parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<ReadStakingDataMethod> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ReadStakingDataMethod> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.github.iotexproject.grpc.api.ReadStakingDataMethod getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

