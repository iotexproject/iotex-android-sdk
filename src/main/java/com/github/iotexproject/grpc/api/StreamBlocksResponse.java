// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/api/api.proto

package com.github.iotexproject.grpc.api;

/**
 * Protobuf type {@code iotexapi.StreamBlocksResponse}
 */
public final class StreamBlocksResponse extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:iotexapi.StreamBlocksResponse)
    StreamBlocksResponseOrBuilder {
private static final long serialVersionUID = 0L;
  // Use StreamBlocksResponse.newBuilder() to construct.
  private StreamBlocksResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private StreamBlocksResponse() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new StreamBlocksResponse();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private StreamBlocksResponse(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            com.github.iotexproject.grpc.api.BlockInfo.Builder subBuilder = null;
            if (block_ != null) {
              subBuilder = block_.toBuilder();
            }
            block_ = input.readMessage(com.github.iotexproject.grpc.api.BlockInfo.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(block_);
              block_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            com.github.iotexproject.grpc.types.BlockIdentifier.Builder subBuilder = null;
            if (blockIdentifier_ != null) {
              subBuilder = blockIdentifier_.toBuilder();
            }
            blockIdentifier_ = input.readMessage(com.github.iotexproject.grpc.types.BlockIdentifier.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(blockIdentifier_);
              blockIdentifier_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.github.iotexproject.grpc.api.Api.internal_static_iotexapi_StreamBlocksResponse_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.github.iotexproject.grpc.api.Api.internal_static_iotexapi_StreamBlocksResponse_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.github.iotexproject.grpc.api.StreamBlocksResponse.class, com.github.iotexproject.grpc.api.StreamBlocksResponse.Builder.class);
  }

  public static final int BLOCK_FIELD_NUMBER = 1;
  private com.github.iotexproject.grpc.api.BlockInfo block_;
  /**
   * <code>.iotexapi.BlockInfo block = 1;</code>
   * @return Whether the block field is set.
   */
  @java.lang.Override
  public boolean hasBlock() {
    return block_ != null;
  }
  /**
   * <code>.iotexapi.BlockInfo block = 1;</code>
   * @return The block.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.api.BlockInfo getBlock() {
    return block_ == null ? com.github.iotexproject.grpc.api.BlockInfo.getDefaultInstance() : block_;
  }
  /**
   * <code>.iotexapi.BlockInfo block = 1;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.api.BlockInfoOrBuilder getBlockOrBuilder() {
    return getBlock();
  }

  public static final int BLOCKIDENTIFIER_FIELD_NUMBER = 2;
  private com.github.iotexproject.grpc.types.BlockIdentifier blockIdentifier_;
  /**
   * <code>.iotextypes.BlockIdentifier blockIdentifier = 2;</code>
   * @return Whether the blockIdentifier field is set.
   */
  @java.lang.Override
  public boolean hasBlockIdentifier() {
    return blockIdentifier_ != null;
  }
  /**
   * <code>.iotextypes.BlockIdentifier blockIdentifier = 2;</code>
   * @return The blockIdentifier.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.BlockIdentifier getBlockIdentifier() {
    return blockIdentifier_ == null ? com.github.iotexproject.grpc.types.BlockIdentifier.getDefaultInstance() : blockIdentifier_;
  }
  /**
   * <code>.iotextypes.BlockIdentifier blockIdentifier = 2;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.BlockIdentifierOrBuilder getBlockIdentifierOrBuilder() {
    return getBlockIdentifier();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (block_ != null) {
      output.writeMessage(1, getBlock());
    }
    if (blockIdentifier_ != null) {
      output.writeMessage(2, getBlockIdentifier());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (block_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getBlock());
    }
    if (blockIdentifier_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getBlockIdentifier());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.github.iotexproject.grpc.api.StreamBlocksResponse)) {
      return super.equals(obj);
    }
    com.github.iotexproject.grpc.api.StreamBlocksResponse other = (com.github.iotexproject.grpc.api.StreamBlocksResponse) obj;

    if (hasBlock() != other.hasBlock()) return false;
    if (hasBlock()) {
      if (!getBlock()
          .equals(other.getBlock())) return false;
    }
    if (hasBlockIdentifier() != other.hasBlockIdentifier()) return false;
    if (hasBlockIdentifier()) {
      if (!getBlockIdentifier()
          .equals(other.getBlockIdentifier())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasBlock()) {
      hash = (37 * hash) + BLOCK_FIELD_NUMBER;
      hash = (53 * hash) + getBlock().hashCode();
    }
    if (hasBlockIdentifier()) {
      hash = (37 * hash) + BLOCKIDENTIFIER_FIELD_NUMBER;
      hash = (53 * hash) + getBlockIdentifier().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.github.iotexproject.grpc.api.StreamBlocksResponse parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.iotexproject.grpc.api.StreamBlocksResponse parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.iotexproject.grpc.api.StreamBlocksResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.iotexproject.grpc.api.StreamBlocksResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.iotexproject.grpc.api.StreamBlocksResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.iotexproject.grpc.api.StreamBlocksResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.iotexproject.grpc.api.StreamBlocksResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.github.iotexproject.grpc.api.StreamBlocksResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.github.iotexproject.grpc.api.StreamBlocksResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.github.iotexproject.grpc.api.StreamBlocksResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.github.iotexproject.grpc.api.StreamBlocksResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.github.iotexproject.grpc.api.StreamBlocksResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.github.iotexproject.grpc.api.StreamBlocksResponse prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code iotexapi.StreamBlocksResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:iotexapi.StreamBlocksResponse)
      com.github.iotexproject.grpc.api.StreamBlocksResponseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.iotexproject.grpc.api.Api.internal_static_iotexapi_StreamBlocksResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.iotexproject.grpc.api.Api.internal_static_iotexapi_StreamBlocksResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.iotexproject.grpc.api.StreamBlocksResponse.class, com.github.iotexproject.grpc.api.StreamBlocksResponse.Builder.class);
    }

    // Construct using com.github.iotexproject.grpc.api.StreamBlocksResponse.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (blockBuilder_ == null) {
        block_ = null;
      } else {
        block_ = null;
        blockBuilder_ = null;
      }
      if (blockIdentifierBuilder_ == null) {
        blockIdentifier_ = null;
      } else {
        blockIdentifier_ = null;
        blockIdentifierBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.github.iotexproject.grpc.api.Api.internal_static_iotexapi_StreamBlocksResponse_descriptor;
    }

    @java.lang.Override
    public com.github.iotexproject.grpc.api.StreamBlocksResponse getDefaultInstanceForType() {
      return com.github.iotexproject.grpc.api.StreamBlocksResponse.getDefaultInstance();
    }

    @java.lang.Override
    public com.github.iotexproject.grpc.api.StreamBlocksResponse build() {
      com.github.iotexproject.grpc.api.StreamBlocksResponse result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.github.iotexproject.grpc.api.StreamBlocksResponse buildPartial() {
      com.github.iotexproject.grpc.api.StreamBlocksResponse result = new com.github.iotexproject.grpc.api.StreamBlocksResponse(this);
      if (blockBuilder_ == null) {
        result.block_ = block_;
      } else {
        result.block_ = blockBuilder_.build();
      }
      if (blockIdentifierBuilder_ == null) {
        result.blockIdentifier_ = blockIdentifier_;
      } else {
        result.blockIdentifier_ = blockIdentifierBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.github.iotexproject.grpc.api.StreamBlocksResponse) {
        return mergeFrom((com.github.iotexproject.grpc.api.StreamBlocksResponse)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.github.iotexproject.grpc.api.StreamBlocksResponse other) {
      if (other == com.github.iotexproject.grpc.api.StreamBlocksResponse.getDefaultInstance()) return this;
      if (other.hasBlock()) {
        mergeBlock(other.getBlock());
      }
      if (other.hasBlockIdentifier()) {
        mergeBlockIdentifier(other.getBlockIdentifier());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.github.iotexproject.grpc.api.StreamBlocksResponse parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.github.iotexproject.grpc.api.StreamBlocksResponse) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private com.github.iotexproject.grpc.api.BlockInfo block_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.iotexproject.grpc.api.BlockInfo, com.github.iotexproject.grpc.api.BlockInfo.Builder, com.github.iotexproject.grpc.api.BlockInfoOrBuilder> blockBuilder_;
    /**
     * <code>.iotexapi.BlockInfo block = 1;</code>
     * @return Whether the block field is set.
     */
    public boolean hasBlock() {
      return blockBuilder_ != null || block_ != null;
    }
    /**
     * <code>.iotexapi.BlockInfo block = 1;</code>
     * @return The block.
     */
    public com.github.iotexproject.grpc.api.BlockInfo getBlock() {
      if (blockBuilder_ == null) {
        return block_ == null ? com.github.iotexproject.grpc.api.BlockInfo.getDefaultInstance() : block_;
      } else {
        return blockBuilder_.getMessage();
      }
    }
    /**
     * <code>.iotexapi.BlockInfo block = 1;</code>
     */
    public Builder setBlock(com.github.iotexproject.grpc.api.BlockInfo value) {
      if (blockBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        block_ = value;
        onChanged();
      } else {
        blockBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.iotexapi.BlockInfo block = 1;</code>
     */
    public Builder setBlock(
        com.github.iotexproject.grpc.api.BlockInfo.Builder builderForValue) {
      if (blockBuilder_ == null) {
        block_ = builderForValue.build();
        onChanged();
      } else {
        blockBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.iotexapi.BlockInfo block = 1;</code>
     */
    public Builder mergeBlock(com.github.iotexproject.grpc.api.BlockInfo value) {
      if (blockBuilder_ == null) {
        if (block_ != null) {
          block_ =
            com.github.iotexproject.grpc.api.BlockInfo.newBuilder(block_).mergeFrom(value).buildPartial();
        } else {
          block_ = value;
        }
        onChanged();
      } else {
        blockBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.iotexapi.BlockInfo block = 1;</code>
     */
    public Builder clearBlock() {
      if (blockBuilder_ == null) {
        block_ = null;
        onChanged();
      } else {
        block_ = null;
        blockBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.iotexapi.BlockInfo block = 1;</code>
     */
    public com.github.iotexproject.grpc.api.BlockInfo.Builder getBlockBuilder() {
      
      onChanged();
      return getBlockFieldBuilder().getBuilder();
    }
    /**
     * <code>.iotexapi.BlockInfo block = 1;</code>
     */
    public com.github.iotexproject.grpc.api.BlockInfoOrBuilder getBlockOrBuilder() {
      if (blockBuilder_ != null) {
        return blockBuilder_.getMessageOrBuilder();
      } else {
        return block_ == null ?
            com.github.iotexproject.grpc.api.BlockInfo.getDefaultInstance() : block_;
      }
    }
    /**
     * <code>.iotexapi.BlockInfo block = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.iotexproject.grpc.api.BlockInfo, com.github.iotexproject.grpc.api.BlockInfo.Builder, com.github.iotexproject.grpc.api.BlockInfoOrBuilder> 
        getBlockFieldBuilder() {
      if (blockBuilder_ == null) {
        blockBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.iotexproject.grpc.api.BlockInfo, com.github.iotexproject.grpc.api.BlockInfo.Builder, com.github.iotexproject.grpc.api.BlockInfoOrBuilder>(
                getBlock(),
                getParentForChildren(),
                isClean());
        block_ = null;
      }
      return blockBuilder_;
    }

    private com.github.iotexproject.grpc.types.BlockIdentifier blockIdentifier_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.iotexproject.grpc.types.BlockIdentifier, com.github.iotexproject.grpc.types.BlockIdentifier.Builder, com.github.iotexproject.grpc.types.BlockIdentifierOrBuilder> blockIdentifierBuilder_;
    /**
     * <code>.iotextypes.BlockIdentifier blockIdentifier = 2;</code>
     * @return Whether the blockIdentifier field is set.
     */
    public boolean hasBlockIdentifier() {
      return blockIdentifierBuilder_ != null || blockIdentifier_ != null;
    }
    /**
     * <code>.iotextypes.BlockIdentifier blockIdentifier = 2;</code>
     * @return The blockIdentifier.
     */
    public com.github.iotexproject.grpc.types.BlockIdentifier getBlockIdentifier() {
      if (blockIdentifierBuilder_ == null) {
        return blockIdentifier_ == null ? com.github.iotexproject.grpc.types.BlockIdentifier.getDefaultInstance() : blockIdentifier_;
      } else {
        return blockIdentifierBuilder_.getMessage();
      }
    }
    /**
     * <code>.iotextypes.BlockIdentifier blockIdentifier = 2;</code>
     */
    public Builder setBlockIdentifier(com.github.iotexproject.grpc.types.BlockIdentifier value) {
      if (blockIdentifierBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        blockIdentifier_ = value;
        onChanged();
      } else {
        blockIdentifierBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.iotextypes.BlockIdentifier blockIdentifier = 2;</code>
     */
    public Builder setBlockIdentifier(
        com.github.iotexproject.grpc.types.BlockIdentifier.Builder builderForValue) {
      if (blockIdentifierBuilder_ == null) {
        blockIdentifier_ = builderForValue.build();
        onChanged();
      } else {
        blockIdentifierBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.iotextypes.BlockIdentifier blockIdentifier = 2;</code>
     */
    public Builder mergeBlockIdentifier(com.github.iotexproject.grpc.types.BlockIdentifier value) {
      if (blockIdentifierBuilder_ == null) {
        if (blockIdentifier_ != null) {
          blockIdentifier_ =
            com.github.iotexproject.grpc.types.BlockIdentifier.newBuilder(blockIdentifier_).mergeFrom(value).buildPartial();
        } else {
          blockIdentifier_ = value;
        }
        onChanged();
      } else {
        blockIdentifierBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.iotextypes.BlockIdentifier blockIdentifier = 2;</code>
     */
    public Builder clearBlockIdentifier() {
      if (blockIdentifierBuilder_ == null) {
        blockIdentifier_ = null;
        onChanged();
      } else {
        blockIdentifier_ = null;
        blockIdentifierBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.iotextypes.BlockIdentifier blockIdentifier = 2;</code>
     */
    public com.github.iotexproject.grpc.types.BlockIdentifier.Builder getBlockIdentifierBuilder() {
      
      onChanged();
      return getBlockIdentifierFieldBuilder().getBuilder();
    }
    /**
     * <code>.iotextypes.BlockIdentifier blockIdentifier = 2;</code>
     */
    public com.github.iotexproject.grpc.types.BlockIdentifierOrBuilder getBlockIdentifierOrBuilder() {
      if (blockIdentifierBuilder_ != null) {
        return blockIdentifierBuilder_.getMessageOrBuilder();
      } else {
        return blockIdentifier_ == null ?
            com.github.iotexproject.grpc.types.BlockIdentifier.getDefaultInstance() : blockIdentifier_;
      }
    }
    /**
     * <code>.iotextypes.BlockIdentifier blockIdentifier = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.iotexproject.grpc.types.BlockIdentifier, com.github.iotexproject.grpc.types.BlockIdentifier.Builder, com.github.iotexproject.grpc.types.BlockIdentifierOrBuilder> 
        getBlockIdentifierFieldBuilder() {
      if (blockIdentifierBuilder_ == null) {
        blockIdentifierBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.iotexproject.grpc.types.BlockIdentifier, com.github.iotexproject.grpc.types.BlockIdentifier.Builder, com.github.iotexproject.grpc.types.BlockIdentifierOrBuilder>(
                getBlockIdentifier(),
                getParentForChildren(),
                isClean());
        blockIdentifier_ = null;
      }
      return blockIdentifierBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:iotexapi.StreamBlocksResponse)
  }

  // @@protoc_insertion_point(class_scope:iotexapi.StreamBlocksResponse)
  private static final com.github.iotexproject.grpc.api.StreamBlocksResponse DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.github.iotexproject.grpc.api.StreamBlocksResponse();
  }

  public static com.github.iotexproject.grpc.api.StreamBlocksResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<StreamBlocksResponse>
      PARSER = new com.google.protobuf.AbstractParser<StreamBlocksResponse>() {
    @java.lang.Override
    public StreamBlocksResponse parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new StreamBlocksResponse(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<StreamBlocksResponse> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<StreamBlocksResponse> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.github.iotexproject.grpc.api.StreamBlocksResponse getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

