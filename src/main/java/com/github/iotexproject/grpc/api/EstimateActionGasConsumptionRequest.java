// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/api/api.proto

package com.github.iotexproject.grpc.api;

/**
 * Protobuf type {@code iotexapi.EstimateActionGasConsumptionRequest}
 */
public final class EstimateActionGasConsumptionRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:iotexapi.EstimateActionGasConsumptionRequest)
    EstimateActionGasConsumptionRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use EstimateActionGasConsumptionRequest.newBuilder() to construct.
  private EstimateActionGasConsumptionRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private EstimateActionGasConsumptionRequest() {
    callerAddress_ = "";
    gasPrice_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new EstimateActionGasConsumptionRequest();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private EstimateActionGasConsumptionRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            com.github.iotexproject.grpc.types.Transfer.Builder subBuilder = null;
            if (actionCase_ == 1) {
              subBuilder = ((com.github.iotexproject.grpc.types.Transfer) action_).toBuilder();
            }
            action_ =
                input.readMessage(com.github.iotexproject.grpc.types.Transfer.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.github.iotexproject.grpc.types.Transfer) action_);
              action_ = subBuilder.buildPartial();
            }
            actionCase_ = 1;
            break;
          }
          case 18: {
            com.github.iotexproject.grpc.types.Execution.Builder subBuilder = null;
            if (actionCase_ == 2) {
              subBuilder = ((com.github.iotexproject.grpc.types.Execution) action_).toBuilder();
            }
            action_ =
                input.readMessage(com.github.iotexproject.grpc.types.Execution.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.github.iotexproject.grpc.types.Execution) action_);
              action_ = subBuilder.buildPartial();
            }
            actionCase_ = 2;
            break;
          }
          case 322: {
            com.github.iotexproject.grpc.types.StakeCreate.Builder subBuilder = null;
            if (actionCase_ == 40) {
              subBuilder = ((com.github.iotexproject.grpc.types.StakeCreate) action_).toBuilder();
            }
            action_ =
                input.readMessage(com.github.iotexproject.grpc.types.StakeCreate.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.github.iotexproject.grpc.types.StakeCreate) action_);
              action_ = subBuilder.buildPartial();
            }
            actionCase_ = 40;
            break;
          }
          case 330: {
            com.github.iotexproject.grpc.types.StakeReclaim.Builder subBuilder = null;
            if (actionCase_ == 41) {
              subBuilder = ((com.github.iotexproject.grpc.types.StakeReclaim) action_).toBuilder();
            }
            action_ =
                input.readMessage(com.github.iotexproject.grpc.types.StakeReclaim.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.github.iotexproject.grpc.types.StakeReclaim) action_);
              action_ = subBuilder.buildPartial();
            }
            actionCase_ = 41;
            break;
          }
          case 338: {
            com.github.iotexproject.grpc.types.StakeReclaim.Builder subBuilder = null;
            if (actionCase_ == 42) {
              subBuilder = ((com.github.iotexproject.grpc.types.StakeReclaim) action_).toBuilder();
            }
            action_ =
                input.readMessage(com.github.iotexproject.grpc.types.StakeReclaim.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.github.iotexproject.grpc.types.StakeReclaim) action_);
              action_ = subBuilder.buildPartial();
            }
            actionCase_ = 42;
            break;
          }
          case 346: {
            com.github.iotexproject.grpc.types.StakeAddDeposit.Builder subBuilder = null;
            if (actionCase_ == 43) {
              subBuilder = ((com.github.iotexproject.grpc.types.StakeAddDeposit) action_).toBuilder();
            }
            action_ =
                input.readMessage(com.github.iotexproject.grpc.types.StakeAddDeposit.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.github.iotexproject.grpc.types.StakeAddDeposit) action_);
              action_ = subBuilder.buildPartial();
            }
            actionCase_ = 43;
            break;
          }
          case 354: {
            com.github.iotexproject.grpc.types.StakeRestake.Builder subBuilder = null;
            if (actionCase_ == 44) {
              subBuilder = ((com.github.iotexproject.grpc.types.StakeRestake) action_).toBuilder();
            }
            action_ =
                input.readMessage(com.github.iotexproject.grpc.types.StakeRestake.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.github.iotexproject.grpc.types.StakeRestake) action_);
              action_ = subBuilder.buildPartial();
            }
            actionCase_ = 44;
            break;
          }
          case 362: {
            com.github.iotexproject.grpc.types.StakeChangeCandidate.Builder subBuilder = null;
            if (actionCase_ == 45) {
              subBuilder = ((com.github.iotexproject.grpc.types.StakeChangeCandidate) action_).toBuilder();
            }
            action_ =
                input.readMessage(com.github.iotexproject.grpc.types.StakeChangeCandidate.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.github.iotexproject.grpc.types.StakeChangeCandidate) action_);
              action_ = subBuilder.buildPartial();
            }
            actionCase_ = 45;
            break;
          }
          case 370: {
            com.github.iotexproject.grpc.types.StakeTransferOwnership.Builder subBuilder = null;
            if (actionCase_ == 46) {
              subBuilder = ((com.github.iotexproject.grpc.types.StakeTransferOwnership) action_).toBuilder();
            }
            action_ =
                input.readMessage(com.github.iotexproject.grpc.types.StakeTransferOwnership.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.github.iotexproject.grpc.types.StakeTransferOwnership) action_);
              action_ = subBuilder.buildPartial();
            }
            actionCase_ = 46;
            break;
          }
          case 378: {
            com.github.iotexproject.grpc.types.CandidateRegister.Builder subBuilder = null;
            if (actionCase_ == 47) {
              subBuilder = ((com.github.iotexproject.grpc.types.CandidateRegister) action_).toBuilder();
            }
            action_ =
                input.readMessage(com.github.iotexproject.grpc.types.CandidateRegister.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.github.iotexproject.grpc.types.CandidateRegister) action_);
              action_ = subBuilder.buildPartial();
            }
            actionCase_ = 47;
            break;
          }
          case 386: {
            com.github.iotexproject.grpc.types.CandidateBasicInfo.Builder subBuilder = null;
            if (actionCase_ == 48) {
              subBuilder = ((com.github.iotexproject.grpc.types.CandidateBasicInfo) action_).toBuilder();
            }
            action_ =
                input.readMessage(com.github.iotexproject.grpc.types.CandidateBasicInfo.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.github.iotexproject.grpc.types.CandidateBasicInfo) action_);
              action_ = subBuilder.buildPartial();
            }
            actionCase_ = 48;
            break;
          }
          case 394: {
            com.github.iotexproject.grpc.types.CandidateActivate.Builder subBuilder = null;
            if (actionCase_ == 49) {
              subBuilder = ((com.github.iotexproject.grpc.types.CandidateActivate) action_).toBuilder();
            }
            action_ =
                input.readMessage(com.github.iotexproject.grpc.types.CandidateActivate.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.github.iotexproject.grpc.types.CandidateActivate) action_);
              action_ = subBuilder.buildPartial();
            }
            actionCase_ = 49;
            break;
          }
          case 410: {
            com.github.iotexproject.grpc.types.CandidateEndorsement.Builder subBuilder = null;
            if (actionCase_ == 51) {
              subBuilder = ((com.github.iotexproject.grpc.types.CandidateEndorsement) action_).toBuilder();
            }
            action_ =
                input.readMessage(com.github.iotexproject.grpc.types.CandidateEndorsement.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.github.iotexproject.grpc.types.CandidateEndorsement) action_);
              action_ = subBuilder.buildPartial();
            }
            actionCase_ = 51;
            break;
          }
          case 418: {
            com.github.iotexproject.grpc.types.CandidateTransferOwnership.Builder subBuilder = null;
            if (actionCase_ == 52) {
              subBuilder = ((com.github.iotexproject.grpc.types.CandidateTransferOwnership) action_).toBuilder();
            }
            action_ =
                input.readMessage(com.github.iotexproject.grpc.types.CandidateTransferOwnership.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.github.iotexproject.grpc.types.CandidateTransferOwnership) action_);
              action_ = subBuilder.buildPartial();
            }
            actionCase_ = 52;
            break;
          }
          case 426: {
            com.github.iotexproject.grpc.types.StakeMigrate.Builder subBuilder = null;
            if (actionCase_ == 53) {
              subBuilder = ((com.github.iotexproject.grpc.types.StakeMigrate) action_).toBuilder();
            }
            action_ =
                input.readMessage(com.github.iotexproject.grpc.types.StakeMigrate.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.github.iotexproject.grpc.types.StakeMigrate) action_);
              action_ = subBuilder.buildPartial();
            }
            actionCase_ = 53;
            break;
          }
          case 802: {
            java.lang.String s = input.readStringRequireUtf8();

            callerAddress_ = s;
            break;
          }
          case 810: {
            java.lang.String s = input.readStringRequireUtf8();

            gasPrice_ = s;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.github.iotexproject.grpc.api.Api.internal_static_iotexapi_EstimateActionGasConsumptionRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.github.iotexproject.grpc.api.Api.internal_static_iotexapi_EstimateActionGasConsumptionRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.github.iotexproject.grpc.api.EstimateActionGasConsumptionRequest.class, com.github.iotexproject.grpc.api.EstimateActionGasConsumptionRequest.Builder.class);
  }

  private int actionCase_ = 0;
  private java.lang.Object action_;
  public enum ActionCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    TRANSFER(1),
    EXECUTION(2),
    STAKECREATE(40),
    STAKEUNSTAKE(41),
    STAKEWITHDRAW(42),
    STAKEADDDEPOSIT(43),
    STAKERESTAKE(44),
    STAKECHANGECANDIDATE(45),
    STAKETRANSFEROWNERSHIP(46),
    CANDIDATEREGISTER(47),
    CANDIDATEUPDATE(48),
    CANDIDATEACTIVATE(49),
    CANDIDATEENDORSEMENT(51),
    CANDIDATETRANSFEROWNERSHIP(52),
    STAKEMIGRATE(53),
    ACTION_NOT_SET(0);
    private final int value;
    private ActionCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ActionCase valueOf(int value) {
      return forNumber(value);
    }

    public static ActionCase forNumber(int value) {
      switch (value) {
        case 1: return TRANSFER;
        case 2: return EXECUTION;
        case 40: return STAKECREATE;
        case 41: return STAKEUNSTAKE;
        case 42: return STAKEWITHDRAW;
        case 43: return STAKEADDDEPOSIT;
        case 44: return STAKERESTAKE;
        case 45: return STAKECHANGECANDIDATE;
        case 46: return STAKETRANSFEROWNERSHIP;
        case 47: return CANDIDATEREGISTER;
        case 48: return CANDIDATEUPDATE;
        case 49: return CANDIDATEACTIVATE;
        case 51: return CANDIDATEENDORSEMENT;
        case 52: return CANDIDATETRANSFEROWNERSHIP;
        case 53: return STAKEMIGRATE;
        case 0: return ACTION_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public ActionCase
  getActionCase() {
    return ActionCase.forNumber(
        actionCase_);
  }

  public static final int TRANSFER_FIELD_NUMBER = 1;
  /**
   * <code>.iotextypes.Transfer transfer = 1;</code>
   * @return Whether the transfer field is set.
   */
  @java.lang.Override
  public boolean hasTransfer() {
    return actionCase_ == 1;
  }
  /**
   * <code>.iotextypes.Transfer transfer = 1;</code>
   * @return The transfer.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.Transfer getTransfer() {
    if (actionCase_ == 1) {
       return (com.github.iotexproject.grpc.types.Transfer) action_;
    }
    return com.github.iotexproject.grpc.types.Transfer.getDefaultInstance();
  }
  /**
   * <code>.iotextypes.Transfer transfer = 1;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.TransferOrBuilder getTransferOrBuilder() {
    if (actionCase_ == 1) {
       return (com.github.iotexproject.grpc.types.Transfer) action_;
    }
    return com.github.iotexproject.grpc.types.Transfer.getDefaultInstance();
  }

  public static final int EXECUTION_FIELD_NUMBER = 2;
  /**
   * <code>.iotextypes.Execution execution = 2;</code>
   * @return Whether the execution field is set.
   */
  @java.lang.Override
  public boolean hasExecution() {
    return actionCase_ == 2;
  }
  /**
   * <code>.iotextypes.Execution execution = 2;</code>
   * @return The execution.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.Execution getExecution() {
    if (actionCase_ == 2) {
       return (com.github.iotexproject.grpc.types.Execution) action_;
    }
    return com.github.iotexproject.grpc.types.Execution.getDefaultInstance();
  }
  /**
   * <code>.iotextypes.Execution execution = 2;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.ExecutionOrBuilder getExecutionOrBuilder() {
    if (actionCase_ == 2) {
       return (com.github.iotexproject.grpc.types.Execution) action_;
    }
    return com.github.iotexproject.grpc.types.Execution.getDefaultInstance();
  }

  public static final int STAKECREATE_FIELD_NUMBER = 40;
  /**
   * <pre>
   * Native staking
   * </pre>
   *
   * <code>.iotextypes.StakeCreate stakeCreate = 40;</code>
   * @return Whether the stakeCreate field is set.
   */
  @java.lang.Override
  public boolean hasStakeCreate() {
    return actionCase_ == 40;
  }
  /**
   * <pre>
   * Native staking
   * </pre>
   *
   * <code>.iotextypes.StakeCreate stakeCreate = 40;</code>
   * @return The stakeCreate.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.StakeCreate getStakeCreate() {
    if (actionCase_ == 40) {
       return (com.github.iotexproject.grpc.types.StakeCreate) action_;
    }
    return com.github.iotexproject.grpc.types.StakeCreate.getDefaultInstance();
  }
  /**
   * <pre>
   * Native staking
   * </pre>
   *
   * <code>.iotextypes.StakeCreate stakeCreate = 40;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.StakeCreateOrBuilder getStakeCreateOrBuilder() {
    if (actionCase_ == 40) {
       return (com.github.iotexproject.grpc.types.StakeCreate) action_;
    }
    return com.github.iotexproject.grpc.types.StakeCreate.getDefaultInstance();
  }

  public static final int STAKEUNSTAKE_FIELD_NUMBER = 41;
  /**
   * <code>.iotextypes.StakeReclaim stakeUnstake = 41;</code>
   * @return Whether the stakeUnstake field is set.
   */
  @java.lang.Override
  public boolean hasStakeUnstake() {
    return actionCase_ == 41;
  }
  /**
   * <code>.iotextypes.StakeReclaim stakeUnstake = 41;</code>
   * @return The stakeUnstake.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.StakeReclaim getStakeUnstake() {
    if (actionCase_ == 41) {
       return (com.github.iotexproject.grpc.types.StakeReclaim) action_;
    }
    return com.github.iotexproject.grpc.types.StakeReclaim.getDefaultInstance();
  }
  /**
   * <code>.iotextypes.StakeReclaim stakeUnstake = 41;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.StakeReclaimOrBuilder getStakeUnstakeOrBuilder() {
    if (actionCase_ == 41) {
       return (com.github.iotexproject.grpc.types.StakeReclaim) action_;
    }
    return com.github.iotexproject.grpc.types.StakeReclaim.getDefaultInstance();
  }

  public static final int STAKEWITHDRAW_FIELD_NUMBER = 42;
  /**
   * <code>.iotextypes.StakeReclaim stakeWithdraw = 42;</code>
   * @return Whether the stakeWithdraw field is set.
   */
  @java.lang.Override
  public boolean hasStakeWithdraw() {
    return actionCase_ == 42;
  }
  /**
   * <code>.iotextypes.StakeReclaim stakeWithdraw = 42;</code>
   * @return The stakeWithdraw.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.StakeReclaim getStakeWithdraw() {
    if (actionCase_ == 42) {
       return (com.github.iotexproject.grpc.types.StakeReclaim) action_;
    }
    return com.github.iotexproject.grpc.types.StakeReclaim.getDefaultInstance();
  }
  /**
   * <code>.iotextypes.StakeReclaim stakeWithdraw = 42;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.StakeReclaimOrBuilder getStakeWithdrawOrBuilder() {
    if (actionCase_ == 42) {
       return (com.github.iotexproject.grpc.types.StakeReclaim) action_;
    }
    return com.github.iotexproject.grpc.types.StakeReclaim.getDefaultInstance();
  }

  public static final int STAKEADDDEPOSIT_FIELD_NUMBER = 43;
  /**
   * <code>.iotextypes.StakeAddDeposit stakeAddDeposit = 43;</code>
   * @return Whether the stakeAddDeposit field is set.
   */
  @java.lang.Override
  public boolean hasStakeAddDeposit() {
    return actionCase_ == 43;
  }
  /**
   * <code>.iotextypes.StakeAddDeposit stakeAddDeposit = 43;</code>
   * @return The stakeAddDeposit.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.StakeAddDeposit getStakeAddDeposit() {
    if (actionCase_ == 43) {
       return (com.github.iotexproject.grpc.types.StakeAddDeposit) action_;
    }
    return com.github.iotexproject.grpc.types.StakeAddDeposit.getDefaultInstance();
  }
  /**
   * <code>.iotextypes.StakeAddDeposit stakeAddDeposit = 43;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.StakeAddDepositOrBuilder getStakeAddDepositOrBuilder() {
    if (actionCase_ == 43) {
       return (com.github.iotexproject.grpc.types.StakeAddDeposit) action_;
    }
    return com.github.iotexproject.grpc.types.StakeAddDeposit.getDefaultInstance();
  }

  public static final int STAKERESTAKE_FIELD_NUMBER = 44;
  /**
   * <code>.iotextypes.StakeRestake stakeRestake = 44;</code>
   * @return Whether the stakeRestake field is set.
   */
  @java.lang.Override
  public boolean hasStakeRestake() {
    return actionCase_ == 44;
  }
  /**
   * <code>.iotextypes.StakeRestake stakeRestake = 44;</code>
   * @return The stakeRestake.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.StakeRestake getStakeRestake() {
    if (actionCase_ == 44) {
       return (com.github.iotexproject.grpc.types.StakeRestake) action_;
    }
    return com.github.iotexproject.grpc.types.StakeRestake.getDefaultInstance();
  }
  /**
   * <code>.iotextypes.StakeRestake stakeRestake = 44;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.StakeRestakeOrBuilder getStakeRestakeOrBuilder() {
    if (actionCase_ == 44) {
       return (com.github.iotexproject.grpc.types.StakeRestake) action_;
    }
    return com.github.iotexproject.grpc.types.StakeRestake.getDefaultInstance();
  }

  public static final int STAKECHANGECANDIDATE_FIELD_NUMBER = 45;
  /**
   * <code>.iotextypes.StakeChangeCandidate stakeChangeCandidate = 45;</code>
   * @return Whether the stakeChangeCandidate field is set.
   */
  @java.lang.Override
  public boolean hasStakeChangeCandidate() {
    return actionCase_ == 45;
  }
  /**
   * <code>.iotextypes.StakeChangeCandidate stakeChangeCandidate = 45;</code>
   * @return The stakeChangeCandidate.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.StakeChangeCandidate getStakeChangeCandidate() {
    if (actionCase_ == 45) {
       return (com.github.iotexproject.grpc.types.StakeChangeCandidate) action_;
    }
    return com.github.iotexproject.grpc.types.StakeChangeCandidate.getDefaultInstance();
  }
  /**
   * <code>.iotextypes.StakeChangeCandidate stakeChangeCandidate = 45;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.StakeChangeCandidateOrBuilder getStakeChangeCandidateOrBuilder() {
    if (actionCase_ == 45) {
       return (com.github.iotexproject.grpc.types.StakeChangeCandidate) action_;
    }
    return com.github.iotexproject.grpc.types.StakeChangeCandidate.getDefaultInstance();
  }

  public static final int STAKETRANSFEROWNERSHIP_FIELD_NUMBER = 46;
  /**
   * <code>.iotextypes.StakeTransferOwnership stakeTransferOwnership = 46;</code>
   * @return Whether the stakeTransferOwnership field is set.
   */
  @java.lang.Override
  public boolean hasStakeTransferOwnership() {
    return actionCase_ == 46;
  }
  /**
   * <code>.iotextypes.StakeTransferOwnership stakeTransferOwnership = 46;</code>
   * @return The stakeTransferOwnership.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.StakeTransferOwnership getStakeTransferOwnership() {
    if (actionCase_ == 46) {
       return (com.github.iotexproject.grpc.types.StakeTransferOwnership) action_;
    }
    return com.github.iotexproject.grpc.types.StakeTransferOwnership.getDefaultInstance();
  }
  /**
   * <code>.iotextypes.StakeTransferOwnership stakeTransferOwnership = 46;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.StakeTransferOwnershipOrBuilder getStakeTransferOwnershipOrBuilder() {
    if (actionCase_ == 46) {
       return (com.github.iotexproject.grpc.types.StakeTransferOwnership) action_;
    }
    return com.github.iotexproject.grpc.types.StakeTransferOwnership.getDefaultInstance();
  }

  public static final int CANDIDATEREGISTER_FIELD_NUMBER = 47;
  /**
   * <code>.iotextypes.CandidateRegister candidateRegister = 47;</code>
   * @return Whether the candidateRegister field is set.
   */
  @java.lang.Override
  public boolean hasCandidateRegister() {
    return actionCase_ == 47;
  }
  /**
   * <code>.iotextypes.CandidateRegister candidateRegister = 47;</code>
   * @return The candidateRegister.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.CandidateRegister getCandidateRegister() {
    if (actionCase_ == 47) {
       return (com.github.iotexproject.grpc.types.CandidateRegister) action_;
    }
    return com.github.iotexproject.grpc.types.CandidateRegister.getDefaultInstance();
  }
  /**
   * <code>.iotextypes.CandidateRegister candidateRegister = 47;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.CandidateRegisterOrBuilder getCandidateRegisterOrBuilder() {
    if (actionCase_ == 47) {
       return (com.github.iotexproject.grpc.types.CandidateRegister) action_;
    }
    return com.github.iotexproject.grpc.types.CandidateRegister.getDefaultInstance();
  }

  public static final int CANDIDATEUPDATE_FIELD_NUMBER = 48;
  /**
   * <code>.iotextypes.CandidateBasicInfo candidateUpdate = 48;</code>
   * @return Whether the candidateUpdate field is set.
   */
  @java.lang.Override
  public boolean hasCandidateUpdate() {
    return actionCase_ == 48;
  }
  /**
   * <code>.iotextypes.CandidateBasicInfo candidateUpdate = 48;</code>
   * @return The candidateUpdate.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.CandidateBasicInfo getCandidateUpdate() {
    if (actionCase_ == 48) {
       return (com.github.iotexproject.grpc.types.CandidateBasicInfo) action_;
    }
    return com.github.iotexproject.grpc.types.CandidateBasicInfo.getDefaultInstance();
  }
  /**
   * <code>.iotextypes.CandidateBasicInfo candidateUpdate = 48;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.CandidateBasicInfoOrBuilder getCandidateUpdateOrBuilder() {
    if (actionCase_ == 48) {
       return (com.github.iotexproject.grpc.types.CandidateBasicInfo) action_;
    }
    return com.github.iotexproject.grpc.types.CandidateBasicInfo.getDefaultInstance();
  }

  public static final int CANDIDATEACTIVATE_FIELD_NUMBER = 49;
  /**
   * <code>.iotextypes.CandidateActivate candidateActivate = 49;</code>
   * @return Whether the candidateActivate field is set.
   */
  @java.lang.Override
  public boolean hasCandidateActivate() {
    return actionCase_ == 49;
  }
  /**
   * <code>.iotextypes.CandidateActivate candidateActivate = 49;</code>
   * @return The candidateActivate.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.CandidateActivate getCandidateActivate() {
    if (actionCase_ == 49) {
       return (com.github.iotexproject.grpc.types.CandidateActivate) action_;
    }
    return com.github.iotexproject.grpc.types.CandidateActivate.getDefaultInstance();
  }
  /**
   * <code>.iotextypes.CandidateActivate candidateActivate = 49;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.CandidateActivateOrBuilder getCandidateActivateOrBuilder() {
    if (actionCase_ == 49) {
       return (com.github.iotexproject.grpc.types.CandidateActivate) action_;
    }
    return com.github.iotexproject.grpc.types.CandidateActivate.getDefaultInstance();
  }

  public static final int CANDIDATEENDORSEMENT_FIELD_NUMBER = 51;
  /**
   * <code>.iotextypes.CandidateEndorsement candidateEndorsement = 51;</code>
   * @return Whether the candidateEndorsement field is set.
   */
  @java.lang.Override
  public boolean hasCandidateEndorsement() {
    return actionCase_ == 51;
  }
  /**
   * <code>.iotextypes.CandidateEndorsement candidateEndorsement = 51;</code>
   * @return The candidateEndorsement.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.CandidateEndorsement getCandidateEndorsement() {
    if (actionCase_ == 51) {
       return (com.github.iotexproject.grpc.types.CandidateEndorsement) action_;
    }
    return com.github.iotexproject.grpc.types.CandidateEndorsement.getDefaultInstance();
  }
  /**
   * <code>.iotextypes.CandidateEndorsement candidateEndorsement = 51;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.CandidateEndorsementOrBuilder getCandidateEndorsementOrBuilder() {
    if (actionCase_ == 51) {
       return (com.github.iotexproject.grpc.types.CandidateEndorsement) action_;
    }
    return com.github.iotexproject.grpc.types.CandidateEndorsement.getDefaultInstance();
  }

  public static final int CANDIDATETRANSFEROWNERSHIP_FIELD_NUMBER = 52;
  /**
   * <code>.iotextypes.CandidateTransferOwnership candidateTransferOwnership = 52;</code>
   * @return Whether the candidateTransferOwnership field is set.
   */
  @java.lang.Override
  public boolean hasCandidateTransferOwnership() {
    return actionCase_ == 52;
  }
  /**
   * <code>.iotextypes.CandidateTransferOwnership candidateTransferOwnership = 52;</code>
   * @return The candidateTransferOwnership.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.CandidateTransferOwnership getCandidateTransferOwnership() {
    if (actionCase_ == 52) {
       return (com.github.iotexproject.grpc.types.CandidateTransferOwnership) action_;
    }
    return com.github.iotexproject.grpc.types.CandidateTransferOwnership.getDefaultInstance();
  }
  /**
   * <code>.iotextypes.CandidateTransferOwnership candidateTransferOwnership = 52;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.CandidateTransferOwnershipOrBuilder getCandidateTransferOwnershipOrBuilder() {
    if (actionCase_ == 52) {
       return (com.github.iotexproject.grpc.types.CandidateTransferOwnership) action_;
    }
    return com.github.iotexproject.grpc.types.CandidateTransferOwnership.getDefaultInstance();
  }

  public static final int STAKEMIGRATE_FIELD_NUMBER = 53;
  /**
   * <code>.iotextypes.StakeMigrate stakeMigrate = 53;</code>
   * @return Whether the stakeMigrate field is set.
   */
  @java.lang.Override
  public boolean hasStakeMigrate() {
    return actionCase_ == 53;
  }
  /**
   * <code>.iotextypes.StakeMigrate stakeMigrate = 53;</code>
   * @return The stakeMigrate.
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.StakeMigrate getStakeMigrate() {
    if (actionCase_ == 53) {
       return (com.github.iotexproject.grpc.types.StakeMigrate) action_;
    }
    return com.github.iotexproject.grpc.types.StakeMigrate.getDefaultInstance();
  }
  /**
   * <code>.iotextypes.StakeMigrate stakeMigrate = 53;</code>
   */
  @java.lang.Override
  public com.github.iotexproject.grpc.types.StakeMigrateOrBuilder getStakeMigrateOrBuilder() {
    if (actionCase_ == 53) {
       return (com.github.iotexproject.grpc.types.StakeMigrate) action_;
    }
    return com.github.iotexproject.grpc.types.StakeMigrate.getDefaultInstance();
  }

  public static final int CALLERADDRESS_FIELD_NUMBER = 100;
  private volatile java.lang.Object callerAddress_;
  /**
   * <code>string callerAddress = 100;</code>
   * @return The callerAddress.
   */
  @java.lang.Override
  public java.lang.String getCallerAddress() {
    java.lang.Object ref = callerAddress_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      callerAddress_ = s;
      return s;
    }
  }
  /**
   * <code>string callerAddress = 100;</code>
   * @return The bytes for callerAddress.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getCallerAddressBytes() {
    java.lang.Object ref = callerAddress_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      callerAddress_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int GASPRICE_FIELD_NUMBER = 101;
  private volatile java.lang.Object gasPrice_;
  /**
   * <code>string gasPrice = 101;</code>
   * @return The gasPrice.
   */
  @java.lang.Override
  public java.lang.String getGasPrice() {
    java.lang.Object ref = gasPrice_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      gasPrice_ = s;
      return s;
    }
  }
  /**
   * <code>string gasPrice = 101;</code>
   * @return The bytes for gasPrice.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getGasPriceBytes() {
    java.lang.Object ref = gasPrice_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      gasPrice_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (actionCase_ == 1) {
      output.writeMessage(1, (com.github.iotexproject.grpc.types.Transfer) action_);
    }
    if (actionCase_ == 2) {
      output.writeMessage(2, (com.github.iotexproject.grpc.types.Execution) action_);
    }
    if (actionCase_ == 40) {
      output.writeMessage(40, (com.github.iotexproject.grpc.types.StakeCreate) action_);
    }
    if (actionCase_ == 41) {
      output.writeMessage(41, (com.github.iotexproject.grpc.types.StakeReclaim) action_);
    }
    if (actionCase_ == 42) {
      output.writeMessage(42, (com.github.iotexproject.grpc.types.StakeReclaim) action_);
    }
    if (actionCase_ == 43) {
      output.writeMessage(43, (com.github.iotexproject.grpc.types.StakeAddDeposit) action_);
    }
    if (actionCase_ == 44) {
      output.writeMessage(44, (com.github.iotexproject.grpc.types.StakeRestake) action_);
    }
    if (actionCase_ == 45) {
      output.writeMessage(45, (com.github.iotexproject.grpc.types.StakeChangeCandidate) action_);
    }
    if (actionCase_ == 46) {
      output.writeMessage(46, (com.github.iotexproject.grpc.types.StakeTransferOwnership) action_);
    }
    if (actionCase_ == 47) {
      output.writeMessage(47, (com.github.iotexproject.grpc.types.CandidateRegister) action_);
    }
    if (actionCase_ == 48) {
      output.writeMessage(48, (com.github.iotexproject.grpc.types.CandidateBasicInfo) action_);
    }
    if (actionCase_ == 49) {
      output.writeMessage(49, (com.github.iotexproject.grpc.types.CandidateActivate) action_);
    }
    if (actionCase_ == 51) {
      output.writeMessage(51, (com.github.iotexproject.grpc.types.CandidateEndorsement) action_);
    }
    if (actionCase_ == 52) {
      output.writeMessage(52, (com.github.iotexproject.grpc.types.CandidateTransferOwnership) action_);
    }
    if (actionCase_ == 53) {
      output.writeMessage(53, (com.github.iotexproject.grpc.types.StakeMigrate) action_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(callerAddress_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 100, callerAddress_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(gasPrice_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 101, gasPrice_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (actionCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (com.github.iotexproject.grpc.types.Transfer) action_);
    }
    if (actionCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (com.github.iotexproject.grpc.types.Execution) action_);
    }
    if (actionCase_ == 40) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(40, (com.github.iotexproject.grpc.types.StakeCreate) action_);
    }
    if (actionCase_ == 41) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(41, (com.github.iotexproject.grpc.types.StakeReclaim) action_);
    }
    if (actionCase_ == 42) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(42, (com.github.iotexproject.grpc.types.StakeReclaim) action_);
    }
    if (actionCase_ == 43) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(43, (com.github.iotexproject.grpc.types.StakeAddDeposit) action_);
    }
    if (actionCase_ == 44) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(44, (com.github.iotexproject.grpc.types.StakeRestake) action_);
    }
    if (actionCase_ == 45) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(45, (com.github.iotexproject.grpc.types.StakeChangeCandidate) action_);
    }
    if (actionCase_ == 46) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(46, (com.github.iotexproject.grpc.types.StakeTransferOwnership) action_);
    }
    if (actionCase_ == 47) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(47, (com.github.iotexproject.grpc.types.CandidateRegister) action_);
    }
    if (actionCase_ == 48) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(48, (com.github.iotexproject.grpc.types.CandidateBasicInfo) action_);
    }
    if (actionCase_ == 49) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(49, (com.github.iotexproject.grpc.types.CandidateActivate) action_);
    }
    if (actionCase_ == 51) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(51, (com.github.iotexproject.grpc.types.CandidateEndorsement) action_);
    }
    if (actionCase_ == 52) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(52, (com.github.iotexproject.grpc.types.CandidateTransferOwnership) action_);
    }
    if (actionCase_ == 53) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(53, (com.github.iotexproject.grpc.types.StakeMigrate) action_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(callerAddress_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(100, callerAddress_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(gasPrice_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(101, gasPrice_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.github.iotexproject.grpc.api.EstimateActionGasConsumptionRequest)) {
      return super.equals(obj);
    }
    com.github.iotexproject.grpc.api.EstimateActionGasConsumptionRequest other = (com.github.iotexproject.grpc.api.EstimateActionGasConsumptionRequest) obj;

    if (!getCallerAddress()
        .equals(other.getCallerAddress())) return false;
    if (!getGasPrice()
        .equals(other.getGasPrice())) return false;
    if (!getActionCase().equals(other.getActionCase())) return false;
    switch (actionCase_) {
      case 1:
        if (!getTransfer()
            .equals(other.getTransfer())) return false;
        break;
      case 2:
        if (!getExecution()
            .equals(other.getExecution())) return false;
        break;
      case 40:
        if (!getStakeCreate()
            .equals(other.getStakeCreate())) return false;
        break;
      case 41:
        if (!getStakeUnstake()
            .equals(other.getStakeUnstake())) return false;
        break;
      case 42:
        if (!getStakeWithdraw()
            .equals(other.getStakeWithdraw())) return false;
        break;
      case 43:
        if (!getStakeAddDeposit()
            .equals(other.getStakeAddDeposit())) return false;
        break;
      case 44:
        if (!getStakeRestake()
            .equals(other.getStakeRestake())) return false;
        break;
      case 45:
        if (!getStakeChangeCandidate()
            .equals(other.getStakeChangeCandidate())) return false;
        break;
      case 46:
        if (!getStakeTransferOwnership()
            .equals(other.getStakeTransferOwnership())) return false;
        break;
      case 47:
        if (!getCandidateRegister()
            .equals(other.getCandidateRegister())) return false;
        break;
      case 48:
        if (!getCandidateUpdate()
            .equals(other.getCandidateUpdate())) return false;
        break;
      case 49:
        if (!getCandidateActivate()
            .equals(other.getCandidateActivate())) return false;
        break;
      case 51:
        if (!getCandidateEndorsement()
            .equals(other.getCandidateEndorsement())) return false;
        break;
      case 52:
        if (!getCandidateTransferOwnership()
            .equals(other.getCandidateTransferOwnership())) return false;
        break;
      case 53:
        if (!getStakeMigrate()
            .equals(other.getStakeMigrate())) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + CALLERADDRESS_FIELD_NUMBER;
    hash = (53 * hash) + getCallerAddress().hashCode();
    hash = (37 * hash) + GASPRICE_FIELD_NUMBER;
    hash = (53 * hash) + getGasPrice().hashCode();
    switch (actionCase_) {
      case 1:
        hash = (37 * hash) + TRANSFER_FIELD_NUMBER;
        hash = (53 * hash) + getTransfer().hashCode();
        break;
      case 2:
        hash = (37 * hash) + EXECUTION_FIELD_NUMBER;
        hash = (53 * hash) + getExecution().hashCode();
        break;
      case 40:
        hash = (37 * hash) + STAKECREATE_FIELD_NUMBER;
        hash = (53 * hash) + getStakeCreate().hashCode();
        break;
      case 41:
        hash = (37 * hash) + STAKEUNSTAKE_FIELD_NUMBER;
        hash = (53 * hash) + getStakeUnstake().hashCode();
        break;
      case 42:
        hash = (37 * hash) + STAKEWITHDRAW_FIELD_NUMBER;
        hash = (53 * hash) + getStakeWithdraw().hashCode();
        break;
      case 43:
        hash = (37 * hash) + STAKEADDDEPOSIT_FIELD_NUMBER;
        hash = (53 * hash) + getStakeAddDeposit().hashCode();
        break;
      case 44:
        hash = (37 * hash) + STAKERESTAKE_FIELD_NUMBER;
        hash = (53 * hash) + getStakeRestake().hashCode();
        break;
      case 45:
        hash = (37 * hash) + STAKECHANGECANDIDATE_FIELD_NUMBER;
        hash = (53 * hash) + getStakeChangeCandidate().hashCode();
        break;
      case 46:
        hash = (37 * hash) + STAKETRANSFEROWNERSHIP_FIELD_NUMBER;
        hash = (53 * hash) + getStakeTransferOwnership().hashCode();
        break;
      case 47:
        hash = (37 * hash) + CANDIDATEREGISTER_FIELD_NUMBER;
        hash = (53 * hash) + getCandidateRegister().hashCode();
        break;
      case 48:
        hash = (37 * hash) + CANDIDATEUPDATE_FIELD_NUMBER;
        hash = (53 * hash) + getCandidateUpdate().hashCode();
        break;
      case 49:
        hash = (37 * hash) + CANDIDATEACTIVATE_FIELD_NUMBER;
        hash = (53 * hash) + getCandidateActivate().hashCode();
        break;
      case 51:
        hash = (37 * hash) + CANDIDATEENDORSEMENT_FIELD_NUMBER;
        hash = (53 * hash) + getCandidateEndorsement().hashCode();
        break;
      case 52:
        hash = (37 * hash) + CANDIDATETRANSFEROWNERSHIP_FIELD_NUMBER;
        hash = (53 * hash) + getCandidateTransferOwnership().hashCode();
        break;
      case 53:
        hash = (37 * hash) + STAKEMIGRATE_FIELD_NUMBER;
        hash = (53 * hash) + getStakeMigrate().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.github.iotexproject.grpc.api.EstimateActionGasConsumptionRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.iotexproject.grpc.api.EstimateActionGasConsumptionRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.iotexproject.grpc.api.EstimateActionGasConsumptionRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.iotexproject.grpc.api.EstimateActionGasConsumptionRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.iotexproject.grpc.api.EstimateActionGasConsumptionRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.iotexproject.grpc.api.EstimateActionGasConsumptionRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.iotexproject.grpc.api.EstimateActionGasConsumptionRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.github.iotexproject.grpc.api.EstimateActionGasConsumptionRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.github.iotexproject.grpc.api.EstimateActionGasConsumptionRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.github.iotexproject.grpc.api.EstimateActionGasConsumptionRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.github.iotexproject.grpc.api.EstimateActionGasConsumptionRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.github.iotexproject.grpc.api.EstimateActionGasConsumptionRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.github.iotexproject.grpc.api.EstimateActionGasConsumptionRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code iotexapi.EstimateActionGasConsumptionRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:iotexapi.EstimateActionGasConsumptionRequest)
      com.github.iotexproject.grpc.api.EstimateActionGasConsumptionRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.iotexproject.grpc.api.Api.internal_static_iotexapi_EstimateActionGasConsumptionRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.iotexproject.grpc.api.Api.internal_static_iotexapi_EstimateActionGasConsumptionRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.iotexproject.grpc.api.EstimateActionGasConsumptionRequest.class, com.github.iotexproject.grpc.api.EstimateActionGasConsumptionRequest.Builder.class);
    }

    // Construct using com.github.iotexproject.grpc.api.EstimateActionGasConsumptionRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      callerAddress_ = "";

      gasPrice_ = "";

      actionCase_ = 0;
      action_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.github.iotexproject.grpc.api.Api.internal_static_iotexapi_EstimateActionGasConsumptionRequest_descriptor;
    }

    @java.lang.Override
    public com.github.iotexproject.grpc.api.EstimateActionGasConsumptionRequest getDefaultInstanceForType() {
      return com.github.iotexproject.grpc.api.EstimateActionGasConsumptionRequest.getDefaultInstance();
    }

    @java.lang.Override
    public com.github.iotexproject.grpc.api.EstimateActionGasConsumptionRequest build() {
      com.github.iotexproject.grpc.api.EstimateActionGasConsumptionRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.github.iotexproject.grpc.api.EstimateActionGasConsumptionRequest buildPartial() {
      com.github.iotexproject.grpc.api.EstimateActionGasConsumptionRequest result = new com.github.iotexproject.grpc.api.EstimateActionGasConsumptionRequest(this);
      if (actionCase_ == 1) {
        if (transferBuilder_ == null) {
          result.action_ = action_;
        } else {
          result.action_ = transferBuilder_.build();
        }
      }
      if (actionCase_ == 2) {
        if (executionBuilder_ == null) {
          result.action_ = action_;
        } else {
          result.action_ = executionBuilder_.build();
        }
      }
      if (actionCase_ == 40) {
        if (stakeCreateBuilder_ == null) {
          result.action_ = action_;
        } else {
          result.action_ = stakeCreateBuilder_.build();
        }
      }
      if (actionCase_ == 41) {
        if (stakeUnstakeBuilder_ == null) {
          result.action_ = action_;
        } else {
          result.action_ = stakeUnstakeBuilder_.build();
        }
      }
      if (actionCase_ == 42) {
        if (stakeWithdrawBuilder_ == null) {
          result.action_ = action_;
        } else {
          result.action_ = stakeWithdrawBuilder_.build();
        }
      }
      if (actionCase_ == 43) {
        if (stakeAddDepositBuilder_ == null) {
          result.action_ = action_;
        } else {
          result.action_ = stakeAddDepositBuilder_.build();
        }
      }
      if (actionCase_ == 44) {
        if (stakeRestakeBuilder_ == null) {
          result.action_ = action_;
        } else {
          result.action_ = stakeRestakeBuilder_.build();
        }
      }
      if (actionCase_ == 45) {
        if (stakeChangeCandidateBuilder_ == null) {
          result.action_ = action_;
        } else {
          result.action_ = stakeChangeCandidateBuilder_.build();
        }
      }
      if (actionCase_ == 46) {
        if (stakeTransferOwnershipBuilder_ == null) {
          result.action_ = action_;
        } else {
          result.action_ = stakeTransferOwnershipBuilder_.build();
        }
      }
      if (actionCase_ == 47) {
        if (candidateRegisterBuilder_ == null) {
          result.action_ = action_;
        } else {
          result.action_ = candidateRegisterBuilder_.build();
        }
      }
      if (actionCase_ == 48) {
        if (candidateUpdateBuilder_ == null) {
          result.action_ = action_;
        } else {
          result.action_ = candidateUpdateBuilder_.build();
        }
      }
      if (actionCase_ == 49) {
        if (candidateActivateBuilder_ == null) {
          result.action_ = action_;
        } else {
          result.action_ = candidateActivateBuilder_.build();
        }
      }
      if (actionCase_ == 51) {
        if (candidateEndorsementBuilder_ == null) {
          result.action_ = action_;
        } else {
          result.action_ = candidateEndorsementBuilder_.build();
        }
      }
      if (actionCase_ == 52) {
        if (candidateTransferOwnershipBuilder_ == null) {
          result.action_ = action_;
        } else {
          result.action_ = candidateTransferOwnershipBuilder_.build();
        }
      }
      if (actionCase_ == 53) {
        if (stakeMigrateBuilder_ == null) {
          result.action_ = action_;
        } else {
          result.action_ = stakeMigrateBuilder_.build();
        }
      }
      result.callerAddress_ = callerAddress_;
      result.gasPrice_ = gasPrice_;
      result.actionCase_ = actionCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.github.iotexproject.grpc.api.EstimateActionGasConsumptionRequest) {
        return mergeFrom((com.github.iotexproject.grpc.api.EstimateActionGasConsumptionRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.github.iotexproject.grpc.api.EstimateActionGasConsumptionRequest other) {
      if (other == com.github.iotexproject.grpc.api.EstimateActionGasConsumptionRequest.getDefaultInstance()) return this;
      if (!other.getCallerAddress().isEmpty()) {
        callerAddress_ = other.callerAddress_;
        onChanged();
      }
      if (!other.getGasPrice().isEmpty()) {
        gasPrice_ = other.gasPrice_;
        onChanged();
      }
      switch (other.getActionCase()) {
        case TRANSFER: {
          mergeTransfer(other.getTransfer());
          break;
        }
        case EXECUTION: {
          mergeExecution(other.getExecution());
          break;
        }
        case STAKECREATE: {
          mergeStakeCreate(other.getStakeCreate());
          break;
        }
        case STAKEUNSTAKE: {
          mergeStakeUnstake(other.getStakeUnstake());
          break;
        }
        case STAKEWITHDRAW: {
          mergeStakeWithdraw(other.getStakeWithdraw());
          break;
        }
        case STAKEADDDEPOSIT: {
          mergeStakeAddDeposit(other.getStakeAddDeposit());
          break;
        }
        case STAKERESTAKE: {
          mergeStakeRestake(other.getStakeRestake());
          break;
        }
        case STAKECHANGECANDIDATE: {
          mergeStakeChangeCandidate(other.getStakeChangeCandidate());
          break;
        }
        case STAKETRANSFEROWNERSHIP: {
          mergeStakeTransferOwnership(other.getStakeTransferOwnership());
          break;
        }
        case CANDIDATEREGISTER: {
          mergeCandidateRegister(other.getCandidateRegister());
          break;
        }
        case CANDIDATEUPDATE: {
          mergeCandidateUpdate(other.getCandidateUpdate());
          break;
        }
        case CANDIDATEACTIVATE: {
          mergeCandidateActivate(other.getCandidateActivate());
          break;
        }
        case CANDIDATEENDORSEMENT: {
          mergeCandidateEndorsement(other.getCandidateEndorsement());
          break;
        }
        case CANDIDATETRANSFEROWNERSHIP: {
          mergeCandidateTransferOwnership(other.getCandidateTransferOwnership());
          break;
        }
        case STAKEMIGRATE: {
          mergeStakeMigrate(other.getStakeMigrate());
          break;
        }
        case ACTION_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.github.iotexproject.grpc.api.EstimateActionGasConsumptionRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.github.iotexproject.grpc.api.EstimateActionGasConsumptionRequest) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int actionCase_ = 0;
    private java.lang.Object action_;
    public ActionCase
        getActionCase() {
      return ActionCase.forNumber(
          actionCase_);
    }

    public Builder clearAction() {
      actionCase_ = 0;
      action_ = null;
      onChanged();
      return this;
    }


    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.iotexproject.grpc.types.Transfer, com.github.iotexproject.grpc.types.Transfer.Builder, com.github.iotexproject.grpc.types.TransferOrBuilder> transferBuilder_;
    /**
     * <code>.iotextypes.Transfer transfer = 1;</code>
     * @return Whether the transfer field is set.
     */
    @java.lang.Override
    public boolean hasTransfer() {
      return actionCase_ == 1;
    }
    /**
     * <code>.iotextypes.Transfer transfer = 1;</code>
     * @return The transfer.
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.Transfer getTransfer() {
      if (transferBuilder_ == null) {
        if (actionCase_ == 1) {
          return (com.github.iotexproject.grpc.types.Transfer) action_;
        }
        return com.github.iotexproject.grpc.types.Transfer.getDefaultInstance();
      } else {
        if (actionCase_ == 1) {
          return transferBuilder_.getMessage();
        }
        return com.github.iotexproject.grpc.types.Transfer.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.Transfer transfer = 1;</code>
     */
    public Builder setTransfer(com.github.iotexproject.grpc.types.Transfer value) {
      if (transferBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        action_ = value;
        onChanged();
      } else {
        transferBuilder_.setMessage(value);
      }
      actionCase_ = 1;
      return this;
    }
    /**
     * <code>.iotextypes.Transfer transfer = 1;</code>
     */
    public Builder setTransfer(
        com.github.iotexproject.grpc.types.Transfer.Builder builderForValue) {
      if (transferBuilder_ == null) {
        action_ = builderForValue.build();
        onChanged();
      } else {
        transferBuilder_.setMessage(builderForValue.build());
      }
      actionCase_ = 1;
      return this;
    }
    /**
     * <code>.iotextypes.Transfer transfer = 1;</code>
     */
    public Builder mergeTransfer(com.github.iotexproject.grpc.types.Transfer value) {
      if (transferBuilder_ == null) {
        if (actionCase_ == 1 &&
            action_ != com.github.iotexproject.grpc.types.Transfer.getDefaultInstance()) {
          action_ = com.github.iotexproject.grpc.types.Transfer.newBuilder((com.github.iotexproject.grpc.types.Transfer) action_)
              .mergeFrom(value).buildPartial();
        } else {
          action_ = value;
        }
        onChanged();
      } else {
        if (actionCase_ == 1) {
          transferBuilder_.mergeFrom(value);
        }
        transferBuilder_.setMessage(value);
      }
      actionCase_ = 1;
      return this;
    }
    /**
     * <code>.iotextypes.Transfer transfer = 1;</code>
     */
    public Builder clearTransfer() {
      if (transferBuilder_ == null) {
        if (actionCase_ == 1) {
          actionCase_ = 0;
          action_ = null;
          onChanged();
        }
      } else {
        if (actionCase_ == 1) {
          actionCase_ = 0;
          action_ = null;
        }
        transferBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iotextypes.Transfer transfer = 1;</code>
     */
    public com.github.iotexproject.grpc.types.Transfer.Builder getTransferBuilder() {
      return getTransferFieldBuilder().getBuilder();
    }
    /**
     * <code>.iotextypes.Transfer transfer = 1;</code>
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.TransferOrBuilder getTransferOrBuilder() {
      if ((actionCase_ == 1) && (transferBuilder_ != null)) {
        return transferBuilder_.getMessageOrBuilder();
      } else {
        if (actionCase_ == 1) {
          return (com.github.iotexproject.grpc.types.Transfer) action_;
        }
        return com.github.iotexproject.grpc.types.Transfer.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.Transfer transfer = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.iotexproject.grpc.types.Transfer, com.github.iotexproject.grpc.types.Transfer.Builder, com.github.iotexproject.grpc.types.TransferOrBuilder> 
        getTransferFieldBuilder() {
      if (transferBuilder_ == null) {
        if (!(actionCase_ == 1)) {
          action_ = com.github.iotexproject.grpc.types.Transfer.getDefaultInstance();
        }
        transferBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.iotexproject.grpc.types.Transfer, com.github.iotexproject.grpc.types.Transfer.Builder, com.github.iotexproject.grpc.types.TransferOrBuilder>(
                (com.github.iotexproject.grpc.types.Transfer) action_,
                getParentForChildren(),
                isClean());
        action_ = null;
      }
      actionCase_ = 1;
      onChanged();;
      return transferBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.iotexproject.grpc.types.Execution, com.github.iotexproject.grpc.types.Execution.Builder, com.github.iotexproject.grpc.types.ExecutionOrBuilder> executionBuilder_;
    /**
     * <code>.iotextypes.Execution execution = 2;</code>
     * @return Whether the execution field is set.
     */
    @java.lang.Override
    public boolean hasExecution() {
      return actionCase_ == 2;
    }
    /**
     * <code>.iotextypes.Execution execution = 2;</code>
     * @return The execution.
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.Execution getExecution() {
      if (executionBuilder_ == null) {
        if (actionCase_ == 2) {
          return (com.github.iotexproject.grpc.types.Execution) action_;
        }
        return com.github.iotexproject.grpc.types.Execution.getDefaultInstance();
      } else {
        if (actionCase_ == 2) {
          return executionBuilder_.getMessage();
        }
        return com.github.iotexproject.grpc.types.Execution.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.Execution execution = 2;</code>
     */
    public Builder setExecution(com.github.iotexproject.grpc.types.Execution value) {
      if (executionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        action_ = value;
        onChanged();
      } else {
        executionBuilder_.setMessage(value);
      }
      actionCase_ = 2;
      return this;
    }
    /**
     * <code>.iotextypes.Execution execution = 2;</code>
     */
    public Builder setExecution(
        com.github.iotexproject.grpc.types.Execution.Builder builderForValue) {
      if (executionBuilder_ == null) {
        action_ = builderForValue.build();
        onChanged();
      } else {
        executionBuilder_.setMessage(builderForValue.build());
      }
      actionCase_ = 2;
      return this;
    }
    /**
     * <code>.iotextypes.Execution execution = 2;</code>
     */
    public Builder mergeExecution(com.github.iotexproject.grpc.types.Execution value) {
      if (executionBuilder_ == null) {
        if (actionCase_ == 2 &&
            action_ != com.github.iotexproject.grpc.types.Execution.getDefaultInstance()) {
          action_ = com.github.iotexproject.grpc.types.Execution.newBuilder((com.github.iotexproject.grpc.types.Execution) action_)
              .mergeFrom(value).buildPartial();
        } else {
          action_ = value;
        }
        onChanged();
      } else {
        if (actionCase_ == 2) {
          executionBuilder_.mergeFrom(value);
        }
        executionBuilder_.setMessage(value);
      }
      actionCase_ = 2;
      return this;
    }
    /**
     * <code>.iotextypes.Execution execution = 2;</code>
     */
    public Builder clearExecution() {
      if (executionBuilder_ == null) {
        if (actionCase_ == 2) {
          actionCase_ = 0;
          action_ = null;
          onChanged();
        }
      } else {
        if (actionCase_ == 2) {
          actionCase_ = 0;
          action_ = null;
        }
        executionBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iotextypes.Execution execution = 2;</code>
     */
    public com.github.iotexproject.grpc.types.Execution.Builder getExecutionBuilder() {
      return getExecutionFieldBuilder().getBuilder();
    }
    /**
     * <code>.iotextypes.Execution execution = 2;</code>
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.ExecutionOrBuilder getExecutionOrBuilder() {
      if ((actionCase_ == 2) && (executionBuilder_ != null)) {
        return executionBuilder_.getMessageOrBuilder();
      } else {
        if (actionCase_ == 2) {
          return (com.github.iotexproject.grpc.types.Execution) action_;
        }
        return com.github.iotexproject.grpc.types.Execution.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.Execution execution = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.iotexproject.grpc.types.Execution, com.github.iotexproject.grpc.types.Execution.Builder, com.github.iotexproject.grpc.types.ExecutionOrBuilder> 
        getExecutionFieldBuilder() {
      if (executionBuilder_ == null) {
        if (!(actionCase_ == 2)) {
          action_ = com.github.iotexproject.grpc.types.Execution.getDefaultInstance();
        }
        executionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.iotexproject.grpc.types.Execution, com.github.iotexproject.grpc.types.Execution.Builder, com.github.iotexproject.grpc.types.ExecutionOrBuilder>(
                (com.github.iotexproject.grpc.types.Execution) action_,
                getParentForChildren(),
                isClean());
        action_ = null;
      }
      actionCase_ = 2;
      onChanged();;
      return executionBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.iotexproject.grpc.types.StakeCreate, com.github.iotexproject.grpc.types.StakeCreate.Builder, com.github.iotexproject.grpc.types.StakeCreateOrBuilder> stakeCreateBuilder_;
    /**
     * <pre>
     * Native staking
     * </pre>
     *
     * <code>.iotextypes.StakeCreate stakeCreate = 40;</code>
     * @return Whether the stakeCreate field is set.
     */
    @java.lang.Override
    public boolean hasStakeCreate() {
      return actionCase_ == 40;
    }
    /**
     * <pre>
     * Native staking
     * </pre>
     *
     * <code>.iotextypes.StakeCreate stakeCreate = 40;</code>
     * @return The stakeCreate.
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.StakeCreate getStakeCreate() {
      if (stakeCreateBuilder_ == null) {
        if (actionCase_ == 40) {
          return (com.github.iotexproject.grpc.types.StakeCreate) action_;
        }
        return com.github.iotexproject.grpc.types.StakeCreate.getDefaultInstance();
      } else {
        if (actionCase_ == 40) {
          return stakeCreateBuilder_.getMessage();
        }
        return com.github.iotexproject.grpc.types.StakeCreate.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Native staking
     * </pre>
     *
     * <code>.iotextypes.StakeCreate stakeCreate = 40;</code>
     */
    public Builder setStakeCreate(com.github.iotexproject.grpc.types.StakeCreate value) {
      if (stakeCreateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        action_ = value;
        onChanged();
      } else {
        stakeCreateBuilder_.setMessage(value);
      }
      actionCase_ = 40;
      return this;
    }
    /**
     * <pre>
     * Native staking
     * </pre>
     *
     * <code>.iotextypes.StakeCreate stakeCreate = 40;</code>
     */
    public Builder setStakeCreate(
        com.github.iotexproject.grpc.types.StakeCreate.Builder builderForValue) {
      if (stakeCreateBuilder_ == null) {
        action_ = builderForValue.build();
        onChanged();
      } else {
        stakeCreateBuilder_.setMessage(builderForValue.build());
      }
      actionCase_ = 40;
      return this;
    }
    /**
     * <pre>
     * Native staking
     * </pre>
     *
     * <code>.iotextypes.StakeCreate stakeCreate = 40;</code>
     */
    public Builder mergeStakeCreate(com.github.iotexproject.grpc.types.StakeCreate value) {
      if (stakeCreateBuilder_ == null) {
        if (actionCase_ == 40 &&
            action_ != com.github.iotexproject.grpc.types.StakeCreate.getDefaultInstance()) {
          action_ = com.github.iotexproject.grpc.types.StakeCreate.newBuilder((com.github.iotexproject.grpc.types.StakeCreate) action_)
              .mergeFrom(value).buildPartial();
        } else {
          action_ = value;
        }
        onChanged();
      } else {
        if (actionCase_ == 40) {
          stakeCreateBuilder_.mergeFrom(value);
        }
        stakeCreateBuilder_.setMessage(value);
      }
      actionCase_ = 40;
      return this;
    }
    /**
     * <pre>
     * Native staking
     * </pre>
     *
     * <code>.iotextypes.StakeCreate stakeCreate = 40;</code>
     */
    public Builder clearStakeCreate() {
      if (stakeCreateBuilder_ == null) {
        if (actionCase_ == 40) {
          actionCase_ = 0;
          action_ = null;
          onChanged();
        }
      } else {
        if (actionCase_ == 40) {
          actionCase_ = 0;
          action_ = null;
        }
        stakeCreateBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Native staking
     * </pre>
     *
     * <code>.iotextypes.StakeCreate stakeCreate = 40;</code>
     */
    public com.github.iotexproject.grpc.types.StakeCreate.Builder getStakeCreateBuilder() {
      return getStakeCreateFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Native staking
     * </pre>
     *
     * <code>.iotextypes.StakeCreate stakeCreate = 40;</code>
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.StakeCreateOrBuilder getStakeCreateOrBuilder() {
      if ((actionCase_ == 40) && (stakeCreateBuilder_ != null)) {
        return stakeCreateBuilder_.getMessageOrBuilder();
      } else {
        if (actionCase_ == 40) {
          return (com.github.iotexproject.grpc.types.StakeCreate) action_;
        }
        return com.github.iotexproject.grpc.types.StakeCreate.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Native staking
     * </pre>
     *
     * <code>.iotextypes.StakeCreate stakeCreate = 40;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.iotexproject.grpc.types.StakeCreate, com.github.iotexproject.grpc.types.StakeCreate.Builder, com.github.iotexproject.grpc.types.StakeCreateOrBuilder> 
        getStakeCreateFieldBuilder() {
      if (stakeCreateBuilder_ == null) {
        if (!(actionCase_ == 40)) {
          action_ = com.github.iotexproject.grpc.types.StakeCreate.getDefaultInstance();
        }
        stakeCreateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.iotexproject.grpc.types.StakeCreate, com.github.iotexproject.grpc.types.StakeCreate.Builder, com.github.iotexproject.grpc.types.StakeCreateOrBuilder>(
                (com.github.iotexproject.grpc.types.StakeCreate) action_,
                getParentForChildren(),
                isClean());
        action_ = null;
      }
      actionCase_ = 40;
      onChanged();;
      return stakeCreateBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.iotexproject.grpc.types.StakeReclaim, com.github.iotexproject.grpc.types.StakeReclaim.Builder, com.github.iotexproject.grpc.types.StakeReclaimOrBuilder> stakeUnstakeBuilder_;
    /**
     * <code>.iotextypes.StakeReclaim stakeUnstake = 41;</code>
     * @return Whether the stakeUnstake field is set.
     */
    @java.lang.Override
    public boolean hasStakeUnstake() {
      return actionCase_ == 41;
    }
    /**
     * <code>.iotextypes.StakeReclaim stakeUnstake = 41;</code>
     * @return The stakeUnstake.
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.StakeReclaim getStakeUnstake() {
      if (stakeUnstakeBuilder_ == null) {
        if (actionCase_ == 41) {
          return (com.github.iotexproject.grpc.types.StakeReclaim) action_;
        }
        return com.github.iotexproject.grpc.types.StakeReclaim.getDefaultInstance();
      } else {
        if (actionCase_ == 41) {
          return stakeUnstakeBuilder_.getMessage();
        }
        return com.github.iotexproject.grpc.types.StakeReclaim.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.StakeReclaim stakeUnstake = 41;</code>
     */
    public Builder setStakeUnstake(com.github.iotexproject.grpc.types.StakeReclaim value) {
      if (stakeUnstakeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        action_ = value;
        onChanged();
      } else {
        stakeUnstakeBuilder_.setMessage(value);
      }
      actionCase_ = 41;
      return this;
    }
    /**
     * <code>.iotextypes.StakeReclaim stakeUnstake = 41;</code>
     */
    public Builder setStakeUnstake(
        com.github.iotexproject.grpc.types.StakeReclaim.Builder builderForValue) {
      if (stakeUnstakeBuilder_ == null) {
        action_ = builderForValue.build();
        onChanged();
      } else {
        stakeUnstakeBuilder_.setMessage(builderForValue.build());
      }
      actionCase_ = 41;
      return this;
    }
    /**
     * <code>.iotextypes.StakeReclaim stakeUnstake = 41;</code>
     */
    public Builder mergeStakeUnstake(com.github.iotexproject.grpc.types.StakeReclaim value) {
      if (stakeUnstakeBuilder_ == null) {
        if (actionCase_ == 41 &&
            action_ != com.github.iotexproject.grpc.types.StakeReclaim.getDefaultInstance()) {
          action_ = com.github.iotexproject.grpc.types.StakeReclaim.newBuilder((com.github.iotexproject.grpc.types.StakeReclaim) action_)
              .mergeFrom(value).buildPartial();
        } else {
          action_ = value;
        }
        onChanged();
      } else {
        if (actionCase_ == 41) {
          stakeUnstakeBuilder_.mergeFrom(value);
        }
        stakeUnstakeBuilder_.setMessage(value);
      }
      actionCase_ = 41;
      return this;
    }
    /**
     * <code>.iotextypes.StakeReclaim stakeUnstake = 41;</code>
     */
    public Builder clearStakeUnstake() {
      if (stakeUnstakeBuilder_ == null) {
        if (actionCase_ == 41) {
          actionCase_ = 0;
          action_ = null;
          onChanged();
        }
      } else {
        if (actionCase_ == 41) {
          actionCase_ = 0;
          action_ = null;
        }
        stakeUnstakeBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iotextypes.StakeReclaim stakeUnstake = 41;</code>
     */
    public com.github.iotexproject.grpc.types.StakeReclaim.Builder getStakeUnstakeBuilder() {
      return getStakeUnstakeFieldBuilder().getBuilder();
    }
    /**
     * <code>.iotextypes.StakeReclaim stakeUnstake = 41;</code>
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.StakeReclaimOrBuilder getStakeUnstakeOrBuilder() {
      if ((actionCase_ == 41) && (stakeUnstakeBuilder_ != null)) {
        return stakeUnstakeBuilder_.getMessageOrBuilder();
      } else {
        if (actionCase_ == 41) {
          return (com.github.iotexproject.grpc.types.StakeReclaim) action_;
        }
        return com.github.iotexproject.grpc.types.StakeReclaim.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.StakeReclaim stakeUnstake = 41;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.iotexproject.grpc.types.StakeReclaim, com.github.iotexproject.grpc.types.StakeReclaim.Builder, com.github.iotexproject.grpc.types.StakeReclaimOrBuilder> 
        getStakeUnstakeFieldBuilder() {
      if (stakeUnstakeBuilder_ == null) {
        if (!(actionCase_ == 41)) {
          action_ = com.github.iotexproject.grpc.types.StakeReclaim.getDefaultInstance();
        }
        stakeUnstakeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.iotexproject.grpc.types.StakeReclaim, com.github.iotexproject.grpc.types.StakeReclaim.Builder, com.github.iotexproject.grpc.types.StakeReclaimOrBuilder>(
                (com.github.iotexproject.grpc.types.StakeReclaim) action_,
                getParentForChildren(),
                isClean());
        action_ = null;
      }
      actionCase_ = 41;
      onChanged();;
      return stakeUnstakeBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.iotexproject.grpc.types.StakeReclaim, com.github.iotexproject.grpc.types.StakeReclaim.Builder, com.github.iotexproject.grpc.types.StakeReclaimOrBuilder> stakeWithdrawBuilder_;
    /**
     * <code>.iotextypes.StakeReclaim stakeWithdraw = 42;</code>
     * @return Whether the stakeWithdraw field is set.
     */
    @java.lang.Override
    public boolean hasStakeWithdraw() {
      return actionCase_ == 42;
    }
    /**
     * <code>.iotextypes.StakeReclaim stakeWithdraw = 42;</code>
     * @return The stakeWithdraw.
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.StakeReclaim getStakeWithdraw() {
      if (stakeWithdrawBuilder_ == null) {
        if (actionCase_ == 42) {
          return (com.github.iotexproject.grpc.types.StakeReclaim) action_;
        }
        return com.github.iotexproject.grpc.types.StakeReclaim.getDefaultInstance();
      } else {
        if (actionCase_ == 42) {
          return stakeWithdrawBuilder_.getMessage();
        }
        return com.github.iotexproject.grpc.types.StakeReclaim.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.StakeReclaim stakeWithdraw = 42;</code>
     */
    public Builder setStakeWithdraw(com.github.iotexproject.grpc.types.StakeReclaim value) {
      if (stakeWithdrawBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        action_ = value;
        onChanged();
      } else {
        stakeWithdrawBuilder_.setMessage(value);
      }
      actionCase_ = 42;
      return this;
    }
    /**
     * <code>.iotextypes.StakeReclaim stakeWithdraw = 42;</code>
     */
    public Builder setStakeWithdraw(
        com.github.iotexproject.grpc.types.StakeReclaim.Builder builderForValue) {
      if (stakeWithdrawBuilder_ == null) {
        action_ = builderForValue.build();
        onChanged();
      } else {
        stakeWithdrawBuilder_.setMessage(builderForValue.build());
      }
      actionCase_ = 42;
      return this;
    }
    /**
     * <code>.iotextypes.StakeReclaim stakeWithdraw = 42;</code>
     */
    public Builder mergeStakeWithdraw(com.github.iotexproject.grpc.types.StakeReclaim value) {
      if (stakeWithdrawBuilder_ == null) {
        if (actionCase_ == 42 &&
            action_ != com.github.iotexproject.grpc.types.StakeReclaim.getDefaultInstance()) {
          action_ = com.github.iotexproject.grpc.types.StakeReclaim.newBuilder((com.github.iotexproject.grpc.types.StakeReclaim) action_)
              .mergeFrom(value).buildPartial();
        } else {
          action_ = value;
        }
        onChanged();
      } else {
        if (actionCase_ == 42) {
          stakeWithdrawBuilder_.mergeFrom(value);
        }
        stakeWithdrawBuilder_.setMessage(value);
      }
      actionCase_ = 42;
      return this;
    }
    /**
     * <code>.iotextypes.StakeReclaim stakeWithdraw = 42;</code>
     */
    public Builder clearStakeWithdraw() {
      if (stakeWithdrawBuilder_ == null) {
        if (actionCase_ == 42) {
          actionCase_ = 0;
          action_ = null;
          onChanged();
        }
      } else {
        if (actionCase_ == 42) {
          actionCase_ = 0;
          action_ = null;
        }
        stakeWithdrawBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iotextypes.StakeReclaim stakeWithdraw = 42;</code>
     */
    public com.github.iotexproject.grpc.types.StakeReclaim.Builder getStakeWithdrawBuilder() {
      return getStakeWithdrawFieldBuilder().getBuilder();
    }
    /**
     * <code>.iotextypes.StakeReclaim stakeWithdraw = 42;</code>
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.StakeReclaimOrBuilder getStakeWithdrawOrBuilder() {
      if ((actionCase_ == 42) && (stakeWithdrawBuilder_ != null)) {
        return stakeWithdrawBuilder_.getMessageOrBuilder();
      } else {
        if (actionCase_ == 42) {
          return (com.github.iotexproject.grpc.types.StakeReclaim) action_;
        }
        return com.github.iotexproject.grpc.types.StakeReclaim.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.StakeReclaim stakeWithdraw = 42;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.iotexproject.grpc.types.StakeReclaim, com.github.iotexproject.grpc.types.StakeReclaim.Builder, com.github.iotexproject.grpc.types.StakeReclaimOrBuilder> 
        getStakeWithdrawFieldBuilder() {
      if (stakeWithdrawBuilder_ == null) {
        if (!(actionCase_ == 42)) {
          action_ = com.github.iotexproject.grpc.types.StakeReclaim.getDefaultInstance();
        }
        stakeWithdrawBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.iotexproject.grpc.types.StakeReclaim, com.github.iotexproject.grpc.types.StakeReclaim.Builder, com.github.iotexproject.grpc.types.StakeReclaimOrBuilder>(
                (com.github.iotexproject.grpc.types.StakeReclaim) action_,
                getParentForChildren(),
                isClean());
        action_ = null;
      }
      actionCase_ = 42;
      onChanged();;
      return stakeWithdrawBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.iotexproject.grpc.types.StakeAddDeposit, com.github.iotexproject.grpc.types.StakeAddDeposit.Builder, com.github.iotexproject.grpc.types.StakeAddDepositOrBuilder> stakeAddDepositBuilder_;
    /**
     * <code>.iotextypes.StakeAddDeposit stakeAddDeposit = 43;</code>
     * @return Whether the stakeAddDeposit field is set.
     */
    @java.lang.Override
    public boolean hasStakeAddDeposit() {
      return actionCase_ == 43;
    }
    /**
     * <code>.iotextypes.StakeAddDeposit stakeAddDeposit = 43;</code>
     * @return The stakeAddDeposit.
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.StakeAddDeposit getStakeAddDeposit() {
      if (stakeAddDepositBuilder_ == null) {
        if (actionCase_ == 43) {
          return (com.github.iotexproject.grpc.types.StakeAddDeposit) action_;
        }
        return com.github.iotexproject.grpc.types.StakeAddDeposit.getDefaultInstance();
      } else {
        if (actionCase_ == 43) {
          return stakeAddDepositBuilder_.getMessage();
        }
        return com.github.iotexproject.grpc.types.StakeAddDeposit.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.StakeAddDeposit stakeAddDeposit = 43;</code>
     */
    public Builder setStakeAddDeposit(com.github.iotexproject.grpc.types.StakeAddDeposit value) {
      if (stakeAddDepositBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        action_ = value;
        onChanged();
      } else {
        stakeAddDepositBuilder_.setMessage(value);
      }
      actionCase_ = 43;
      return this;
    }
    /**
     * <code>.iotextypes.StakeAddDeposit stakeAddDeposit = 43;</code>
     */
    public Builder setStakeAddDeposit(
        com.github.iotexproject.grpc.types.StakeAddDeposit.Builder builderForValue) {
      if (stakeAddDepositBuilder_ == null) {
        action_ = builderForValue.build();
        onChanged();
      } else {
        stakeAddDepositBuilder_.setMessage(builderForValue.build());
      }
      actionCase_ = 43;
      return this;
    }
    /**
     * <code>.iotextypes.StakeAddDeposit stakeAddDeposit = 43;</code>
     */
    public Builder mergeStakeAddDeposit(com.github.iotexproject.grpc.types.StakeAddDeposit value) {
      if (stakeAddDepositBuilder_ == null) {
        if (actionCase_ == 43 &&
            action_ != com.github.iotexproject.grpc.types.StakeAddDeposit.getDefaultInstance()) {
          action_ = com.github.iotexproject.grpc.types.StakeAddDeposit.newBuilder((com.github.iotexproject.grpc.types.StakeAddDeposit) action_)
              .mergeFrom(value).buildPartial();
        } else {
          action_ = value;
        }
        onChanged();
      } else {
        if (actionCase_ == 43) {
          stakeAddDepositBuilder_.mergeFrom(value);
        }
        stakeAddDepositBuilder_.setMessage(value);
      }
      actionCase_ = 43;
      return this;
    }
    /**
     * <code>.iotextypes.StakeAddDeposit stakeAddDeposit = 43;</code>
     */
    public Builder clearStakeAddDeposit() {
      if (stakeAddDepositBuilder_ == null) {
        if (actionCase_ == 43) {
          actionCase_ = 0;
          action_ = null;
          onChanged();
        }
      } else {
        if (actionCase_ == 43) {
          actionCase_ = 0;
          action_ = null;
        }
        stakeAddDepositBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iotextypes.StakeAddDeposit stakeAddDeposit = 43;</code>
     */
    public com.github.iotexproject.grpc.types.StakeAddDeposit.Builder getStakeAddDepositBuilder() {
      return getStakeAddDepositFieldBuilder().getBuilder();
    }
    /**
     * <code>.iotextypes.StakeAddDeposit stakeAddDeposit = 43;</code>
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.StakeAddDepositOrBuilder getStakeAddDepositOrBuilder() {
      if ((actionCase_ == 43) && (stakeAddDepositBuilder_ != null)) {
        return stakeAddDepositBuilder_.getMessageOrBuilder();
      } else {
        if (actionCase_ == 43) {
          return (com.github.iotexproject.grpc.types.StakeAddDeposit) action_;
        }
        return com.github.iotexproject.grpc.types.StakeAddDeposit.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.StakeAddDeposit stakeAddDeposit = 43;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.iotexproject.grpc.types.StakeAddDeposit, com.github.iotexproject.grpc.types.StakeAddDeposit.Builder, com.github.iotexproject.grpc.types.StakeAddDepositOrBuilder> 
        getStakeAddDepositFieldBuilder() {
      if (stakeAddDepositBuilder_ == null) {
        if (!(actionCase_ == 43)) {
          action_ = com.github.iotexproject.grpc.types.StakeAddDeposit.getDefaultInstance();
        }
        stakeAddDepositBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.iotexproject.grpc.types.StakeAddDeposit, com.github.iotexproject.grpc.types.StakeAddDeposit.Builder, com.github.iotexproject.grpc.types.StakeAddDepositOrBuilder>(
                (com.github.iotexproject.grpc.types.StakeAddDeposit) action_,
                getParentForChildren(),
                isClean());
        action_ = null;
      }
      actionCase_ = 43;
      onChanged();;
      return stakeAddDepositBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.iotexproject.grpc.types.StakeRestake, com.github.iotexproject.grpc.types.StakeRestake.Builder, com.github.iotexproject.grpc.types.StakeRestakeOrBuilder> stakeRestakeBuilder_;
    /**
     * <code>.iotextypes.StakeRestake stakeRestake = 44;</code>
     * @return Whether the stakeRestake field is set.
     */
    @java.lang.Override
    public boolean hasStakeRestake() {
      return actionCase_ == 44;
    }
    /**
     * <code>.iotextypes.StakeRestake stakeRestake = 44;</code>
     * @return The stakeRestake.
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.StakeRestake getStakeRestake() {
      if (stakeRestakeBuilder_ == null) {
        if (actionCase_ == 44) {
          return (com.github.iotexproject.grpc.types.StakeRestake) action_;
        }
        return com.github.iotexproject.grpc.types.StakeRestake.getDefaultInstance();
      } else {
        if (actionCase_ == 44) {
          return stakeRestakeBuilder_.getMessage();
        }
        return com.github.iotexproject.grpc.types.StakeRestake.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.StakeRestake stakeRestake = 44;</code>
     */
    public Builder setStakeRestake(com.github.iotexproject.grpc.types.StakeRestake value) {
      if (stakeRestakeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        action_ = value;
        onChanged();
      } else {
        stakeRestakeBuilder_.setMessage(value);
      }
      actionCase_ = 44;
      return this;
    }
    /**
     * <code>.iotextypes.StakeRestake stakeRestake = 44;</code>
     */
    public Builder setStakeRestake(
        com.github.iotexproject.grpc.types.StakeRestake.Builder builderForValue) {
      if (stakeRestakeBuilder_ == null) {
        action_ = builderForValue.build();
        onChanged();
      } else {
        stakeRestakeBuilder_.setMessage(builderForValue.build());
      }
      actionCase_ = 44;
      return this;
    }
    /**
     * <code>.iotextypes.StakeRestake stakeRestake = 44;</code>
     */
    public Builder mergeStakeRestake(com.github.iotexproject.grpc.types.StakeRestake value) {
      if (stakeRestakeBuilder_ == null) {
        if (actionCase_ == 44 &&
            action_ != com.github.iotexproject.grpc.types.StakeRestake.getDefaultInstance()) {
          action_ = com.github.iotexproject.grpc.types.StakeRestake.newBuilder((com.github.iotexproject.grpc.types.StakeRestake) action_)
              .mergeFrom(value).buildPartial();
        } else {
          action_ = value;
        }
        onChanged();
      } else {
        if (actionCase_ == 44) {
          stakeRestakeBuilder_.mergeFrom(value);
        }
        stakeRestakeBuilder_.setMessage(value);
      }
      actionCase_ = 44;
      return this;
    }
    /**
     * <code>.iotextypes.StakeRestake stakeRestake = 44;</code>
     */
    public Builder clearStakeRestake() {
      if (stakeRestakeBuilder_ == null) {
        if (actionCase_ == 44) {
          actionCase_ = 0;
          action_ = null;
          onChanged();
        }
      } else {
        if (actionCase_ == 44) {
          actionCase_ = 0;
          action_ = null;
        }
        stakeRestakeBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iotextypes.StakeRestake stakeRestake = 44;</code>
     */
    public com.github.iotexproject.grpc.types.StakeRestake.Builder getStakeRestakeBuilder() {
      return getStakeRestakeFieldBuilder().getBuilder();
    }
    /**
     * <code>.iotextypes.StakeRestake stakeRestake = 44;</code>
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.StakeRestakeOrBuilder getStakeRestakeOrBuilder() {
      if ((actionCase_ == 44) && (stakeRestakeBuilder_ != null)) {
        return stakeRestakeBuilder_.getMessageOrBuilder();
      } else {
        if (actionCase_ == 44) {
          return (com.github.iotexproject.grpc.types.StakeRestake) action_;
        }
        return com.github.iotexproject.grpc.types.StakeRestake.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.StakeRestake stakeRestake = 44;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.iotexproject.grpc.types.StakeRestake, com.github.iotexproject.grpc.types.StakeRestake.Builder, com.github.iotexproject.grpc.types.StakeRestakeOrBuilder> 
        getStakeRestakeFieldBuilder() {
      if (stakeRestakeBuilder_ == null) {
        if (!(actionCase_ == 44)) {
          action_ = com.github.iotexproject.grpc.types.StakeRestake.getDefaultInstance();
        }
        stakeRestakeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.iotexproject.grpc.types.StakeRestake, com.github.iotexproject.grpc.types.StakeRestake.Builder, com.github.iotexproject.grpc.types.StakeRestakeOrBuilder>(
                (com.github.iotexproject.grpc.types.StakeRestake) action_,
                getParentForChildren(),
                isClean());
        action_ = null;
      }
      actionCase_ = 44;
      onChanged();;
      return stakeRestakeBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.iotexproject.grpc.types.StakeChangeCandidate, com.github.iotexproject.grpc.types.StakeChangeCandidate.Builder, com.github.iotexproject.grpc.types.StakeChangeCandidateOrBuilder> stakeChangeCandidateBuilder_;
    /**
     * <code>.iotextypes.StakeChangeCandidate stakeChangeCandidate = 45;</code>
     * @return Whether the stakeChangeCandidate field is set.
     */
    @java.lang.Override
    public boolean hasStakeChangeCandidate() {
      return actionCase_ == 45;
    }
    /**
     * <code>.iotextypes.StakeChangeCandidate stakeChangeCandidate = 45;</code>
     * @return The stakeChangeCandidate.
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.StakeChangeCandidate getStakeChangeCandidate() {
      if (stakeChangeCandidateBuilder_ == null) {
        if (actionCase_ == 45) {
          return (com.github.iotexproject.grpc.types.StakeChangeCandidate) action_;
        }
        return com.github.iotexproject.grpc.types.StakeChangeCandidate.getDefaultInstance();
      } else {
        if (actionCase_ == 45) {
          return stakeChangeCandidateBuilder_.getMessage();
        }
        return com.github.iotexproject.grpc.types.StakeChangeCandidate.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.StakeChangeCandidate stakeChangeCandidate = 45;</code>
     */
    public Builder setStakeChangeCandidate(com.github.iotexproject.grpc.types.StakeChangeCandidate value) {
      if (stakeChangeCandidateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        action_ = value;
        onChanged();
      } else {
        stakeChangeCandidateBuilder_.setMessage(value);
      }
      actionCase_ = 45;
      return this;
    }
    /**
     * <code>.iotextypes.StakeChangeCandidate stakeChangeCandidate = 45;</code>
     */
    public Builder setStakeChangeCandidate(
        com.github.iotexproject.grpc.types.StakeChangeCandidate.Builder builderForValue) {
      if (stakeChangeCandidateBuilder_ == null) {
        action_ = builderForValue.build();
        onChanged();
      } else {
        stakeChangeCandidateBuilder_.setMessage(builderForValue.build());
      }
      actionCase_ = 45;
      return this;
    }
    /**
     * <code>.iotextypes.StakeChangeCandidate stakeChangeCandidate = 45;</code>
     */
    public Builder mergeStakeChangeCandidate(com.github.iotexproject.grpc.types.StakeChangeCandidate value) {
      if (stakeChangeCandidateBuilder_ == null) {
        if (actionCase_ == 45 &&
            action_ != com.github.iotexproject.grpc.types.StakeChangeCandidate.getDefaultInstance()) {
          action_ = com.github.iotexproject.grpc.types.StakeChangeCandidate.newBuilder((com.github.iotexproject.grpc.types.StakeChangeCandidate) action_)
              .mergeFrom(value).buildPartial();
        } else {
          action_ = value;
        }
        onChanged();
      } else {
        if (actionCase_ == 45) {
          stakeChangeCandidateBuilder_.mergeFrom(value);
        }
        stakeChangeCandidateBuilder_.setMessage(value);
      }
      actionCase_ = 45;
      return this;
    }
    /**
     * <code>.iotextypes.StakeChangeCandidate stakeChangeCandidate = 45;</code>
     */
    public Builder clearStakeChangeCandidate() {
      if (stakeChangeCandidateBuilder_ == null) {
        if (actionCase_ == 45) {
          actionCase_ = 0;
          action_ = null;
          onChanged();
        }
      } else {
        if (actionCase_ == 45) {
          actionCase_ = 0;
          action_ = null;
        }
        stakeChangeCandidateBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iotextypes.StakeChangeCandidate stakeChangeCandidate = 45;</code>
     */
    public com.github.iotexproject.grpc.types.StakeChangeCandidate.Builder getStakeChangeCandidateBuilder() {
      return getStakeChangeCandidateFieldBuilder().getBuilder();
    }
    /**
     * <code>.iotextypes.StakeChangeCandidate stakeChangeCandidate = 45;</code>
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.StakeChangeCandidateOrBuilder getStakeChangeCandidateOrBuilder() {
      if ((actionCase_ == 45) && (stakeChangeCandidateBuilder_ != null)) {
        return stakeChangeCandidateBuilder_.getMessageOrBuilder();
      } else {
        if (actionCase_ == 45) {
          return (com.github.iotexproject.grpc.types.StakeChangeCandidate) action_;
        }
        return com.github.iotexproject.grpc.types.StakeChangeCandidate.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.StakeChangeCandidate stakeChangeCandidate = 45;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.iotexproject.grpc.types.StakeChangeCandidate, com.github.iotexproject.grpc.types.StakeChangeCandidate.Builder, com.github.iotexproject.grpc.types.StakeChangeCandidateOrBuilder> 
        getStakeChangeCandidateFieldBuilder() {
      if (stakeChangeCandidateBuilder_ == null) {
        if (!(actionCase_ == 45)) {
          action_ = com.github.iotexproject.grpc.types.StakeChangeCandidate.getDefaultInstance();
        }
        stakeChangeCandidateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.iotexproject.grpc.types.StakeChangeCandidate, com.github.iotexproject.grpc.types.StakeChangeCandidate.Builder, com.github.iotexproject.grpc.types.StakeChangeCandidateOrBuilder>(
                (com.github.iotexproject.grpc.types.StakeChangeCandidate) action_,
                getParentForChildren(),
                isClean());
        action_ = null;
      }
      actionCase_ = 45;
      onChanged();;
      return stakeChangeCandidateBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.iotexproject.grpc.types.StakeTransferOwnership, com.github.iotexproject.grpc.types.StakeTransferOwnership.Builder, com.github.iotexproject.grpc.types.StakeTransferOwnershipOrBuilder> stakeTransferOwnershipBuilder_;
    /**
     * <code>.iotextypes.StakeTransferOwnership stakeTransferOwnership = 46;</code>
     * @return Whether the stakeTransferOwnership field is set.
     */
    @java.lang.Override
    public boolean hasStakeTransferOwnership() {
      return actionCase_ == 46;
    }
    /**
     * <code>.iotextypes.StakeTransferOwnership stakeTransferOwnership = 46;</code>
     * @return The stakeTransferOwnership.
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.StakeTransferOwnership getStakeTransferOwnership() {
      if (stakeTransferOwnershipBuilder_ == null) {
        if (actionCase_ == 46) {
          return (com.github.iotexproject.grpc.types.StakeTransferOwnership) action_;
        }
        return com.github.iotexproject.grpc.types.StakeTransferOwnership.getDefaultInstance();
      } else {
        if (actionCase_ == 46) {
          return stakeTransferOwnershipBuilder_.getMessage();
        }
        return com.github.iotexproject.grpc.types.StakeTransferOwnership.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.StakeTransferOwnership stakeTransferOwnership = 46;</code>
     */
    public Builder setStakeTransferOwnership(com.github.iotexproject.grpc.types.StakeTransferOwnership value) {
      if (stakeTransferOwnershipBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        action_ = value;
        onChanged();
      } else {
        stakeTransferOwnershipBuilder_.setMessage(value);
      }
      actionCase_ = 46;
      return this;
    }
    /**
     * <code>.iotextypes.StakeTransferOwnership stakeTransferOwnership = 46;</code>
     */
    public Builder setStakeTransferOwnership(
        com.github.iotexproject.grpc.types.StakeTransferOwnership.Builder builderForValue) {
      if (stakeTransferOwnershipBuilder_ == null) {
        action_ = builderForValue.build();
        onChanged();
      } else {
        stakeTransferOwnershipBuilder_.setMessage(builderForValue.build());
      }
      actionCase_ = 46;
      return this;
    }
    /**
     * <code>.iotextypes.StakeTransferOwnership stakeTransferOwnership = 46;</code>
     */
    public Builder mergeStakeTransferOwnership(com.github.iotexproject.grpc.types.StakeTransferOwnership value) {
      if (stakeTransferOwnershipBuilder_ == null) {
        if (actionCase_ == 46 &&
            action_ != com.github.iotexproject.grpc.types.StakeTransferOwnership.getDefaultInstance()) {
          action_ = com.github.iotexproject.grpc.types.StakeTransferOwnership.newBuilder((com.github.iotexproject.grpc.types.StakeTransferOwnership) action_)
              .mergeFrom(value).buildPartial();
        } else {
          action_ = value;
        }
        onChanged();
      } else {
        if (actionCase_ == 46) {
          stakeTransferOwnershipBuilder_.mergeFrom(value);
        }
        stakeTransferOwnershipBuilder_.setMessage(value);
      }
      actionCase_ = 46;
      return this;
    }
    /**
     * <code>.iotextypes.StakeTransferOwnership stakeTransferOwnership = 46;</code>
     */
    public Builder clearStakeTransferOwnership() {
      if (stakeTransferOwnershipBuilder_ == null) {
        if (actionCase_ == 46) {
          actionCase_ = 0;
          action_ = null;
          onChanged();
        }
      } else {
        if (actionCase_ == 46) {
          actionCase_ = 0;
          action_ = null;
        }
        stakeTransferOwnershipBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iotextypes.StakeTransferOwnership stakeTransferOwnership = 46;</code>
     */
    public com.github.iotexproject.grpc.types.StakeTransferOwnership.Builder getStakeTransferOwnershipBuilder() {
      return getStakeTransferOwnershipFieldBuilder().getBuilder();
    }
    /**
     * <code>.iotextypes.StakeTransferOwnership stakeTransferOwnership = 46;</code>
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.StakeTransferOwnershipOrBuilder getStakeTransferOwnershipOrBuilder() {
      if ((actionCase_ == 46) && (stakeTransferOwnershipBuilder_ != null)) {
        return stakeTransferOwnershipBuilder_.getMessageOrBuilder();
      } else {
        if (actionCase_ == 46) {
          return (com.github.iotexproject.grpc.types.StakeTransferOwnership) action_;
        }
        return com.github.iotexproject.grpc.types.StakeTransferOwnership.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.StakeTransferOwnership stakeTransferOwnership = 46;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.iotexproject.grpc.types.StakeTransferOwnership, com.github.iotexproject.grpc.types.StakeTransferOwnership.Builder, com.github.iotexproject.grpc.types.StakeTransferOwnershipOrBuilder> 
        getStakeTransferOwnershipFieldBuilder() {
      if (stakeTransferOwnershipBuilder_ == null) {
        if (!(actionCase_ == 46)) {
          action_ = com.github.iotexproject.grpc.types.StakeTransferOwnership.getDefaultInstance();
        }
        stakeTransferOwnershipBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.iotexproject.grpc.types.StakeTransferOwnership, com.github.iotexproject.grpc.types.StakeTransferOwnership.Builder, com.github.iotexproject.grpc.types.StakeTransferOwnershipOrBuilder>(
                (com.github.iotexproject.grpc.types.StakeTransferOwnership) action_,
                getParentForChildren(),
                isClean());
        action_ = null;
      }
      actionCase_ = 46;
      onChanged();;
      return stakeTransferOwnershipBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.iotexproject.grpc.types.CandidateRegister, com.github.iotexproject.grpc.types.CandidateRegister.Builder, com.github.iotexproject.grpc.types.CandidateRegisterOrBuilder> candidateRegisterBuilder_;
    /**
     * <code>.iotextypes.CandidateRegister candidateRegister = 47;</code>
     * @return Whether the candidateRegister field is set.
     */
    @java.lang.Override
    public boolean hasCandidateRegister() {
      return actionCase_ == 47;
    }
    /**
     * <code>.iotextypes.CandidateRegister candidateRegister = 47;</code>
     * @return The candidateRegister.
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.CandidateRegister getCandidateRegister() {
      if (candidateRegisterBuilder_ == null) {
        if (actionCase_ == 47) {
          return (com.github.iotexproject.grpc.types.CandidateRegister) action_;
        }
        return com.github.iotexproject.grpc.types.CandidateRegister.getDefaultInstance();
      } else {
        if (actionCase_ == 47) {
          return candidateRegisterBuilder_.getMessage();
        }
        return com.github.iotexproject.grpc.types.CandidateRegister.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.CandidateRegister candidateRegister = 47;</code>
     */
    public Builder setCandidateRegister(com.github.iotexproject.grpc.types.CandidateRegister value) {
      if (candidateRegisterBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        action_ = value;
        onChanged();
      } else {
        candidateRegisterBuilder_.setMessage(value);
      }
      actionCase_ = 47;
      return this;
    }
    /**
     * <code>.iotextypes.CandidateRegister candidateRegister = 47;</code>
     */
    public Builder setCandidateRegister(
        com.github.iotexproject.grpc.types.CandidateRegister.Builder builderForValue) {
      if (candidateRegisterBuilder_ == null) {
        action_ = builderForValue.build();
        onChanged();
      } else {
        candidateRegisterBuilder_.setMessage(builderForValue.build());
      }
      actionCase_ = 47;
      return this;
    }
    /**
     * <code>.iotextypes.CandidateRegister candidateRegister = 47;</code>
     */
    public Builder mergeCandidateRegister(com.github.iotexproject.grpc.types.CandidateRegister value) {
      if (candidateRegisterBuilder_ == null) {
        if (actionCase_ == 47 &&
            action_ != com.github.iotexproject.grpc.types.CandidateRegister.getDefaultInstance()) {
          action_ = com.github.iotexproject.grpc.types.CandidateRegister.newBuilder((com.github.iotexproject.grpc.types.CandidateRegister) action_)
              .mergeFrom(value).buildPartial();
        } else {
          action_ = value;
        }
        onChanged();
      } else {
        if (actionCase_ == 47) {
          candidateRegisterBuilder_.mergeFrom(value);
        }
        candidateRegisterBuilder_.setMessage(value);
      }
      actionCase_ = 47;
      return this;
    }
    /**
     * <code>.iotextypes.CandidateRegister candidateRegister = 47;</code>
     */
    public Builder clearCandidateRegister() {
      if (candidateRegisterBuilder_ == null) {
        if (actionCase_ == 47) {
          actionCase_ = 0;
          action_ = null;
          onChanged();
        }
      } else {
        if (actionCase_ == 47) {
          actionCase_ = 0;
          action_ = null;
        }
        candidateRegisterBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iotextypes.CandidateRegister candidateRegister = 47;</code>
     */
    public com.github.iotexproject.grpc.types.CandidateRegister.Builder getCandidateRegisterBuilder() {
      return getCandidateRegisterFieldBuilder().getBuilder();
    }
    /**
     * <code>.iotextypes.CandidateRegister candidateRegister = 47;</code>
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.CandidateRegisterOrBuilder getCandidateRegisterOrBuilder() {
      if ((actionCase_ == 47) && (candidateRegisterBuilder_ != null)) {
        return candidateRegisterBuilder_.getMessageOrBuilder();
      } else {
        if (actionCase_ == 47) {
          return (com.github.iotexproject.grpc.types.CandidateRegister) action_;
        }
        return com.github.iotexproject.grpc.types.CandidateRegister.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.CandidateRegister candidateRegister = 47;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.iotexproject.grpc.types.CandidateRegister, com.github.iotexproject.grpc.types.CandidateRegister.Builder, com.github.iotexproject.grpc.types.CandidateRegisterOrBuilder> 
        getCandidateRegisterFieldBuilder() {
      if (candidateRegisterBuilder_ == null) {
        if (!(actionCase_ == 47)) {
          action_ = com.github.iotexproject.grpc.types.CandidateRegister.getDefaultInstance();
        }
        candidateRegisterBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.iotexproject.grpc.types.CandidateRegister, com.github.iotexproject.grpc.types.CandidateRegister.Builder, com.github.iotexproject.grpc.types.CandidateRegisterOrBuilder>(
                (com.github.iotexproject.grpc.types.CandidateRegister) action_,
                getParentForChildren(),
                isClean());
        action_ = null;
      }
      actionCase_ = 47;
      onChanged();;
      return candidateRegisterBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.iotexproject.grpc.types.CandidateBasicInfo, com.github.iotexproject.grpc.types.CandidateBasicInfo.Builder, com.github.iotexproject.grpc.types.CandidateBasicInfoOrBuilder> candidateUpdateBuilder_;
    /**
     * <code>.iotextypes.CandidateBasicInfo candidateUpdate = 48;</code>
     * @return Whether the candidateUpdate field is set.
     */
    @java.lang.Override
    public boolean hasCandidateUpdate() {
      return actionCase_ == 48;
    }
    /**
     * <code>.iotextypes.CandidateBasicInfo candidateUpdate = 48;</code>
     * @return The candidateUpdate.
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.CandidateBasicInfo getCandidateUpdate() {
      if (candidateUpdateBuilder_ == null) {
        if (actionCase_ == 48) {
          return (com.github.iotexproject.grpc.types.CandidateBasicInfo) action_;
        }
        return com.github.iotexproject.grpc.types.CandidateBasicInfo.getDefaultInstance();
      } else {
        if (actionCase_ == 48) {
          return candidateUpdateBuilder_.getMessage();
        }
        return com.github.iotexproject.grpc.types.CandidateBasicInfo.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.CandidateBasicInfo candidateUpdate = 48;</code>
     */
    public Builder setCandidateUpdate(com.github.iotexproject.grpc.types.CandidateBasicInfo value) {
      if (candidateUpdateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        action_ = value;
        onChanged();
      } else {
        candidateUpdateBuilder_.setMessage(value);
      }
      actionCase_ = 48;
      return this;
    }
    /**
     * <code>.iotextypes.CandidateBasicInfo candidateUpdate = 48;</code>
     */
    public Builder setCandidateUpdate(
        com.github.iotexproject.grpc.types.CandidateBasicInfo.Builder builderForValue) {
      if (candidateUpdateBuilder_ == null) {
        action_ = builderForValue.build();
        onChanged();
      } else {
        candidateUpdateBuilder_.setMessage(builderForValue.build());
      }
      actionCase_ = 48;
      return this;
    }
    /**
     * <code>.iotextypes.CandidateBasicInfo candidateUpdate = 48;</code>
     */
    public Builder mergeCandidateUpdate(com.github.iotexproject.grpc.types.CandidateBasicInfo value) {
      if (candidateUpdateBuilder_ == null) {
        if (actionCase_ == 48 &&
            action_ != com.github.iotexproject.grpc.types.CandidateBasicInfo.getDefaultInstance()) {
          action_ = com.github.iotexproject.grpc.types.CandidateBasicInfo.newBuilder((com.github.iotexproject.grpc.types.CandidateBasicInfo) action_)
              .mergeFrom(value).buildPartial();
        } else {
          action_ = value;
        }
        onChanged();
      } else {
        if (actionCase_ == 48) {
          candidateUpdateBuilder_.mergeFrom(value);
        }
        candidateUpdateBuilder_.setMessage(value);
      }
      actionCase_ = 48;
      return this;
    }
    /**
     * <code>.iotextypes.CandidateBasicInfo candidateUpdate = 48;</code>
     */
    public Builder clearCandidateUpdate() {
      if (candidateUpdateBuilder_ == null) {
        if (actionCase_ == 48) {
          actionCase_ = 0;
          action_ = null;
          onChanged();
        }
      } else {
        if (actionCase_ == 48) {
          actionCase_ = 0;
          action_ = null;
        }
        candidateUpdateBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iotextypes.CandidateBasicInfo candidateUpdate = 48;</code>
     */
    public com.github.iotexproject.grpc.types.CandidateBasicInfo.Builder getCandidateUpdateBuilder() {
      return getCandidateUpdateFieldBuilder().getBuilder();
    }
    /**
     * <code>.iotextypes.CandidateBasicInfo candidateUpdate = 48;</code>
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.CandidateBasicInfoOrBuilder getCandidateUpdateOrBuilder() {
      if ((actionCase_ == 48) && (candidateUpdateBuilder_ != null)) {
        return candidateUpdateBuilder_.getMessageOrBuilder();
      } else {
        if (actionCase_ == 48) {
          return (com.github.iotexproject.grpc.types.CandidateBasicInfo) action_;
        }
        return com.github.iotexproject.grpc.types.CandidateBasicInfo.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.CandidateBasicInfo candidateUpdate = 48;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.iotexproject.grpc.types.CandidateBasicInfo, com.github.iotexproject.grpc.types.CandidateBasicInfo.Builder, com.github.iotexproject.grpc.types.CandidateBasicInfoOrBuilder> 
        getCandidateUpdateFieldBuilder() {
      if (candidateUpdateBuilder_ == null) {
        if (!(actionCase_ == 48)) {
          action_ = com.github.iotexproject.grpc.types.CandidateBasicInfo.getDefaultInstance();
        }
        candidateUpdateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.iotexproject.grpc.types.CandidateBasicInfo, com.github.iotexproject.grpc.types.CandidateBasicInfo.Builder, com.github.iotexproject.grpc.types.CandidateBasicInfoOrBuilder>(
                (com.github.iotexproject.grpc.types.CandidateBasicInfo) action_,
                getParentForChildren(),
                isClean());
        action_ = null;
      }
      actionCase_ = 48;
      onChanged();;
      return candidateUpdateBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.iotexproject.grpc.types.CandidateActivate, com.github.iotexproject.grpc.types.CandidateActivate.Builder, com.github.iotexproject.grpc.types.CandidateActivateOrBuilder> candidateActivateBuilder_;
    /**
     * <code>.iotextypes.CandidateActivate candidateActivate = 49;</code>
     * @return Whether the candidateActivate field is set.
     */
    @java.lang.Override
    public boolean hasCandidateActivate() {
      return actionCase_ == 49;
    }
    /**
     * <code>.iotextypes.CandidateActivate candidateActivate = 49;</code>
     * @return The candidateActivate.
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.CandidateActivate getCandidateActivate() {
      if (candidateActivateBuilder_ == null) {
        if (actionCase_ == 49) {
          return (com.github.iotexproject.grpc.types.CandidateActivate) action_;
        }
        return com.github.iotexproject.grpc.types.CandidateActivate.getDefaultInstance();
      } else {
        if (actionCase_ == 49) {
          return candidateActivateBuilder_.getMessage();
        }
        return com.github.iotexproject.grpc.types.CandidateActivate.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.CandidateActivate candidateActivate = 49;</code>
     */
    public Builder setCandidateActivate(com.github.iotexproject.grpc.types.CandidateActivate value) {
      if (candidateActivateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        action_ = value;
        onChanged();
      } else {
        candidateActivateBuilder_.setMessage(value);
      }
      actionCase_ = 49;
      return this;
    }
    /**
     * <code>.iotextypes.CandidateActivate candidateActivate = 49;</code>
     */
    public Builder setCandidateActivate(
        com.github.iotexproject.grpc.types.CandidateActivate.Builder builderForValue) {
      if (candidateActivateBuilder_ == null) {
        action_ = builderForValue.build();
        onChanged();
      } else {
        candidateActivateBuilder_.setMessage(builderForValue.build());
      }
      actionCase_ = 49;
      return this;
    }
    /**
     * <code>.iotextypes.CandidateActivate candidateActivate = 49;</code>
     */
    public Builder mergeCandidateActivate(com.github.iotexproject.grpc.types.CandidateActivate value) {
      if (candidateActivateBuilder_ == null) {
        if (actionCase_ == 49 &&
            action_ != com.github.iotexproject.grpc.types.CandidateActivate.getDefaultInstance()) {
          action_ = com.github.iotexproject.grpc.types.CandidateActivate.newBuilder((com.github.iotexproject.grpc.types.CandidateActivate) action_)
              .mergeFrom(value).buildPartial();
        } else {
          action_ = value;
        }
        onChanged();
      } else {
        if (actionCase_ == 49) {
          candidateActivateBuilder_.mergeFrom(value);
        }
        candidateActivateBuilder_.setMessage(value);
      }
      actionCase_ = 49;
      return this;
    }
    /**
     * <code>.iotextypes.CandidateActivate candidateActivate = 49;</code>
     */
    public Builder clearCandidateActivate() {
      if (candidateActivateBuilder_ == null) {
        if (actionCase_ == 49) {
          actionCase_ = 0;
          action_ = null;
          onChanged();
        }
      } else {
        if (actionCase_ == 49) {
          actionCase_ = 0;
          action_ = null;
        }
        candidateActivateBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iotextypes.CandidateActivate candidateActivate = 49;</code>
     */
    public com.github.iotexproject.grpc.types.CandidateActivate.Builder getCandidateActivateBuilder() {
      return getCandidateActivateFieldBuilder().getBuilder();
    }
    /**
     * <code>.iotextypes.CandidateActivate candidateActivate = 49;</code>
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.CandidateActivateOrBuilder getCandidateActivateOrBuilder() {
      if ((actionCase_ == 49) && (candidateActivateBuilder_ != null)) {
        return candidateActivateBuilder_.getMessageOrBuilder();
      } else {
        if (actionCase_ == 49) {
          return (com.github.iotexproject.grpc.types.CandidateActivate) action_;
        }
        return com.github.iotexproject.grpc.types.CandidateActivate.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.CandidateActivate candidateActivate = 49;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.iotexproject.grpc.types.CandidateActivate, com.github.iotexproject.grpc.types.CandidateActivate.Builder, com.github.iotexproject.grpc.types.CandidateActivateOrBuilder> 
        getCandidateActivateFieldBuilder() {
      if (candidateActivateBuilder_ == null) {
        if (!(actionCase_ == 49)) {
          action_ = com.github.iotexproject.grpc.types.CandidateActivate.getDefaultInstance();
        }
        candidateActivateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.iotexproject.grpc.types.CandidateActivate, com.github.iotexproject.grpc.types.CandidateActivate.Builder, com.github.iotexproject.grpc.types.CandidateActivateOrBuilder>(
                (com.github.iotexproject.grpc.types.CandidateActivate) action_,
                getParentForChildren(),
                isClean());
        action_ = null;
      }
      actionCase_ = 49;
      onChanged();;
      return candidateActivateBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.iotexproject.grpc.types.CandidateEndorsement, com.github.iotexproject.grpc.types.CandidateEndorsement.Builder, com.github.iotexproject.grpc.types.CandidateEndorsementOrBuilder> candidateEndorsementBuilder_;
    /**
     * <code>.iotextypes.CandidateEndorsement candidateEndorsement = 51;</code>
     * @return Whether the candidateEndorsement field is set.
     */
    @java.lang.Override
    public boolean hasCandidateEndorsement() {
      return actionCase_ == 51;
    }
    /**
     * <code>.iotextypes.CandidateEndorsement candidateEndorsement = 51;</code>
     * @return The candidateEndorsement.
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.CandidateEndorsement getCandidateEndorsement() {
      if (candidateEndorsementBuilder_ == null) {
        if (actionCase_ == 51) {
          return (com.github.iotexproject.grpc.types.CandidateEndorsement) action_;
        }
        return com.github.iotexproject.grpc.types.CandidateEndorsement.getDefaultInstance();
      } else {
        if (actionCase_ == 51) {
          return candidateEndorsementBuilder_.getMessage();
        }
        return com.github.iotexproject.grpc.types.CandidateEndorsement.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.CandidateEndorsement candidateEndorsement = 51;</code>
     */
    public Builder setCandidateEndorsement(com.github.iotexproject.grpc.types.CandidateEndorsement value) {
      if (candidateEndorsementBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        action_ = value;
        onChanged();
      } else {
        candidateEndorsementBuilder_.setMessage(value);
      }
      actionCase_ = 51;
      return this;
    }
    /**
     * <code>.iotextypes.CandidateEndorsement candidateEndorsement = 51;</code>
     */
    public Builder setCandidateEndorsement(
        com.github.iotexproject.grpc.types.CandidateEndorsement.Builder builderForValue) {
      if (candidateEndorsementBuilder_ == null) {
        action_ = builderForValue.build();
        onChanged();
      } else {
        candidateEndorsementBuilder_.setMessage(builderForValue.build());
      }
      actionCase_ = 51;
      return this;
    }
    /**
     * <code>.iotextypes.CandidateEndorsement candidateEndorsement = 51;</code>
     */
    public Builder mergeCandidateEndorsement(com.github.iotexproject.grpc.types.CandidateEndorsement value) {
      if (candidateEndorsementBuilder_ == null) {
        if (actionCase_ == 51 &&
            action_ != com.github.iotexproject.grpc.types.CandidateEndorsement.getDefaultInstance()) {
          action_ = com.github.iotexproject.grpc.types.CandidateEndorsement.newBuilder((com.github.iotexproject.grpc.types.CandidateEndorsement) action_)
              .mergeFrom(value).buildPartial();
        } else {
          action_ = value;
        }
        onChanged();
      } else {
        if (actionCase_ == 51) {
          candidateEndorsementBuilder_.mergeFrom(value);
        }
        candidateEndorsementBuilder_.setMessage(value);
      }
      actionCase_ = 51;
      return this;
    }
    /**
     * <code>.iotextypes.CandidateEndorsement candidateEndorsement = 51;</code>
     */
    public Builder clearCandidateEndorsement() {
      if (candidateEndorsementBuilder_ == null) {
        if (actionCase_ == 51) {
          actionCase_ = 0;
          action_ = null;
          onChanged();
        }
      } else {
        if (actionCase_ == 51) {
          actionCase_ = 0;
          action_ = null;
        }
        candidateEndorsementBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iotextypes.CandidateEndorsement candidateEndorsement = 51;</code>
     */
    public com.github.iotexproject.grpc.types.CandidateEndorsement.Builder getCandidateEndorsementBuilder() {
      return getCandidateEndorsementFieldBuilder().getBuilder();
    }
    /**
     * <code>.iotextypes.CandidateEndorsement candidateEndorsement = 51;</code>
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.CandidateEndorsementOrBuilder getCandidateEndorsementOrBuilder() {
      if ((actionCase_ == 51) && (candidateEndorsementBuilder_ != null)) {
        return candidateEndorsementBuilder_.getMessageOrBuilder();
      } else {
        if (actionCase_ == 51) {
          return (com.github.iotexproject.grpc.types.CandidateEndorsement) action_;
        }
        return com.github.iotexproject.grpc.types.CandidateEndorsement.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.CandidateEndorsement candidateEndorsement = 51;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.iotexproject.grpc.types.CandidateEndorsement, com.github.iotexproject.grpc.types.CandidateEndorsement.Builder, com.github.iotexproject.grpc.types.CandidateEndorsementOrBuilder> 
        getCandidateEndorsementFieldBuilder() {
      if (candidateEndorsementBuilder_ == null) {
        if (!(actionCase_ == 51)) {
          action_ = com.github.iotexproject.grpc.types.CandidateEndorsement.getDefaultInstance();
        }
        candidateEndorsementBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.iotexproject.grpc.types.CandidateEndorsement, com.github.iotexproject.grpc.types.CandidateEndorsement.Builder, com.github.iotexproject.grpc.types.CandidateEndorsementOrBuilder>(
                (com.github.iotexproject.grpc.types.CandidateEndorsement) action_,
                getParentForChildren(),
                isClean());
        action_ = null;
      }
      actionCase_ = 51;
      onChanged();;
      return candidateEndorsementBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.iotexproject.grpc.types.CandidateTransferOwnership, com.github.iotexproject.grpc.types.CandidateTransferOwnership.Builder, com.github.iotexproject.grpc.types.CandidateTransferOwnershipOrBuilder> candidateTransferOwnershipBuilder_;
    /**
     * <code>.iotextypes.CandidateTransferOwnership candidateTransferOwnership = 52;</code>
     * @return Whether the candidateTransferOwnership field is set.
     */
    @java.lang.Override
    public boolean hasCandidateTransferOwnership() {
      return actionCase_ == 52;
    }
    /**
     * <code>.iotextypes.CandidateTransferOwnership candidateTransferOwnership = 52;</code>
     * @return The candidateTransferOwnership.
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.CandidateTransferOwnership getCandidateTransferOwnership() {
      if (candidateTransferOwnershipBuilder_ == null) {
        if (actionCase_ == 52) {
          return (com.github.iotexproject.grpc.types.CandidateTransferOwnership) action_;
        }
        return com.github.iotexproject.grpc.types.CandidateTransferOwnership.getDefaultInstance();
      } else {
        if (actionCase_ == 52) {
          return candidateTransferOwnershipBuilder_.getMessage();
        }
        return com.github.iotexproject.grpc.types.CandidateTransferOwnership.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.CandidateTransferOwnership candidateTransferOwnership = 52;</code>
     */
    public Builder setCandidateTransferOwnership(com.github.iotexproject.grpc.types.CandidateTransferOwnership value) {
      if (candidateTransferOwnershipBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        action_ = value;
        onChanged();
      } else {
        candidateTransferOwnershipBuilder_.setMessage(value);
      }
      actionCase_ = 52;
      return this;
    }
    /**
     * <code>.iotextypes.CandidateTransferOwnership candidateTransferOwnership = 52;</code>
     */
    public Builder setCandidateTransferOwnership(
        com.github.iotexproject.grpc.types.CandidateTransferOwnership.Builder builderForValue) {
      if (candidateTransferOwnershipBuilder_ == null) {
        action_ = builderForValue.build();
        onChanged();
      } else {
        candidateTransferOwnershipBuilder_.setMessage(builderForValue.build());
      }
      actionCase_ = 52;
      return this;
    }
    /**
     * <code>.iotextypes.CandidateTransferOwnership candidateTransferOwnership = 52;</code>
     */
    public Builder mergeCandidateTransferOwnership(com.github.iotexproject.grpc.types.CandidateTransferOwnership value) {
      if (candidateTransferOwnershipBuilder_ == null) {
        if (actionCase_ == 52 &&
            action_ != com.github.iotexproject.grpc.types.CandidateTransferOwnership.getDefaultInstance()) {
          action_ = com.github.iotexproject.grpc.types.CandidateTransferOwnership.newBuilder((com.github.iotexproject.grpc.types.CandidateTransferOwnership) action_)
              .mergeFrom(value).buildPartial();
        } else {
          action_ = value;
        }
        onChanged();
      } else {
        if (actionCase_ == 52) {
          candidateTransferOwnershipBuilder_.mergeFrom(value);
        }
        candidateTransferOwnershipBuilder_.setMessage(value);
      }
      actionCase_ = 52;
      return this;
    }
    /**
     * <code>.iotextypes.CandidateTransferOwnership candidateTransferOwnership = 52;</code>
     */
    public Builder clearCandidateTransferOwnership() {
      if (candidateTransferOwnershipBuilder_ == null) {
        if (actionCase_ == 52) {
          actionCase_ = 0;
          action_ = null;
          onChanged();
        }
      } else {
        if (actionCase_ == 52) {
          actionCase_ = 0;
          action_ = null;
        }
        candidateTransferOwnershipBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iotextypes.CandidateTransferOwnership candidateTransferOwnership = 52;</code>
     */
    public com.github.iotexproject.grpc.types.CandidateTransferOwnership.Builder getCandidateTransferOwnershipBuilder() {
      return getCandidateTransferOwnershipFieldBuilder().getBuilder();
    }
    /**
     * <code>.iotextypes.CandidateTransferOwnership candidateTransferOwnership = 52;</code>
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.CandidateTransferOwnershipOrBuilder getCandidateTransferOwnershipOrBuilder() {
      if ((actionCase_ == 52) && (candidateTransferOwnershipBuilder_ != null)) {
        return candidateTransferOwnershipBuilder_.getMessageOrBuilder();
      } else {
        if (actionCase_ == 52) {
          return (com.github.iotexproject.grpc.types.CandidateTransferOwnership) action_;
        }
        return com.github.iotexproject.grpc.types.CandidateTransferOwnership.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.CandidateTransferOwnership candidateTransferOwnership = 52;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.iotexproject.grpc.types.CandidateTransferOwnership, com.github.iotexproject.grpc.types.CandidateTransferOwnership.Builder, com.github.iotexproject.grpc.types.CandidateTransferOwnershipOrBuilder> 
        getCandidateTransferOwnershipFieldBuilder() {
      if (candidateTransferOwnershipBuilder_ == null) {
        if (!(actionCase_ == 52)) {
          action_ = com.github.iotexproject.grpc.types.CandidateTransferOwnership.getDefaultInstance();
        }
        candidateTransferOwnershipBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.iotexproject.grpc.types.CandidateTransferOwnership, com.github.iotexproject.grpc.types.CandidateTransferOwnership.Builder, com.github.iotexproject.grpc.types.CandidateTransferOwnershipOrBuilder>(
                (com.github.iotexproject.grpc.types.CandidateTransferOwnership) action_,
                getParentForChildren(),
                isClean());
        action_ = null;
      }
      actionCase_ = 52;
      onChanged();;
      return candidateTransferOwnershipBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.iotexproject.grpc.types.StakeMigrate, com.github.iotexproject.grpc.types.StakeMigrate.Builder, com.github.iotexproject.grpc.types.StakeMigrateOrBuilder> stakeMigrateBuilder_;
    /**
     * <code>.iotextypes.StakeMigrate stakeMigrate = 53;</code>
     * @return Whether the stakeMigrate field is set.
     */
    @java.lang.Override
    public boolean hasStakeMigrate() {
      return actionCase_ == 53;
    }
    /**
     * <code>.iotextypes.StakeMigrate stakeMigrate = 53;</code>
     * @return The stakeMigrate.
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.StakeMigrate getStakeMigrate() {
      if (stakeMigrateBuilder_ == null) {
        if (actionCase_ == 53) {
          return (com.github.iotexproject.grpc.types.StakeMigrate) action_;
        }
        return com.github.iotexproject.grpc.types.StakeMigrate.getDefaultInstance();
      } else {
        if (actionCase_ == 53) {
          return stakeMigrateBuilder_.getMessage();
        }
        return com.github.iotexproject.grpc.types.StakeMigrate.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.StakeMigrate stakeMigrate = 53;</code>
     */
    public Builder setStakeMigrate(com.github.iotexproject.grpc.types.StakeMigrate value) {
      if (stakeMigrateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        action_ = value;
        onChanged();
      } else {
        stakeMigrateBuilder_.setMessage(value);
      }
      actionCase_ = 53;
      return this;
    }
    /**
     * <code>.iotextypes.StakeMigrate stakeMigrate = 53;</code>
     */
    public Builder setStakeMigrate(
        com.github.iotexproject.grpc.types.StakeMigrate.Builder builderForValue) {
      if (stakeMigrateBuilder_ == null) {
        action_ = builderForValue.build();
        onChanged();
      } else {
        stakeMigrateBuilder_.setMessage(builderForValue.build());
      }
      actionCase_ = 53;
      return this;
    }
    /**
     * <code>.iotextypes.StakeMigrate stakeMigrate = 53;</code>
     */
    public Builder mergeStakeMigrate(com.github.iotexproject.grpc.types.StakeMigrate value) {
      if (stakeMigrateBuilder_ == null) {
        if (actionCase_ == 53 &&
            action_ != com.github.iotexproject.grpc.types.StakeMigrate.getDefaultInstance()) {
          action_ = com.github.iotexproject.grpc.types.StakeMigrate.newBuilder((com.github.iotexproject.grpc.types.StakeMigrate) action_)
              .mergeFrom(value).buildPartial();
        } else {
          action_ = value;
        }
        onChanged();
      } else {
        if (actionCase_ == 53) {
          stakeMigrateBuilder_.mergeFrom(value);
        }
        stakeMigrateBuilder_.setMessage(value);
      }
      actionCase_ = 53;
      return this;
    }
    /**
     * <code>.iotextypes.StakeMigrate stakeMigrate = 53;</code>
     */
    public Builder clearStakeMigrate() {
      if (stakeMigrateBuilder_ == null) {
        if (actionCase_ == 53) {
          actionCase_ = 0;
          action_ = null;
          onChanged();
        }
      } else {
        if (actionCase_ == 53) {
          actionCase_ = 0;
          action_ = null;
        }
        stakeMigrateBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.iotextypes.StakeMigrate stakeMigrate = 53;</code>
     */
    public com.github.iotexproject.grpc.types.StakeMigrate.Builder getStakeMigrateBuilder() {
      return getStakeMigrateFieldBuilder().getBuilder();
    }
    /**
     * <code>.iotextypes.StakeMigrate stakeMigrate = 53;</code>
     */
    @java.lang.Override
    public com.github.iotexproject.grpc.types.StakeMigrateOrBuilder getStakeMigrateOrBuilder() {
      if ((actionCase_ == 53) && (stakeMigrateBuilder_ != null)) {
        return stakeMigrateBuilder_.getMessageOrBuilder();
      } else {
        if (actionCase_ == 53) {
          return (com.github.iotexproject.grpc.types.StakeMigrate) action_;
        }
        return com.github.iotexproject.grpc.types.StakeMigrate.getDefaultInstance();
      }
    }
    /**
     * <code>.iotextypes.StakeMigrate stakeMigrate = 53;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.iotexproject.grpc.types.StakeMigrate, com.github.iotexproject.grpc.types.StakeMigrate.Builder, com.github.iotexproject.grpc.types.StakeMigrateOrBuilder> 
        getStakeMigrateFieldBuilder() {
      if (stakeMigrateBuilder_ == null) {
        if (!(actionCase_ == 53)) {
          action_ = com.github.iotexproject.grpc.types.StakeMigrate.getDefaultInstance();
        }
        stakeMigrateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.iotexproject.grpc.types.StakeMigrate, com.github.iotexproject.grpc.types.StakeMigrate.Builder, com.github.iotexproject.grpc.types.StakeMigrateOrBuilder>(
                (com.github.iotexproject.grpc.types.StakeMigrate) action_,
                getParentForChildren(),
                isClean());
        action_ = null;
      }
      actionCase_ = 53;
      onChanged();;
      return stakeMigrateBuilder_;
    }

    private java.lang.Object callerAddress_ = "";
    /**
     * <code>string callerAddress = 100;</code>
     * @return The callerAddress.
     */
    public java.lang.String getCallerAddress() {
      java.lang.Object ref = callerAddress_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        callerAddress_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string callerAddress = 100;</code>
     * @return The bytes for callerAddress.
     */
    public com.google.protobuf.ByteString
        getCallerAddressBytes() {
      java.lang.Object ref = callerAddress_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        callerAddress_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string callerAddress = 100;</code>
     * @param value The callerAddress to set.
     * @return This builder for chaining.
     */
    public Builder setCallerAddress(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      callerAddress_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string callerAddress = 100;</code>
     * @return This builder for chaining.
     */
    public Builder clearCallerAddress() {
      
      callerAddress_ = getDefaultInstance().getCallerAddress();
      onChanged();
      return this;
    }
    /**
     * <code>string callerAddress = 100;</code>
     * @param value The bytes for callerAddress to set.
     * @return This builder for chaining.
     */
    public Builder setCallerAddressBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      callerAddress_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object gasPrice_ = "";
    /**
     * <code>string gasPrice = 101;</code>
     * @return The gasPrice.
     */
    public java.lang.String getGasPrice() {
      java.lang.Object ref = gasPrice_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        gasPrice_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string gasPrice = 101;</code>
     * @return The bytes for gasPrice.
     */
    public com.google.protobuf.ByteString
        getGasPriceBytes() {
      java.lang.Object ref = gasPrice_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        gasPrice_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string gasPrice = 101;</code>
     * @param value The gasPrice to set.
     * @return This builder for chaining.
     */
    public Builder setGasPrice(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      gasPrice_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string gasPrice = 101;</code>
     * @return This builder for chaining.
     */
    public Builder clearGasPrice() {
      
      gasPrice_ = getDefaultInstance().getGasPrice();
      onChanged();
      return this;
    }
    /**
     * <code>string gasPrice = 101;</code>
     * @param value The bytes for gasPrice to set.
     * @return This builder for chaining.
     */
    public Builder setGasPriceBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      gasPrice_ = value;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:iotexapi.EstimateActionGasConsumptionRequest)
  }

  // @@protoc_insertion_point(class_scope:iotexapi.EstimateActionGasConsumptionRequest)
  private static final com.github.iotexproject.grpc.api.EstimateActionGasConsumptionRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.github.iotexproject.grpc.api.EstimateActionGasConsumptionRequest();
  }

  public static com.github.iotexproject.grpc.api.EstimateActionGasConsumptionRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<EstimateActionGasConsumptionRequest>
      PARSER = new com.google.protobuf.AbstractParser<EstimateActionGasConsumptionRequest>() {
    @java.lang.Override
    public EstimateActionGasConsumptionRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new EstimateActionGasConsumptionRequest(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<EstimateActionGasConsumptionRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<EstimateActionGasConsumptionRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.github.iotexproject.grpc.api.EstimateActionGasConsumptionRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

